<?xml version='1.0' encoding='UTF-8'?>
<root>
  <system>Mylyn</system>
  <issues>
    <issue>
      <id>232626</id>
      <title>[api] JavaStructureBridge.acceptObject() tests using instanceof IJavaElement</title>
      <description>Build ID: I20080502-0100 Steps To Reproduce: I am creating a structure bridge for AspectJ. When CoreContextPlugin.getStructureBridge() is determining which structure bridge to use for a particular element, the JavaStructureBridge.acceptObject() method is always used instead of my AspectJStructureBridge. AspectJ elements are modelled as special subclasses of IJavaElement. JavaStructureBridge.acceptObject() will return true if the object passed in is a IJavaElement, even if it is an aspect, pointcut, advice, etc. This is a problem because the AspectJStructureBridge can never be used since JavaStructureBridge always steals the object away. Thanks. More information:</description>
      <attachments/>
      <comments>37</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>165809</id>
      <title>allow a repository to be put into offline mode</title>
      <description>Sometimes repositories are inaccessible and synchronization should not be attempted.</description>
      <attachments/>
      <comments>26</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>166609</id>
      <title>[api] improve task externalization API</title>
      <description>The main reason is to eliminate org.w3c.dom.* classes from this API and reduce runtime memory footprint of the task externalizers. As a first step we can introduce own classes for Element, which may use dom classes internally (for now). So, connector's externalizers will only deal with our Element and won't have to change their implementation if we'll need to change externalizer internals. Another benefit of own Element abstraction is that we can have stream-based implementation, at least for writing task list. That should help to speed things up for saving big task lists.</description>
      <attachments/>
      <comments>30</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>191114</id>
      <title>provide HTML-based widget for rendering formatted wiki text in ticket description</title>
      <description>This is for presenting wiki-formatted description of existing Trac tickets. The approach is * create a HTML-based widget (Browser) that replace the current text widget in Description section. * use the wiki.wikiToHtml function supported by Trac XML-RPC plugin to get HTML text of the formatted wiki text.</description>
      <attachments/>
      <comments>68</comments>
      <commenters>7</commenters>
    </issue>
    <issue>
      <id>166406</id>
      <title>Improve query tooltip layout</title>
      <description>Current query tooltip layout look like this: [icon] [server] (sunched: [sync time]) [multiline error details] Completed [x] of [x] (query max: [x]) [progress bar] In this layout error details are not visually separated and hard to read. I suggest to change layout as following: [progress bar] [icon] [server] (sunched: [sync time]) Completed [x] of [x] (query max: [x]) [multiline error details] or [icon] [server] (sunched: [sync time]) [progress bar] Completed [x] of [x] (query max: [x]) [multiline error details]</description>
      <attachments/>
      <comments>71</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>149624</id>
      <title>[api] AbstractRepositoryTask repositoryUrl and task id should not be derived from handleIdentifier</title>
      <description>AbstractRepositoryTask repositoryUrl and task id should not be derived from handleIdentifier. Current API is very confusing and does not give enough flexibility. For example in web provider I have repositoryUrl, task id and task prefix. In some cases (e.g. SourceForge) task prefix is defined per query. Please refactor API to keep separate repositoryUrl, taskUrl (same as current handle identifier) and task id.</description>
      <attachments/>
      <comments>48</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>195079</id>
      <title>duplicate detector for jira</title>
      <description>duplicate detector for jira</description>
      <attachments/>
      <comments>36</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>196585</id>
      <title>Java wrapper for the Trac XmlRpcPlugin Wiki API</title>
      <description>Java wrapper for the Trac XmlRpcPluginWiki API ( http://mylyn.eclipse.org/tractest/xmlrpc ) which implements the WikiRPC API (and could therefore be reused for other Wikis in the future)</description>
      <attachments/>
      <comments>16</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>200117</id>
      <title>[api] support spell checking and hyperlink detection in the source editor of the Wiki Page Editor</title>
      <description>One easy way is to use the RepositoryViewerConfig for the SourceViewer in the editor. A problem is that RepositoryViewerConfig is defined in the org.eclipse.mylyn.internal.tasks.ui.editors package. Can we make it public API?</description>
      <attachments/>
      <comments>16</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>186379</id>
      <title>Determine repository URL on validation</title>
      <description>A JIRA server sends the repository location as a redirect on login. This location should be used as the repository URL in the properties dialog when the connection is validated.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>205886</id>
      <title>support keyboard actions in tasklist</title>
      <description>These actions should be easily accessible through the keyboard: - go to next unread task (n) - go to previous unread task (p) - mark as read (d) - mark as unread (u) Actions already supported: - goto next task (Up) - goto previous task (Down) - open editor (Enter)</description>
      <attachments/>
      <comments>39</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>150663</id>
      <title>make commit comment templates repository or project specific</title>
      <description>It would be nice to generate Trac specific commit comments when a changeset for Trac task is committed. For instance Trac uses #[id] to reference tasks (Example: https://oss.steffenpingel.de/mylar-trac-connector/changeset/110).</description>
      <attachments/>
      <comments>28</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>208488</id>
      <title>[performance] streamline synch after task submit</title>
      <description>Currently after a task is submitted, a full synch is invoked. Instead, let's do the following: * Synch the task that was submitted (already done afaik) * Synch all queries, do NOT check for change tasks</description>
      <attachments/>
      <comments>16</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>207598</id>
      <title>make TaskListToolTip code re-usable</title>
      <description>I realize that Mylyn isn't out there to make a really great generic tooltip class, but by making a couple of methods protected access I'm able to re-use a lot of the code, which saved me a bunch of time.</description>
      <attachments/>
      <comments>11</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>202880</id>
      <title>improve usability and accessibility of the mark/read action</title>
      <description>improve usability and accessibility of the mark/read action. Currently it is only available from the 2nd level submenu which don't even have any accelerators, which makes real pain to review large number of incoming changes.</description>
      <attachments/>
      <comments>16</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>189313</id>
      <title>improve positioning of Task List tooltip</title>
      <description>Popup tooltip in the task list been bothering me for some time. Recent UI improvements for the Task list view made this tooltip feel even worse.</description>
      <attachments/>
      <comments>35</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>116487</id>
      <title>create performance test harness</title>
      <description>To trap performance regressions in interest filtering, etc.</description>
      <attachments/>
      <comments>46</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>193156</id>
      <title>make attachment filename editable</title>
      <description>Allow the user to enter a filename for a patch that is going to be attached to an issue and provide a more meaningful default. BUGID.patch or BUGID-summary-delimited-by-dashes.patch seem good.</description>
      <attachments/>
      <comments>23</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>210590</id>
      <title>[api] add support for creating subtasks</title>
      <description>Provide an action and API for creating subtasks in the tasks framework.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>142084</id>
      <title>bugzilla editor comment layout</title>
      <description>The current layout uses a combination of form sections with TextViewer objects (for displaying text with hyperlink detection and highlighting). We're using the fill horizontal layout which causes the text to wrap nicely when the editor is resized but it leaves excess space at the bottom of the form. One option may be to make the comments a default height and make them scrollable.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>210060</id>
      <title>preselect project for JIRA when creating new tasks and only project exists</title>
      <description>If only one project exists or a task was selected when creating a new task, preselect this product in the wizard.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>196415</id>
      <title>add popup menu command for forcing refresh of all tasks to the Task Repositories view</title>
      <description>I have (by accident) two JIRA accounts on the same system - one has developer access and the other doesn't. Unfortunately I used the non-developer account to set up the queries I use, and now I can't close the tasks. I changed the credentials in the Task Repository propeties, but it doesn't seem to want to listen to that when I synchronize the query tasks. Anyone know how to force a refresh? Mik suggested simply updating the repository attributes (http://wiki.eclipse.org/index.php/Mylyn_FAQ#Why_are_my_updated_repository_attributes_not_showing_up.3F) but that didn't work - some (not all) tasks resolutely show with the old account information.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>203403</id>
      <title>Update to Apache HttpClient 3.1</title>
      <description>The new version of HttpClient allows the use of "sticky" HostConfigurations even with absolute URLs that are used by Axis. Registering a global protocol handler in WebClientUtil.setupHttpClient() would not be necessary anymore: https://issues.apache.org/jira/browse/HTTPCLIENT-634</description>
      <attachments/>
      <comments>19</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>191726</id>
      <title>use strike-through font for resolved dependent tickets</title>
      <description>Bugzilla shows resolved dependent tickets with a strike-through font. Could we have that as well please :) Would that slow it down a lot because it would have to query all the dependent bug tickets for their status....</description>
      <attachments/>
      <comments>26</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>214292</id>
      <title>[api] provide utility methods for creating new tasks using standard task editors</title>
      <description>A public API for creating new tasks using standard Task Editors would allow 3rd party integrators using interactive task creation features outside of Mylyn. Possible solution is to move NewTaskAction.showWizard() method into TasksUiUtil class. Alternatively NewTaskAction can be made public (moved out of the internal package).</description>
      <attachments/>
      <comments>17</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>174564</id>
      <title>Improve JIRA error message when remote API is not active</title>
      <description>If remote API is not enabled the error message displayed by the repository validation is: Bad envelope tag: html</description>
      <attachments/>
      <comments>10</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>179254</id>
      <title>[api] AbstractRepositoryTaskEditor needs to be decomposed</title>
      <description>I think the AbstractRepositoryTaskEditor needs to be split up into several classes to improve its reusability. Although it's pretty easy to write a neat task editor with just a few lines of code (-&gt; TRAC), it's pretty hard if you want to customize the editor in a clean way. I think this could be greatly improved if e.g. the sections would be factored out into their own classes which could be sub-classed. Here are some examples of things that are hard to implement or at least not possible to implement in a clean way and without duplicating code.</description>
      <attachments/>
      <comments>43</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>167941</id>
      <title>resolved bugs hyperlinks in comments should appear in a strikethrought font</title>
      <description>On web interface, everywhere there is a hyperlink to a resolved bug, it appears in a strikethrought font. We need to do the same in bug editor hyperlinks, and in the dependency/blocks fields on attributes section.</description>
      <attachments/>
      <comments>61</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>211147</id>
      <title>recognize priority levels of custom trac priorities</title>
      <description>[Mylyn 2.0 on Eclipse 3.3.1.1 on Mac and PC against Trac 0.11 / XmlRpc] I often use the following priorities as custom priorities in trac: urgent / critical / required (default) / desired / wished This has worked well for the projects I've been on. However the more I use mylyn the more I want it to recognize MY priorities - and both sort and mark them up the same way that trac does. Trac simply puts orders tickets as per order of priorities, and colours them accordingly (middle one being default colouring -&gt; P3 in mylyn). Could mylyn do that too? There's really no need to match the trac defaults exactly - ordering is good enough yardstick for assigning icons (and certainly good enough for ordering. (this isn't really a bug, but a feature request, but am filing following http://dev.eclipse.org/newslists/news.eclipse.tools.mylyn/msg00403.html)</description>
      <attachments/>
      <comments>7</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>216525</id>
      <title>trac connector grouping of tasks</title>
      <description>Currently the trac connector doesn't support grouping of tasks, with the use of this plugin (http://trac-hacks.org/wiki/MasterTicketsPlugin) for trac you have two extra fields added that provide "blocked by" and "blocking". These fields show up in mylyn thru the xml-rpc plugin but in the task list none of the tasks are grouped. I currently use this plugin in trac 0.10.3 but according to the site has been re-written for 0.11.</description>
      <attachments/>
      <comments>11</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>210483</id>
      <title>[api] streamline password prompting</title>
      <description>As per conference call the following improvements were suggested: - fail silently when running a background operation (e.g. sync) - add repository decoration to password dialog to make it identifiable as a Mylyn dialog - add a link for opening repository properties from password dialog</description>
      <attachments/>
      <comments>21</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>210686</id>
      <title>rich task editor should have handle to drag that task into a category in the task list</title>
      <description>Use case: When I want to gather various tasks under one heading I create a Category in the task list. I can fill that only by dragging a task from other parts of the task list and dropping it on the category. When I have a task open in the rich task editor, I want a 'handle' to drag it into the category. Reference from somewhere else: In BBEdit on Mac OSX you can drag the icon in the document title bar any place you can drag an alias.</description>
      <attachments/>
      <comments>54</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>214192</id>
      <title>[api] provide common mapping for project component</title>
      <description>Common mapping for project component should be available for connectors that have notion od components (i.e. JIRA and Bugzilla) and 3rd party integration working with tasks. The most common use cases is to be able to pickup or directly pass component when creating new issue, for example component can be configured in projects settings along with repository, or picked up from 3rd party metadata. Another use case is connector neutral reporting feature that would allow to group or filter tasks or search results by component (similar to the current grouping by owner in task search).</description>
      <attachments/>
      <comments>22</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>204279</id>
      <title>support subtask nesting of local tasks</title>
      <description>Build ID: I20070621-1340 Steps To Reproduce: 1. Create a Local Repository Category 2. Select the Category 3. Right Click on Category and select New Category. This creates a new category not under the currently selected category. More information: I would like to have a main category with sub categories of tasks underneath that. If the intent is not to do so, then at the very least the "New" menu item should not be enabled.</description>
      <attachments/>
      <comments>32</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>144161</id>
      <title>use trim bar to show currently active task</title>
      <description>Use trim bar to show pause button and currently active task</description>
      <attachments/>
      <comments>98</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>172264</id>
      <title>consume org.apache.axis dependency from Orbit</title>
      <description>The org.eclipse.mylar.jira.core plug-in will be bundling this, but it should come from Orbit.</description>
      <attachments/>
      <comments>19</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>167362</id>
      <title>consume org.apache.httpclient dependency from Orbit</title>
      <description>Since there was no Orbit when we started we have been keeping this dependency in ..mylar.context.core. Now that 1.0 is out we should move this out and into an Orbit project.</description>
      <attachments/>
      <comments>29</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>221069</id>
      <title>notification popup should change its 'X' label to a red 'X' when the mouse is over it</title>
      <description>Created attachment 91301 [details] Patch to add a MouseTrackListener to the 'X' label. I think that the colour of the 'X' label should update its colour to red when a mouse is over it. The patch uses the same image as the one that the Eclipse Platform uses for the 'Delete' action.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>152232</id>
      <title>add task content assist proposals</title>
      <description>Hitting Ctrl+Space in any task editor would bring up a filtered version of the task list that would work similarly to the task list filter. Selecting a task would insert a reference compatible with a hyperlink detector, like "bug 1234". Interest ranking should work, i.e. the sections showing up: &lt;active task&gt; &lt;recently active tasks&gt; --------------------------- rest of list</description>
      <attachments/>
      <comments>39</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>164037</id>
      <title>[api] improve task editor input hierarchy</title>
      <description>Currently NewTaskEditorInput and RepositoryTaskEditorInput extend AbstractTaskEditorInput but TaskEditorInput stands alone. This needs to be resolved and MylarTaskEditor.addPages() simplified/updated.</description>
      <attachments/>
      <comments>11</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>222833</id>
      <title>[api] refactor LocalAttachment class</title>
      <description>This is a follow up from bug#195691 about the new requirements emerged from screenshot attachment story. While working on that bug, I felt the need to add more features to LocalAttachment class. Since it is actually strongly tied to the notion of content coming from either a file or a byte[] from clipboard, and due to the time constraints to get it into 2.3, I opted to do the simplest thing that could possibly work, and subclassed it, adding my needs into ImageAttachment class. Now it is time to refactor :) The screenshot attachment story has some specific needs: - The attachment is created from a business object (Image), not a existing file. - The object being attached is not the same that is being created from. The Image needs to be converted into JPEG data, which is what is attached. So, there is a notion of attachment source, which produces the final attachment data. - The attachment data production (convert into JPEG or any image format) is an expensive operation. It must be done lazily. The attachment object must have a method to trigger this data production. - The data production must be triggered only if needed. Actually, it is needed not only when you hit finish (obviously), but when you go to the preview page (to display the exactly image which will be submitted). If you go to preview and hit finish, you don't need to create the data again. - The user may go to preview page (triggering the data production), go back to crop/mark up page, and modify the original image. In this case, the final data must be recreated when you return to preview page or if you hit finish directly. The attachment model must support the notion of "dirty" data. - The attachment model should have a "clean" callback method, so the temporary image file may be deleted after submission. Now my opinion about LocalAttachment class: - It's object interface is strongly tied to the existing attachment contents/sources. It is either a byte[] for clipboard attachment, or a File. This doesn't smell good, and it should be good to decouple and/or generalize content handling, and only leave general attachment attribute handling on this class.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>193472</id>
      <title>[api] provide editor for tasks displayed in browser</title>
      <description>Move BrowserEditorInput, WebTaskEditorFactory and BrowserFormPage from org.eclipse.mylyn.web.tasks plug-in to public API. Related: bug 193430 comment 6.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>187127</id>
      <title>support content assist to work after a comma in the cc list</title>
      <description>Since multiple cc's can be added at a single time by comma separating them, it would be nice to be able to use content assist to add more than 1 user to this list.</description>
      <attachments/>
      <comments>27</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>217725</id>
      <title>[api] review plug-in and feature dependencies</title>
      <description>There are some strange dependencies required for mylyn.tasks.core and mylyn.tasks.ui. Would be nice to clean this for 3.0. I'll post some more details in further comments.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>218856</id>
      <title>[api] [context] decouple bridge initialization from context ui</title>
      <description>Plug-ins that extends AbstractContextUPlugin trigger context UI initialization when activated. To avoid this dependency on startup and potential deadlocks it would be better to use the context UI startup extension.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>218722</id>
      <title>[api] move AbstractRepositoryTaskEditor.getHistoryUrl() into AbstractRepositoryConnector</title>
      <description>To enable opening task history right from the task list (bug 214134) and also to provide generic facility for looking up task history url, AbstractRepositoryTaskEditor.getHistoryUrl() need to be moved into AbstractRepositoryConnector. Let me know if you'd like patch for that.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>221965</id>
      <title>show timespent value in jira task editor attributes section</title>
      <description>One of the attributes of JIRA time management is "timespent" element included in the rss data for given issue: &lt;due&gt;&lt;/due&gt; &lt;votes&gt;0&lt;/votes&gt; &lt;timeestimate seconds="0"&gt;0h&lt;/timeestimate&gt; &lt;timespent seconds="46800"&gt;13h&lt;/timespent&gt; It is already parsed into Issue.getActual(), but not mapped to the task data and is not shown in the editor</description>
      <attachments/>
      <comments>11</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>223151</id>
      <title>show JIRA issue dependencies as sub-tasks in Mylyn Task List view</title>
      <description>My team uses JIRA issue dependency links to help us JIRA to track and plan all work on a portfolio of related projects. As well as bug-tracking, we use JIRA to plan and track product enhancements, in SCRUM like iteration and product backlogs. We find adding JIRA issue dependency links helps in understanding how headline features breaks down, and how themes of an iteration or release map to specific work on individual projects within our portfolio. Feedback has been really good on some internal tools that show related JIAR issues as a tree, based on JIRA issue dependency links. We are evaluating Mylyn and the Mylyn JIRA Connector. As Java developers we are hoping that Mylyn will be our interface to JIRA. In Mylyn we find we are missing the tree navigation of our JIRA issues. * The Mylyn Task List view does give tree navigation to JIRA sub-tasks of JIRA Issues. We want the same for JIAR issue dependencies. Different people and projects might have different views on how their JIRA issues should be shown in a tree hierarchy. If this is the case it could be accommodated in preferences that govern what JIRA issue relationships are mapped to a Mylyn parent-child task relationship. Ok, hopefully I've got across what we would like and why. I'd also like to try and help make it happen soon by providing a patch that you can try to see JIRA issue dependency navigation in JIRA. We are running with this in a patched version of the org.eclipse.mylyn.jira.ui plugin, version 2.3.1. I'm encouraged that it only took a few lines of code to do this in Mylyn. Overview of changes: (I'm new to Mylyn, so this might not be how you intend it to be extended) JiraAttributeFactory + JiraAttribute: - Add an attribute to store the ids of JIRA issues that are to be shown as 'child' tasks ATTRIBUTE_CHILDTASK_IDS = "attribute.jira.childtask_ids" JiraTaskDataHandler.updateTaskData(): - Store values in ATTRIBUTE_CHILDTASK_IDS JiraTaskDataHandler.getSubTaskIds(): - Include ids from ATTRIBUTE_CHILDTASK_IDS after those from SUBTASK_IDS (I can't see a way to add the patch as an attachment as I'm creating this bug-report, so I'll see if I can attach it after submitting) Note: - I did try adding a TaskList presentation extension, but this didn't work well because the data to identify the JiraTask children wasn't in the JiraTask. Using data from the TaskData didn't work well in a presentation extension, because the data might not have been loaded, and it pulls the TaskData from the disk cache into memory so will impact performance if done for all tasks (we have a lot of JIRA issues, spanning many projects).</description>
      <attachments/>
      <comments>14</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>216688</id>
      <title>restore notification popup upon mouse over during fade</title>
      <description>If the notification dialog is fading out at the moment the user mouses over, it currently does not fade back in.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>194258</id>
      <title>[api] use collector callback for multi task data retrieval</title>
      <description>Eugene pointed out on bug#194140 that multi task data retrieval could potentially use up a lot of memory if many task data are requested from server. Investigate changing api to use ITaskCollector interface and push data direct to offline storage bypassing caching etc.</description>
      <attachments/>
      <comments>13</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>174370</id>
      <title>Removing credentials for Bugzilla headless tests</title>
      <description>The consequence of using the credentials to access the test Bugzilla report is that one has to run the headless tests as a plug-in test. This seems strange to me when to intent of having the headless Bugzilla is not have to startup an Eclipse instance to use it. As the tests are filling in the data from a report, and this can be done as an anonymous user, I suggest removing the Removing the dependency on the credentials will help to avoid confusion by others running the tests (it took me a while to figure out that the tests had to be run as a plug-in test). It also removes the requirement that users download the mylar.context.tests when using Bugzilla core package as a libaray just so they can place the credential.properties file in the right place to run the tests.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>137416</id>
      <title>[performance] Replace StringBuffer with StringBuilder</title>
      <description>We can use search and replace to do it since the api for them are completely the same. See StringBuilder javadoc A mutable sequence of characters. This class provides an API compatible with StringBuffer, but with no guarantee of synchronization. This class is designed for use as a drop-in replacement for StringBuffer in places where the string buffer was being used by a single thread (as is generally the case). Where possible, it is recommended that this class be used in preference to StringBuffer as it will be faster under most implementations.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>196554</id>
      <title>Middle-click on task link to open in background</title>
      <description>On firefox, I like to use middle-click to open links on background while I don't finish reading the current page. I'd like to have something similar when middle-clicking task links on task editor. Actually when I click on a link, it opens and moves the focus to a new task editor.</description>
      <attachments/>
      <comments>17</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>176934</id>
      <title>[api] refactor management of repository synchronization timestamp</title>
      <description>For JIRA the code that updates the synchronization timestamp in RepositorySynchronizationManager only takes tasks into account tasks that are part of the task list. If none of those have changed JIRA will run the same query repeatedly without updating the timestamp causing large amounts of unnecessary traffic. The timestamp should be handled by connectors.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>225538</id>
      <title>support filtering of completed tasks in search view menu</title>
      <description>Version: 3.4.0 Build id: I20080401-0851 Mylyn Build: 2.3.2.v20080402-2100 Using the Task search ends up with some results in the Search View. But clicking the triangle in the view does present any menu to me. Don't know if this is a regression or not but there should be some action at least. If there is nothing added yet here are some ideas: * Grouping by product/component * Grouping by status (open/resolved). This could also be done with the same semantics like the Task View (black and gray items). What I'm really looking for is a way to see quickly which bugs are open/closed in the search view.</description>
      <attachments/>
      <comments>16</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>211641</id>
      <title>[api] supporting attaching of files for remote tasks</title>
      <description>If you open a remote repository task (i.e. not in your task list), you cannot invoke add attachment/screenshot. Is there any technical issue blocking this?</description>
      <attachments/>
      <comments>6</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>188776</id>
      <title>[api] support task relationships</title>
      <description>The task list supports sub tasks (bug 187275) but tasks can have other relationships as well such as "depends on", "blocks", "duplicate of" etc. The task list should have data structures to represent these relations and visualize them. It would also be nice if the task editor displayed a list of related tasks. JIRA actually allows to define arbitrary relations for sub-tasks. It additionally supports links between issues that are defined by an outward and inward link-description so this API needs to be rather generic.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>204751</id>
      <title>[api] improve API for non-local tasks with locally controlled attributes, e.g. completion, ownership</title>
      <description>TaskRepositoryManager.isOwnedByUser() has a check if task.isLocal() == true, but WebTask says that it is a local task. In result, any web task completed today (i.e. all tasks from the new query) appear as green because they all considered owned by the local user. We can't change web task to non-local, because we do need control on marking tasks as read and completed. But it 2.0 release, any local changes are being overwritten (i.e. completed status will be lost on the next sync).</description>
      <attachments/>
      <comments>15</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>199818</id>
      <title>[api] arbitrary attributes in AbstractTask</title>
      <description>AbstractTask should allow to store arbitrary attributes. The most notable use cases for this: -- store info for the task highlighters. bug 199817 -- store selected attributes that could be used by connector-specific presentation providers (i.e. group by component or target milestone)</description>
      <attachments/>
      <comments>40</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>197181</id>
      <title>[api] make duplicate detection support generic</title>
      <description>Here's how we could make the support for duplicate detectors generic. 1) Generic duplicate detectors are not specified by connectors but by plug-ins that understand the corresponding structure (e.g. a Java stack trace detector belongs in the a Java plugin, a natural language detector could go straight into the tasks.ui plug-in). This can be done via the AbstractRepositoryConnector.performQuery(..) method that takes specialized parameters (e.g. a subtype of AbstractRepositoryQuery) 2) Connectors should be able to specify whether or not they support generic detection (i.e. have the search facilities needed). Might make sense to do this via a method AbstractRepositoryConnector. 3) Connector specific detectors can be supported to make use of the repositories duplicate detection facilities, if available. In this case the connector itself would specify a custom duplicate detector.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>220433</id>
      <title>provide source bundles</title>
      <description>We should consider to provide source bundles for Ganymede. The way these are build has been improved for 3.4: http://wiki.eclipse.org/PDEBuild/Individual_Source_Bundles We need to investigate how that fits into the build process and how that affects builds for 3.3.</description>
      <attachments/>
      <comments>11</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>231673</id>
      <title>add support for manual disablement of gzip streaming</title>
      <description>Currently bugzilla tries to make use of gzipped streams returned from the server. Although on normally, we could add this as a checkbox under the additional settings section of the bugzilla repository settings page.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>150278</id>
      <title>[api] associate plugins with task repositories and products</title>
      <description>An extension point along the following lines would allow for automatic component selection (e.g. for bug 135605): &lt;extension point="org.eclipse.mylar.tasks.repositories"&gt; &lt;bugRepository connector="bugzilla" product="Mylar"/&gt; &lt;/extension&gt;</description>
      <attachments/>
      <comments>15</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>234682</id>
      <title>multiple tasks active after Mylyn upgrade</title>
      <description>From the newsgroup: two tasks stay active all the time. I cannot turn the old task off.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>234065</id>
      <title>add Unsubmitted category to task list</title>
      <description>All tasks that have a synchronization state OUTGOING_NEW should be grouped in a special category, e.g. "Unsubmitted", that is managed by the tasks framework. Drag &amp; Drop should be disabled for this category and new tasks should stay in the category until submitted.</description>
      <attachments/>
      <comments>11</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>236172</id>
      <title>improve task editor usability on small screens</title>
      <description>On displays that are 1024X768 the task editor often gets a vertical scroll bar when it is not maximized to the full screen. The task editor should support being displayed next to the task list and not have a scroll bar. In the planning perspective I have roughly the following size constraints (left to right): 30 px Perspective Switcher 620 px Editor 350 px Task List The remaining 24 px are taken up by window decorations and spacing. The parts of the editor that are currently constraining the minium width are: * Status line in the header (580 px) * Attachment table (680 px) * Actions Section + People Part (620 px)</description>
      <attachments/>
      <comments>9</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>234044</id>
      <title>support having the notes and personal planning on the task editor page</title>
      <description>For connectors that do not want to show the planning page, they should be able to put the parts from the planning page into the editor.</description>
      <attachments/>
      <comments>15</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>235222</id>
      <title>[wikitext] integrates Texile-J with bugzilla task editor</title>
      <description>implement the most simple proto-type that integrates Texile-J with the JIRA task editor</description>
      <attachments/>
      <comments>43</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>203670</id>
      <title>improve sizing of New Comment and Notes areas of the Task Editor</title>
      <description>The New Comment area can be annoyingly small when a considerable amount of text is being written. We have a couple of options: 1) Manual sizing: provide an affordance expanding the New Comment area. E.g. a section toolbar button with +/- style buttons that allows the new comment area to double or 1/2 in size. 2) Dynamic sizing: use layout or text properties to determine the size that the area should be. E.g. when the text reaches the height of the box expand the area, forcing layout to be updated. Having good heuristics for this might be hard with the current actions on bottom approach, but that approach could be changed for 3.0.</description>
      <attachments/>
      <comments>63</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>237500</id>
      <title>[wikitext] Task repository should have a properties field where configuration settings can be made</title>
      <description>Task repository should have a properties field where configuration settings can be made, e.g. wiki editor style</description>
      <attachments/>
      <comments>26</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>240103</id>
      <title>register collapse all handler for task list and consider including button on toolbar</title>
      <description>To support the global key-binding for collapse all a handler needs to be activated when the view is constructed. CollapseAllHandler JavaDoc: IHandlerService handlerService = (IHandlerService) getSite().getService( IHandlerService.class); collapseHandler = new CollapseAllHandler(myViewer); handlerService.activateHandle(CollapseAllHandler.COMMAND_ID, collapseHandler);</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>232348</id>
      <title>task editor should show browser progress web pages</title>
      <description>Generic web-based repository: The issue editor has a 'Browser' tab, in which the issue is displayed. The 'Browser' tab does not show any indication of browser progress (such as the progress animation). This can make the editor difficult and/or confusing to use on slow repositories. It is sometimes difficult to know if (for example) a button is pressed when using the touch pad on a notebook.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>239304</id>
      <title>add Delete toolbar button to unsubmitted tasks</title>
      <description>Unsubmitted tasks sometimes need to be deleted, e.g. if they become stale or get filed under the wrong Product. A toolbar button would make this easier. The implementation should be modular, so that other repositories that use deletion can use it. I prefer that we use the gray Remove button rather than the red delete button, because the red button looks overly distracting and obnoxious on the toolbar.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>244017</id>
      <title>Hyperlinking support for Trac should handle disabled (escaped) links.</title>
      <description>Build ID: I20080617-2000 Steps To Reproduce: 1. Start creation of new Trac ticket using rich text editor (Trac connector must use XML-RPC access type). 2. Create some description containing links in Trac wiki syntax. 3. Put exclamation mark before link to disable it (see http://trac.edgewall.org/wiki/TracLinks#EscapingLinks). 4. Hyperlinking in task editor (in edit mode) still works, but should be disabled.</description>
      <attachments/>
      <comments>13</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>244475</id>
      <title>outline does not expand comments from collapsed subsections</title>
      <description>If a comment is selected in the outline that is in a collapsed subsection the subsection is not expanded.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>247745</id>
      <title>make CommentGroupStrategy testable</title>
      <description>see bug 244359 comment 7</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>248318</id>
      <title>WikiText TWiki markup language plug-in project creation</title>
      <description>create plug-in bundle projects for the TWiki markup language syntax, as per bug 245549</description>
      <attachments/>
      <comments>6</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>237552</id>
      <title>[api] remove deprecated classes</title>
      <description>As part of the Mylyn 3.0 API refactoring classes were moved to org.eclipse.mylyn.internal.*.deprecated as a intermediate solution for parts of the code base that had not been ported to the new APIs. These classes are not intended as a backwards compatibility layer and will be removed in as part of the 3.x release cycle.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>137497</id>
      <title>improve save lifecycle for new local tasks</title>
      <description>If I click on a new local task icon it is quickly open new editor and immediately create am empty task. It should only create new task when editor is closed with confirming Save or Save action is called on that editor. PS: Please add Mylar versions 5.0 and above to the Bugzilla... Perhaps "latest dev" version is also makes sense</description>
      <attachments/>
      <comments>15</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>227052</id>
      <title>support full names</title>
      <description>From http://confluence.atlassian.com/display/JIRAEXT/Mylyn?focusedCommentId=153059742#comment-153059742 : When a JIRA repository task is opened, at all the places where the users are mentioned - COMMENTED BY, ASSIGN TO, ASSIGNED TO, REPORTED BY - the user login id is used. It would be of great help if there is an option to display the user full names instead of their id.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>256774</id>
      <title>support for non-UTF8 character encode when using web access</title>
      <description>The query result of localized Trac is not?displayed correctly on Task list. The Web interface was used for the access of Trac Repository. As for Trac, localize is done in Japanese. The query result of localized Trac is not returned by UTF-8. It was Shift-JIS. It wants you to be able to specify Character Encode by the repository definition of Trac. It is thought that this problem can be solved. I experimented. It was possible to straighten out that problem by this method.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>257816</id>
      <title>toggle between scheduled and categorized presentation when button in toolbar is pressed</title>
      <description>The presentation button currently cycles between all presentations which makes is less useful to use when the sandbox is active which contributes many presentations. Ideally the button would always cycle between the scheduled and categorized presentation only.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>258571</id>
      <title>[api] provide utility method for accessing platform proxy</title>
      <description>The platform proxy code is currently internal to TaskRepositoryLocationUi. It would be nice to make this accessible in WebUtil for other clients.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>120499</id>
      <title>[context] make explicitly created resources interesting, and ignore others, e.g. from CVS checkout</title>
      <description>From bug 119785: &gt; However, if you have an active context and check a project &gt; out of CVS each resource will be made interesting as it becomes a part of the &gt; workspace (and as each becomes interesting the views will flicker). You mean *every* resource will become interesting? That seems very wrong to me. If I check out a project, the project itself should become interesting, but I have not yet worked on any files, so Mylar should not make any overriding decision about which files it thinks are interesting to me. I agree that explicit changes (file creation, or batch modification such as through patches) must mark the files as interesting, though. But I think Mylar should be about authorship, not what happens at the file level: When you do a CVS checkout, while it's certain creating files at the file-system level, it's not *authoring* files.</description>
      <attachments/>
      <comments>41</comments>
      <commenters>8</commenters>
    </issue>
    <issue>
      <id>166595</id>
      <title>support moving bugs across products</title>
      <description>Currently we get the following error, may want to handle this specific case and say it needs to be done with the Web UI until uspported org.eclipse.mylar.internal.tasks.core.UnrecognizedReponseException: &lt;!DOCTYPE "http://www.w3.org/tr/html4/loose.dtd"="" transitional//en"="" public="" "-//w3c//dtd="" 4.01="" html=""&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Verify New Product Details...&lt;/title&gt; &lt;link href="https://bugs.eclipse.org/bugs/" rel="Top"&gt; ...</description>
      <attachments/>
      <comments>48</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>220239</id>
      <title>[regression] use selection to populate Add to Category section of new task editor</title>
      <description>When the user right clicks on a category and files a new repository task, the "Add to Category" option should be checked and set to the selected category.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>261144</id>
      <title>[api] allow task editor pages to contribute to toolbar</title>
      <description>If a task editor page does not extend AbstractTaskEditorPage it can not contribute to the toolbar. It would be useful if there was an additional class that could be extended and provided that functionality.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>265562</id>
      <title>[api] provide constructor that allows setting of page id for AbstractTaskEditorPage</title>
      <description>The id currently defaults to "id" for all pages extending AbstractTaskEditorPage.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>219241</id>
      <title>convert the New Task toolbar item to be a drop-down menu</title>
      <description>We could get rid of one wizard page by converting the action provide a drop-down that contains each task repository which provides task creation facilities.</description>
      <attachments/>
      <comments>20</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>249662</id>
      <title>[context] disable interest propagation within Synchronize view</title>
      <description>When reviewing and committing code within the synchronize view, clicking on a file in once change set will cause it to be moved to the currently active change set. This becomes a problem when the user intends to commit a file that is not part of the currently active task since the change set message will be wrong.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>267514</id>
      <title>[api] add @noextend tag to interfaces that specify @noimplement</title>
      <description>In Eclipse 3.5M6 the semantics of the @noimplement Javadoc tag used by API tooling will change. Unless @noextend is specified clients will be allowed to subclass interfaces tagged as @noimplement. This is different from 3.4 where @noimplement also implied @noextend. This message on cross-projects has additonal details: http://dev.eclipse.org/mhonarc/lists/cross-project-issues-dev/msg03026.html To maintain the current API contract @noextend should be added to all Mylyn API interfaces that specify @noimplement. We can lift that restriction later if necessary without breaking API compatibility.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>264930</id>
      <title>[performance] Avoid duplicate task updates for non-disjunct queries in scheduled synchronizations</title>
      <description>As described in bug 263127: Configure synchronization schedule and notifications per repository, query or working set I have a lot of queries running on my Trac task repository. The query results are not disjunct since I both query by milestone (planning) and by component (software structure): * ALL for component * ALL for milestone * NOW for component * NEXT for component * NOW for ALL components etc. So one task is matched by 2-3 queries on average. That means also, that it is checkd for updates 2-3 times. Here the behaviour could be optimized by introducing a minimal time between updates, e.g. 10 seconds. So if the last updates is 5 seconds old, it is skipped. Maybe we could differentiate between automatic and manually triggered updates.</description>
      <attachments/>
      <comments>11</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>254150</id>
      <title>Capabilities</title>
      <description>+++ This bug was initially created as a clone of Bug #252807 +++ Each project will provide basic capability/activity definitions to allow for their UI contributions to be hidden. These must be provided in a separate plugin/feature to facilitate inclusion/exclusion by consumers in product development.</description>
      <attachments/>
      <comments>14</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>267524</id>
      <title>create Mylyn 3.2 release plan</title>
      <description>Update the release plan for Mylyn 3.2: http://www.eclipse.org/projects/project-plan.php?projectid=tools.mylyn</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>266228</id>
      <title>[api] move EditorBusyIndicator into commons</title>
      <description>EditorBusyIndicator is a useful utility class that could be reused by other clients as well.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>272191</id>
      <title>[api] move SelectionProviderAdapter into commons</title>
      <description>SelectionProviderAdapter is a useful utility class that should be available in the commons.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>272194</id>
      <title>[api] publish id of task list and task repositories view</title>
      <description>The constants should be available in ITasksUiConstants.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>270350</id>
      <title>[api] make TasksUiInternal.getShell() accessible</title>
      <description>TasksUiInternal.getShell() is a frequently utility method that should be available in the commons.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>260537</id>
      <title>Activity management support</title>
      <description>I hope for the support of the activity management for Mylyn function and connector - The activity management of Connector - The activity management of Task Presentation action - The activity management of Help contents part (Wikitext only). - The activity management of menu action (Sub-menu).</description>
      <attachments/>
      <comments>27</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>272183</id>
      <title>[api] provide generic utility methods for form-based editors</title>
      <description>Make EditorUtil API and consider renaming it to CommonFormUtil.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>273522</id>
      <title>[api] expose getResponse() in SubmitJob</title>
      <description>use case: Submitting a task and using the TaskID to to some follow-up work. If a submitTaskJob is running and the task is submitted (fireTaskSubmitted), we should have a way to get the response (and thus the taskID) when listening to that event, and not having to wait until the tasklist synchronize is finished.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>202879</id>
      <title>[api] provide mechanism for reporting task submission status</title>
      <description>A connector may wish to report the status of a task submission. For example, the Bugzilla Web UI reports who was notified of the change to the bug (bug 165072). Rob: AbstractRepositoryConnector may not be structured right for this, but is there another place in the API where we can report this status?</description>
      <attachments/>
      <comments>22</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>265565</id>
      <title>[api] provide access to progress monitor to allow monitoring submit job in progress</title>
      <description>When scheduling a SynchronizeQueryJob from a UI component, such as a report, view, etc. there is no existing API available to access the progress of this synchronization which is relevant to the report, view, etc. It would be helpful if SynchronizeQueryJob (and other sync jobs) had API to access the progress monitor of the job. This way the view or page owner could report the progress to the user.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>248490</id>
      <title>The I'm Feeling Lucky Task (Random Task)</title>
      <description>There are times where there are so many tasks in my queue for the week or two weeks ahead that I would prefer just to randomly get a task for me to look at. I'm kind of inspired by the Urbanspoon iPhone application which allows me to shake my phone and get a random restaurant within a certain distance. I would like to apply this same idea to tasks. I click a button and have some threshold preferences... and I get a task! No thinking required :) Maybe I'm the only one, but sometimes this is the way I operate ;) Thoughts ;)?</description>
      <attachments/>
      <comments>34</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>276011</id>
      <title>[api] move TasksUiUtil.openUrl() to commons</title>
      <description>Opening URLs is a common task and should be available in WorkbenchUtil.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>276651</id>
      <title>[api] add severity and version to common task schema</title>
      <description>To support setting the version and severity of tasks in a connector agnostic way, the tasks framework needs add version and severity to the common task schema.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>274914</id>
      <title>[editor] add validation for estimate and time spent field</title>
      <description>Some validation would be great. Right now, the connector tries to parse (using the #m #h #d #w format), and if it fails will set it to 0. Validation results could be displayed with control contributions, like &lt;code&gt; if (amountTextControlDecoration == null) { amountTextControlDecoration = new ControlDecoration(timeSpentText, SWT.TOP | SWT.LEFT); amountTextControlDecoration.setShowOnlyOnFocus(false); FieldDecoration errorImage = FieldDecorationRegistry.getDefault().getFieldDecoration( FieldDecorationRegistry.DEC_ERROR); amountTextControlDecoration.setImage(errorImage.getImage()); amountTextControlDecoration.setDescriptionText(Messages.WorkLogPart_Time_Spent_Error_Decorator_Hover); } if (invalid) { amountTextControlDecoration.show(); } else { amountTextControlDecoration.hide(); } &lt;/code&gt; Also, the JiraTimeFormat.parse should be a little less strict, currently it only allows the order week/day/hour/minute, neither the opposite order nor any mixed kind are accepted.</description>
      <attachments/>
      <comments>16</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>277254</id>
      <title>use a single JiraClient instance per repository</title>
      <description>The JiraConnectorUI Test, when run separately (as plug-in test) will fail since while the client retrieved in the test itself updates its client data object, a background operations seems to set a different clientData object to the clientManager. So while the client of the test still has the updated clientData, retrieving a client from the factory actually gets a client with the (non updated) clientData from the clientManager, thus making the test fail. Not sure if and when this problem might surface in real usage (it should only show as clientData not being there and thus requiring retrieval, so worst case another round of repository configuration update (which can be very expensive). Steffen, please add/correct if I did not grasp this right :)</description>
      <attachments/>
      <comments>17</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>274790</id>
      <title>[api] provide a submit button in the task editor header</title>
      <description>The Mylyn UI is really inconsistent. The submit button has been put as its own button at the bottom of the screen as a standalone element. We already have an 'action bar' at the top of mylyn, that includes 'new subtask', 'synchronize incoming changes', 'activate task' and the like. We really should have the 'submit' as part of that toolbar as well. In addition, the placement of mylyn actions is completely at odds with the way that the Eclipse platform works. Why isn't there a 'Mylyn' menu which is active when a task is open? There's a bunch of standard operations that can be done on tasks - close, comment, reply, submit - which shouldn't need an implementation engine to redo the UI each time. Lastly, the Forms UI button looks cack on a Mac, and always has done.</description>
      <attachments/>
      <comments>29</comments>
      <commenters>7</commenters>
    </issue>
    <issue>
      <id>277970</id>
      <title>implement a single-selection attribute editor with image support</title>
      <description>If space for an attribute editor is limited such as in the header of the Task Editor it would be helpful to have an attribute editor that used an image for displaying the current value of an attribute. The editor should have a drop-down for selecting values from a popup menu.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>245187</id>
      <title>'Add Attachment' comment editor should support taskEditorExtension and content assist</title>
      <description>'Add Attachment' button on a task editor pops up a dialog that has room for comment text. The comment text area should support all of the same features as the task editor new comment section: * content-assist * taskEditorExtension (WikiText) * hyperlink detection * spell check</description>
      <attachments/>
      <comments>23</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>246431</id>
      <title>[windows] set focus on summary field when creating new bugzilla task</title>
      <description>set focus on summary field when creating new bugzilla task to allow to immediately start typing. this works for local tasks, but not in bugzilla new task editor</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>278323</id>
      <title>display additional information in section headers</title>
      <description>If a section is collapsed the header could be used to display additional information similar to how the active time is displayed.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>199675</id>
      <title>add category selection to new local task editor</title>
      <description>in general, make the local tasks more similar to repository tasks. e.g., by porting the new functionality gained by the repository task editor to the local task editor.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>275727</id>
      <title>create release review slides for Mylyn 3.2</title>
      <description>Slides need to be submitted by May 29th. http://dev.eclipse.org/mhonarc/lists/cross-project-issues-dev/msg03337.html - 4-slide mini deck for Galileo - Full deck for Mylyn 3.2 release review Need to provide sources (ppt or odt) and PDF.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>262610</id>
      <title>name the separator in the task repository context menu</title>
      <description>It would be helpful to others that want to add to the context menut in the task repository view if the sections were named.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>239667</id>
      <title>[performance] improve responsiveness of common Task List operations</title>
      <description>Current hot spots look like they come from: * Excessive Task List refresh * Notification popups * Task List locking?s</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>211441</id>
      <title>[performance] Allow to disable automatic queries synchronization on some specific queries</title>
      <description>I have a few 'heavy' bugzilla queries. I look at them from time to time. Mylyn synchronizes those heavy queries quite often. This causes unnecessary load on the bugzilla server. I would prefer to synchronize some queries on demand. There seems no obvious way to exclude some queries from automatic synchronization.</description>
      <attachments/>
      <comments>29</comments>
      <commenters>8</commenters>
    </issue>
    <issue>
      <id>247441</id>
      <title>Copying Bug URL from within task list and editor</title>
      <description>It would be very convenient to be able to copy the bug URL into the clipboard from within the task list and the editor without having to open a web browser for this.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>277401</id>
      <title>[api] support reporting bugs to places other than task repositories</title>
      <description>I have a task connector that would like to use the support extension, but its support requests are not sent to a task repository, but rather a custom web form. It would be good to have a way to support this via the normal error reporting extension instead of doing something custom.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>278708</id>
      <title>[api] improve api for connectors that do not support submitting tasks</title>
      <description>Some connectors may only provide a read-only view of tasks but still want to extend AbstractTaskRepositoryPage. In order to support that use-case AbstractTaskRepositoryPage should have flag to disable the key-binding for submit and not show a submit button if the flag is set.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>278872</id>
      <title>consider including the "Add more connectors..." button in the new task dialog</title>
      <description>The ability to add new connectors via the discovery mechanism would be more accessible if the "Add more connectors..." button appeared next to the "Add task repository..." button in the New Task dialog.</description>
      <attachments/>
      <comments>11</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>280183</id>
      <title>show validation results in the error log</title>
      <description>In order to provide better diagnosis of potential performance problems and repository capabilities validation results should be logged to the error log.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>278169</id>
      <title>create new &amp; noteworthy for Mylyn 3.2</title>
      <description>Need a New &amp; Noteworthy for Mylyn 3.2.</description>
      <attachments/>
      <comments>23</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>281572</id>
      <title>[release] plan Mylyn 3.3 release</title>
      <description>Update the release plan for Mylyn 3.3: http://www.eclipse.org/projects/project-plan.php?projectid=tools.mylyn</description>
      <attachments/>
      <comments>8</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>282095</id>
      <title>support tags in task editor</title>
      <description>Field with the type com.atlassian.jira.plugin.labels:labels are currently not displayed in the task editor.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>286174</id>
      <title>create dev plug-in for code archive and capability enablement</title>
      <description>If the org.eclipse.mylyn.ide.capabilities plug-in is included in a launch configuration most of Mylyn's UI will be disabled by default. In order to avoid confusion for developers who checkout the extssh team project set it would be helpful to add another plug-in that contains the default enablement, e.g. org.eclipse.mylyn.ide.dev . The new plug-in would be used for development only and not distributed. It should also host the code archive which is currently stored in org.eclipse.mylyn/developer.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>284900</id>
      <title>[performance] suppress background sync when Task List has not been activated</title>
      <description>In order to avoid unnecessary background work, we can suppress sync if the Task List view has not been activated.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>281577</id>
      <title>ensure that the Task List has an appropriate perspective contribution in all EPP downloads</title>
      <description>We're good for both the Java and JEE perspectives, but need to verify and potentially add the corresponding perspective shortcuts to the following EPP distributions' default perspectives. Without this the Task List will usually default to a horizontal view stack, which it is not intended for. * CDT * PHP * RCP * Modeling * BIRT * Pulsar We should at least briefly discuss the best location. I'm thinking that we do what we did for JEE, and put it behind the Outline view? Just checked and both CDT and PHP have the Outline view in the same spot.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>286419</id>
      <title>manage Mylyn participation in Helios</title>
      <description>* General: http://wiki.eclipse.org/Helios * Plan: http://www.eclipse.org/projects/project-plan.php?projectid=tools.mylyn</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>256699</id>
      <title>[editor] show description in preview mode for existing tasks with editable descriptions</title>
      <description>Currently if the task editor extension is enabled, existing JIRA issues are displayed with the description displayed in the source editor. The description should be displayed in preview mode instead for existing JIRAs, so that markup displays properly. This has the advantage of proper display, however it does add an extra step to edit a description. Users would have to click on the preview to switch it. Perhaps attempts to type in the preview should automatically switch it to edit mode.</description>
      <attachments/>
      <comments>69</comments>
      <commenters>7</commenters>
    </issue>
    <issue>
      <id>250869</id>
      <title>[context] do not prompt to download context if only a single one is available</title>
      <description>If a task is activated that has a remote context and only one context is available that context should be downloaded and activated without going through the context wizard.</description>
      <attachments/>
      <comments>14</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>236977</id>
      <title>make it more simple to reassign to self</title>
      <description>In 2.3, the following fields of the task form had default values (at least, when using Bugzilla): - Resolved: "FIXED" - Reassign to: &lt;one's own email address&gt; Now, there are no defaults anymore. However, these defaults have been quite reasonable and very convenient and thus, should be restored. Especially, having to type one's own email address every time you assign yourself to a bug is a real pain.</description>
      <attachments/>
      <comments>17</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>233757</id>
      <title>sort jira versions shown in the task editor in reversed order</title>
      <description>sort jira versions shown in the task editor in reversed order to reduce scrolling and clicking, because in most cases versions you need to select are near the most recent ones</description>
      <attachments/>
      <comments>10</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>285918</id>
      <title>clean up New Task actions</title>
      <description>There is confusion for new users due to the fact that Add Task Repository could be perceived as the action to take when wanting to make your first task.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>287832</id>
      <title>show comma separated list of versions in Fix For and Affects</title>
      <description>Fix For and Affects should list only versions that current issue is associated with. If user wants to modify versions open a dialog box with full list of versions (or show it by other means). Do the same for Components.</description>
      <attachments/>
      <comments>24</comments>
      <commenters>7</commenters>
    </issue>
    <issue>
      <id>253578</id>
      <title>manage Mylyn participation in Galileo</title>
      <description>Links: * General: http://wiki.eclipse.org/Galileo * Plan: http://www.eclipse.org/projects/project-plan.php?projectid=tools.mylyn</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>290599</id>
      <title>[api] support partial updating of repository configuration</title>
      <description>Updating the repository configuration can be expensive for large repositories. In order to support more fine-grained updating of configuration details AbstractRepositoryConnector.updateRepositoryConfiguration() should support a task parameter to limit the scope of an update.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>277405</id>
      <title>[performance] do not logout between requests</title>
      <description>Instead of login-request-logout for each call, just login on startup (and on a lost login). this would save 2 requests and could speed up the connector.</description>
      <attachments/>
      <comments>21</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>283445</id>
      <title>[releng] move CDT structure bridge to Mylyn</title>
      <description>The Mylyn project is willing to take on the maintenance and improvements of the CDT Mylyn bridge. We can make this the second reference bridge implementation, with the JDT bridge being primary. To do this, we suggest moving the CDT bridge from the CDT project to the Mylyn project.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>291547</id>
      <title>[releng] consider including css and properties files in source jars</title>
      <description>Source jars from download.eclipse.org/tools/mylyn/update/e3.4 are incomplete for Mylyn 3.2.2 Release, at least .css and .properties are missing for org.eclipse.mylyn.wikitext.ui.source_1.1.2.v20090912-0400-e3x.jar</description>
      <attachments/>
      <comments>14</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>291107</id>
      <title>consider changing default behavior so editors are not removed from context when closed</title>
      <description>The current default behavior when closing an editor is to remove the file from the active context. While this behavior supports the work flow of advanced users, it's often unexpected and confusing to new users.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>291237</id>
      <title>suppress Task List synchronization when the user is idle</title>
      <description>Background for this is on bug 281893. Since we have a mechanism for detecting when the user is interacting with Eclipse, we can use that to improve the sync policy. The main thing that would be nice to avoid is the unnecessary syncs when the user is away from the computer for a long time (eg, overnight, on vacation) but the computer is on. We need to do this in a way that doesn't degrade user experience in a significant way. Draft proposal, assuming our default 20min sync interval: * If 20min have elapsed since last sync, and user has not been active during that interval, enable the "inactive user sync mode. * In this mode, do the sync, but schedule the next sync for 2x the period of the last sync (ie, 40min, then 80min, then 160min, ...). * If user becomes active, disable the inactive mode. Kick off sync immediately to "catch up".</description>
      <attachments/>
      <comments>6</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>291991</id>
      <title>allow sections to be nested</title>
      <description>In order to reduce the number of top-level sections and clutter in the task editor it should be possible to next sections, e.g. make Team Planning a sub-section of Attributes.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>292307</id>
      <title>[releng] conduct manual tests for Mylyn 3.3</title>
      <description>Test check list and protocol: http://wiki.eclipse.org/Mylyn/Testing</description>
      <attachments/>
      <comments>7</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>291685</id>
      <title>[releng] update Helios contribution to include CDT bridge</title>
      <description>The Mylyn CDT bridge should be included in Mylyn's Helios contributions and removed from the CDT contribution.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>293638</id>
      <title>[api] do not enable validate until input errors have been resolved</title>
      <description>User-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 Build Identifier: 20090920-1017 When adding a new Trac task repository, e.g. via the Task Repositories view, it is impossible to finish the wizard as the Finish button is always disabled, even after clicking "Validate Settings" and all the entered information is OK. Installed Mylyn plugins: Mylyn 3.3.0.v20091015-0500-e3x Mylyn Ant Bridge 3.3.0.v20091015-0500-e3x Mylyn Bug Reporting 3.3.0.v20091015-0500-e3x Mylyn Bugzilla Connector Core 3.3.0.v20091015-0500-e3x Mylyn Bugzilla Connector UI 3.3.0.v20091015-0500-e3x Mylyn Bugzilla IDE Extensions 3.3.0.v20091015-0500-e3x Mylyn Capabilities 3.2.0.v20090810-1913 Mylyn Commons Core 3.3.0.v20091015-0500-e3x Mylyn Commons Net 3.3.0.v20091015-0500-e3x Mylyn Commons Soap 3.3.0.v20091015-0500-e3x Mylyn Commons UI 3.3.0.v20091015-0500-e3x Mylyn Connector Discovery Core 3.3.0.v20091015-0500-e3x Mylyn Connector Discovery UI 3.3.0.v20091015-0500-e3x Mylyn Context Core 3.3.0.v20091015-0500-e3x Mylyn Context UI 3.3.0.v20091015-0500-e3x Mylyn CVS Extensions 3.3.0.v20091015-0500-e3x Mylyn Help 3.3.0.v20091015-0500-e3x Mylyn IDE UI 3.3.0.v20091015-0500-e3x Mylyn Java Bridge 3.3.0.v20091015-0500-e3x Mylyn Java Tasks 3.3.0.v20091015-0500-e3x Mylyn Jira Connector Core 3.3.0.v20091015-0500-e3x Mylyn JIRA Connector UI 3.3.0.v20091015-0500-e3x Mylyn Monitor UI 3.3.0.v20091015-0500-e3x Mylyn PDE Bridge 3.3.0.v20091015-0500-e3x Mylyn Resources UI 3.3.0.v20091015-0500-e3x Mylyn Tasks Core 3.3.0.v20091015-0500-e3x Mylyn Tasks UI 3.3.0.v20091015-0500-e3x Mylyn Team UI 3.3.0.v20091015-0500-e3x Mylyn Trac Connector Core 3.3.0.v20091015-0500-e3x Mylyn Trac Connector UI 3.3.0.v20091015-0500-e3x Mylyn WikiText 1.2.0.v20091015-0500-e3x Mylyn WikiText Confluence 1.2.0.v20091015-0500-e3x Mylyn WikiText Confluence UI 1.2.0.v20091015-0500-e3x Mylyn WikiText Help UI 1.2.0.v20091015-0500-e3x Mylyn WikiText MediaWiki 1.2.0.v20091015-0500-e3x Mylyn WikiText MediaWiki UI 1.2.0.v20091015-0500-e3x Mylyn WikiText Tasks UI 1.2.0.v20091015-0500-e3x Mylyn WikiText Textile 1.2.0.v20091015-0500-e3x Mylyn WikiText Texttile UI 1.2.0.v20091015-0500-e3x Mylyn WikiText TracWiki 1.2.0.v20091015-0500-e3x Mylyn WikiText TracWiki UI 1.2.0.v20091015-0500-e3x Mylyn WikiText Twiki 1.2.0.v20091015-0500-e3x Mylyn WikiText Twiki UI 1.2.0.v20091015-0500-e3x Mylyn WikiText UI 1.2.0.v20091015-0500-e3x Reproducible: Always Steps to Reproduce: 1. Open the Task Repositories view. 2. Right-click and select Add Task Repository. 3. Select Trac. 4. Enter a valid server, label, user ID and password. Click Validate Settings. 5. Finish-button is still disabled.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>204020</id>
      <title>[web connector] Owner and Type values seem to be ignored, or are not displayed</title>
      <description>The Generic Web Connector appears to support the following fields: Id, Description, Status, Owner, and Type. While all of these can be successfully pulled from the server response, only the ID, Description, and Status appear to be used in any way. None of the others appear in the Task UI that opens when the user right clicks the task and selects open. In my case, I have a query to retrieve tasks that have ever been assigned to me for a given release. Mylyn correctly retrieves them, and the status is correctly inferred (with a caveat that isn't worth mentioning here, but would be solved if mylyn could retrieve status mappings from a resource). The ID and Descriptions are also correctly retrieved. Using the Preview feature I am able to verify that the Owner and Type are being set to something appropriate for the task. Neither of these ever appear to be used anywhere. Since, in my case, the task may or may not be assigned to me currently, it would be very useful to simply hover on a task and see the current assignee, as retrieved in the Owner field. Same for Type. FYI, the Owner in my case is "Last, First", and the Type is "P|S" meaning Problem or Suggestion. The documentation I've seen doesn't really specify the format these should be in, so it's hard to know if this is a format compatibility issue or not.</description>
      <attachments/>
      <comments>14</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>294820</id>
      <title>open task when shift is pressed on task activation from history</title>
      <description>It would be nice if selecting a task from the activation history would open the task in addition to activating it.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>293089</id>
      <title>enable customization of colors for ColorSelectionWindow</title>
      <description>The current ColorSelectionWindow doesn't allow you to customize the color palette. It would be nice to be able to reuse this control in the task editor, etc with different colors.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>295050</id>
      <title>[api] request enhanced support of client-certificates</title>
      <description>User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.1.4) Gecko/20091016 Firefox/3.5.4 (.NET CLR 3.5.30729) Build Identifier: Trac 3.3.x Trac / Mylyn supports using client-certificates for https-connections. However, as all informations are passed on as Java-Variable it seems unhandy: A password may be visible, and you cannot have two different certificates for two Task-Repositories. I have added this functionality and created a patch. Testing was limited (I had problems building a proper update-site), but done within the IDE and also with Eclipse 3.5 SR1 on Linux and MacOS. It would be great, if you can review my patch and submit it into Mylyn. Reproducible: Always Steps to Reproduce: (feature request)</description>
      <attachments/>
      <comments>16</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>226618</id>
      <title>[context] move task-specific editor memento storage out of the plug-in preference store</title>
      <description>We can currently bloat this store, which might be kept in memory.</description>
      <attachments/>
      <comments>32</comments>
      <commenters>7</commenters>
    </issue>
    <issue>
      <id>255003</id>
      <title>[api] allow empty password on repository properties page</title>
      <description>I am developing a connector, and I think I might have spotted a minor bug. My backend requires a login, but it is legal to have an empty password. However, AbstractRepositorySettingsPage.isPageComplete() explicitly checks - via the private method isMissingCredentials() - against empty passwords. This means that I cannot easily implement isPageComplete() in my RepositorySettings class which extends AbstractRepositorySettingsPage, because I cannot call super.isPageComplete() with an empty password, and I also cannot bypass AbstractRepositorySettingsPage and call isPageComplete() in its superclass AbstractTaskRepositoryPage. If you understand... I think a reasonable fix would be to make AbstractRepositorySettingsPage.isMissingCredentials() protected instead of private.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>216557</id>
      <title>[api] add option to "Replace existing attachment of the same name" when attaching files</title>
      <description>Build ID: M20071023-1652 Steps To Reproduce: 1. Open a task that has an attachment 2 [details]. Save that attachment on your local disk 2. Under "Attachments" click "Attach..." 3. See "File", and then "Browse" 4. Select a file you save in step 2. 5. Select "Next" Here, there should be check box, as you see on Trac's web interface. More information:</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>300078</id>
      <title>[discovery] support installing of multiple features per entry</title>
      <description>Integrators have requested to add discovery items that consists of multiple connectors, e.g. when multiple repository types need to supported through a single install. It is possible to work around this by creating an aggregating feature that includes other features but that has limitations, e.g. when aggregated features need to be updatable separately. To support this scenario better the data model and extension point schema needs to be extended to allow specification of multiple feature ids per entry.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>292440</id>
      <title>[discovery] indicate which Connector/Extension Discovery items have already been installed, check for updates</title>
      <description>When using the discovery install mechanism it can be confusing to see items that have already been installed unavailable in the list, because there is not visual indication that they have already been installed. Proposal: * Add a check box that says "Show installed extensions". Make it checked by default. * Gray and disable already installed items, overlay "Installed" somewhere.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>300081</id>
      <title>[discovery] provide hook for filtering of entries</title>
      <description>If the discovery component is used in a particular context it can be desirable to filter visible items. An example would be a discovery directory that contains team and task repository connectors. If the discovery UI is invoked from the the synchronize view only team providers would be displayed whereas when it is invoked form the task list task repository connectors would be displayed. The discovery viewer should support a viewer filter or a similar filtering facility.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>299599</id>
      <title>[releng] add capabilities plug-in to SDK feature</title>
      <description>Starting with Helios Mylyn will be required to ship a capabilities plug-in (bug 299344). Since this is mainly relevant to integrators and not users the SDK feature might be a good candidate to include the capabilities plug-in.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>298156</id>
      <title>[api] provide method for canceling HTTP requests without blocking</title>
      <description>Build Identifier: I would be nice if the cancel will done immediately. Maybe this is not possible if a "external" (none java) library is called but I think this is all pure java :) Reproducible: Didn't try Steps to Reproduce: 1. "new query" 2. ... search options update starts ... 3. click "cancel" 4. but then the update is still running ... (a long time)</description>
      <attachments/>
      <comments>11</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>302211</id>
      <title>[discovery] allow clients to control the list of connectors marked as installed</title>
      <description>For clients that reusing discovery it would be useful if it was possible to provide an alternative implementation for determining the list of installed connectors.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>303395</id>
      <title>[releng] annotate test results with target version</title>
      <description>If tests are running against multiple Eclipse versions the CI system can not distinguish the different targets and only reports results for the last target it processes.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>303385</id>
      <title>[api] TaskEditor pages that don't extend AbstractTaskEditorPage should still participate in refresh</title>
      <description>Other editor pages contributed to the TaskEditor that don't extend AbstractTaskEditorPage or BrowserFormPage not refreshed.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>294957</id>
      <title>[api] move support extension into API</title>
      <description>I found out that you added org.eclipse.mylyn.tasks.bugs.support extension point which allows to integrate with bug reporting (bug 212209 comment 36); and it looks good. We (Subversive) also want to integrate with it, e.g. it already includes CVS etc., but this extension point is internal which means that its usage is discouraged. When will this extension point become public? I didn't investigate too deep but does it allow to include run-time information in description? -- Configuration Details -- Product: Eclipse 1.2.0.20090615-0858 (org.eclipse.epp.package.rcp.product) Installed Features: org.eclipse.mylyn_feature 3.3.0.v20091013-0200-e3x</description>
      <attachments/>
      <comments>15</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>301756</id>
      <title>[api][editor] provide method for selecting and revealing elements in the task editor</title>
      <description>There are several use cases such as handling of selections in the task editor outline, opening of a particular attribute/comment in the editor from a hyperlink or highlighting of search matches that require an operation to select and reveal a model element in the task editor. Since the editor UI and task data model differs significantly between connectors the API needs to be extensible and flexible, e.g.: public class AbstractTaskEditorPage { public boolean selectAndReveal(IAdaptable element); }</description>
      <attachments/>
      <comments>8</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>304775</id>
      <title>[discovery] update discovery to consume P2 API changes</title>
      <description>Discovery needs to be updated for P2 API changes in 3.5M6.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>307455</id>
      <title>[releng] update copyright notices and release 3.3.3</title>
      <description>The copyright notices should be updated to where applicable (see bug 262114).</description>
      <attachments/>
      <comments>7</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>307452</id>
      <title>[discovery] directories should support relative path names</title>
      <description>In order to simplify maintenance of diretory.xml files relative urls should be supported for directory entries.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>304099</id>
      <title>[api] create extension point for tasks related search functionality</title>
      <description>To make o.e.m.tasks.ui easier to consume for RCP applications the dependency on o.e.search should be removed and search related functionality be accessed through an extension point.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>311634</id>
      <title>[api] allow connectors to provide alternate IEditorInput</title>
      <description>Connectors can supply an alternate editor id and it would be convenient to also allow connectors to provide an alternate editor input.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>313977</id>
      <title>nest other features in SDK feature</title>
      <description>The SDK feature should include all other features which would allow users to install all of Mylyn through a single feature.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>304910</id>
      <title>[api] recognize comment#number link on bug editor without bug number too</title>
      <description>Changes in bug 164221 provide recognition of patterns like bug#164221 comment#24. Bugzilla also recognizes the pattern "comment #24" making a link to the comment in current task. Mylyn does not seem to understand that yet. Perhaps a shortcut like bug 164221#24 would be nice to have too.</description>
      <attachments/>
      <comments>33</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>311833</id>
      <title>create slides for Helios review</title>
      <description>Important dates: IP Logs due: Friday, May 28 Docuware due: Friday, May 28 Helios Review: Friday, June 11 Helios Release: Wednesday, June 23 Docuware: In addition to the regular review docuware, please submit a very simple, brief additional file that summarizes what you are bringing to the release -- just one or two paragraphs, or a few bullet points is all we're looking for here. We'll combine the short files to create a longer one that applies to the entire release.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>315717</id>
      <title>[build] implement test cases for validation</title>
      <description>The repository validation tests should check basic things like a successful connection, invalid URLs, non Hudson URLs etc. similar to TracClientTest.testValidate(). Server configuration should be encapsulated in a HudsonFixture class similar to TracFixture. Initially, http://mylyn.eclipse.org/hudson can be used as a test environment.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>313422</id>
      <title>create New &amp; Noteworthy for Mylyn 3.4</title>
      <description>The New &amp; Noteworthy for Mylyn 3.4 should be available on May 26th which is the date of the feature freeze.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>314166</id>
      <title>improve scheduled presentation bins and sort order</title>
      <description>The scheduled presentation currently has the following problems: * Items can show up in more than one bin, eg, if something is both scheduled and overdue. This duplicates information, is confusing, and makes the presentation appear buggy. * Tasks are missing from the presentation, meaning that the user needs to switch back to the Categorized presentation to reliably find things. Here's an updated design that addresses these problems, bins are: * *Today*: Same us now, only place that "overdue" tasks show. Day bins have are similar. * *This Week*: no change, same sorting as now, "Next Week""Two Week" and "Future" bins are similar. * *Outgoing*: new bin with all outgoing tasks * *Incoming*: new bin with all tasks with incomings not already shown in above bins, sorted by modification date. * *Unscheduled*: no change. * *Completed*: all tasks that don't show in above bins. The idea is that no tasks that show in a higher-ranked bin show in the bin below.</description>
      <attachments/>
      <comments>50</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>317648</id>
      <title>[release] plan Mylyn 3.5 release</title>
      <description>Update the release plan for Mylyn 3.5: http://www.eclipse.org/projects/project-plan.php?projectid=tools.mylyn</description>
      <attachments/>
      <comments>10</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>317767</id>
      <title>[build] automatically refresh Builds view</title>
      <description>The Builds view should have a setting for an automatic refresh that is configurable through a preferences page.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>317768</id>
      <title>[build] add decoration when Builds view is in fast view</title>
      <description>The decoration should indicate the result of the last refresh, i.e. if there are failing build plans.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>318954</id>
      <title>support stories and improve subtask creation</title>
      <description>Trac should recognize stories as a task type. Also if subtasks of stories are created the type should default to task.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>319397</id>
      <title>[api] let the connector be able to define task ownership definition</title>
      <description>Build Identifier: Currently task ownership is fixed - TaskRepositoryManager.isOwnedByUser will return true only if the user using repository is the same as owner of the task. In most cases that's true. Ownership in case of Crucible is something bigger - we treat reviewers as owners too because they are responsible for completing the task. So I propose to extend ownership definition and make it connector dependent. This will allow us to properly handle things like due dates for Crucible. Reproducible: Always</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>319652</id>
      <title>[releng] provide a Buckminster build of Mylyn</title>
      <description>Please "Buckminsterize" the Mylyn build.</description>
      <attachments/>
      <comments>31</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>319469</id>
      <title>highlight filter matches in Task Search view</title>
      <description>Matches to the filter text in the Task Search view should be highlighted similarly to the File Search view matches. This would make it easier to see the matches of the filter in the displayed task summary.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>321177</id>
      <title>[api] provide generic support for configuring table columns and sorting</title>
      <description>It's common that tables provide support for showing, hiding and sorting of columns. The o.e.m.commons.ui plug-in should provide reusable classes for managing and persisting the state of tables.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>250257</id>
      <title>persist columns in attachments table</title>
      <description>I changed sizes of the columns in Attachments table on Task editor, the problem is that it's not persisted so as soon as I activate the task again I need to resize them again.</description>
      <attachments/>
      <comments>27</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>192485</id>
      <title>add sort by last modified date to Task List</title>
      <description>Add sort by last changed data to the task list. Would be very handy to have it when preparing status report.</description>
      <attachments/>
      <comments>14</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>319412</id>
      <title>provide documentation for support extension point</title>
      <description>The o.e.m.tasks.bugs extension point need some documentation to enable integrators to consume it more easily.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>288171</id>
      <title>[api] enable maximize for any task editor part</title>
      <description>Currently a maximize button appears on the toolbar of the task description and new comment parts, and can be enabled on any TaskEditorRichTextPart that a client may create. It would be beneficial to have the maximize capability for other types of parts as well, especially if that part has a similarly large control that could present a full screen of data, such as a table or a tree.</description>
      <attachments/>
      <comments>11</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>319289</id>
      <title>PersonProposalProvider should display real name when available</title>
      <description>Often the real name of a person is available and should be preferred for displaying in the content assist instead of the user id.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>321811</id>
      <title>[build] show message when no builds servers or builds are configured</title>
      <description>If the Builds view is opened in a clean workspace, the view should show a link for creating a build server (similar to the Synchronize view).</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>322195</id>
      <title>[build] support filtering of disabled builds</title>
      <description>There should be a filter option to filter out disabled jobs.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>322194</id>
      <title>[build] remove root item if there is only one build server</title>
      <description>In case you only have one build server, the root item describing the server should be removed as it provides no information. This will also help to unclutter the UI.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>323325</id>
      <title>[api] provide utility for converting HTML to plain text</title>
      <description>Sometimes a browser widget is too heavy weight, e.g. when embedded in a tooltip, and a more light weight method for rendering HTML text is needed. The commons core API should provide means to convert HTML to plain text. See HTML2TextReader in JFace for reference.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>318652</id>
      <title>[build] support streaming of console contents</title>
      <description>Hudon provides the console output of builds at http://mylyn.eclipse.org/hudson/job/mylyn--heartbeat/45/consoleText . The connector should have a facility to show that console output in the Eclipse Console view.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>318541</id>
      <title>[build] show popup notifications when build status changes</title>
      <description>If the status of a build changes a notification should be displayed. Notification should be configurable from a preferences page.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>323921</id>
      <title>[build] support hyperlinks in build console</title>
      <description>Many builds have URLs in their build output (p2 repos, maven, etc) and the user should be able to just click on the links to open up the pages.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>324156</id>
      <title>[build][hudson] add support for parsing test results</title>
      <description>When a build is refreshed test results should be downloaded and stored in the data model.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>324372</id>
      <title>[build] add copy details menu</title>
      <description>The Copy Details menu in the Task List allows to quickly copy reference to tasks to the clipboard. The builds view and editor should support a similar menu for build elements.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>324371</id>
      <title>[build] support creating tasks from builds</title>
      <description>If a build fails it would be helpful if it was possible to create a task from the failed test or build.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>326113</id>
      <title>[scm] provide data model for change set retrieval</title>
      <description>In order to associate tasks and builds with change sets a generic data model is needed that provides an abstraction for SCM changes. The data model should be extensible to allow connectors to supply a data model specific to a particular SCM system.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>324157</id>
      <title>[build][hudson] add support for parsing change set information</title>
      <description>When a build is refreshed information about change sets should be downloaded and stored in the data model.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>321192</id>
      <title>[build] console log for build details editor</title>
      <description>Small part for showing the console log of the build.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>326723</id>
      <title>[build] show an indicator that a build is queued</title>
      <description>Right now, there is an indicator if a build is building. If you start a new build and it becomes queued, there is no indication that the action worked and that it will build.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>326722</id>
      <title>[build] refresh action in context menu is disabled for all builds</title>
      <description>It seems that the action should be enabled so that a single build can be refreshed. This doesn't seem to be enabled for any build in my view.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>321191</id>
      <title>[build] test results for build details editor</title>
      <description>Create a part for the test results. Should include count of all and failed tests, an overview of the test failures and a link to open the tests in JUnit (only if they are JUnit tests of course).</description>
      <attachments/>
      <comments>6</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>315494</id>
      <title>[api] add validateSetttings button (fallback) to AbstractRepositorySettingsPage</title>
      <description>In case the settings page is used in a different wizard (where one has no control over, e.g. the platform's import wizard), there will be no ValidateSettings button (since it is in the wizard itself). The settings page should check with it's wizard if there is actually such a validation control, and if not, display it on the page.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>328169</id>
      <title>add scrollbar to task list legend</title>
      <description>The UI legend can be too large (with a lot of connectors) for small screens. In my installation, 6 connectors with separate icon sets are enough to exceed the 800px (- win7 taskbar) available.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>325497</id>
      <title>preset component when creating task while query is selected</title>
      <description>About every tenth time I create a bug under the "Community" Product in Eclipse Bugzilla, I assign it to the wrong Component. I have a query in the Task List that lists Bugs in the "Community/Proposals and Reviews" product/component. I right-click on the query "folder" to create a new task. The new task opens with the "Community" Product and "Architecture Council" Component selected. Very often, I remember to set the Component properly. Sometimes I forget. I recognise this as Pebkac (problem exists between keyboard and chair), but is there an enhancement possibility here that can take some of the bogus email off the architecture council?</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>333942</id>
      <title>support validation for Gerrit repositories</title>
      <description>The repository settings dialog should support proxy settings and validation.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>291770</id>
      <title>[api] allow connectors to advise on populating People content assist popup</title>
      <description>I working on some issues raised by users beta version of Industrial SQL Connector. See bug 184532: [connector] Generic SQL connector The people fields in the task editor have content assist, but that is not prefilled. So my question was How and where can I populate the names of the people to which a bug may be assigned? Here is what I found after some searching: - the proposals are prepared in org.eclipse.mylyn.internal.tasks.ui.PersonProposalProvider - the mechanism is that it wil loop over all LOADED tasks that share the same repository URL and add the owner of that task - there is no code to add commenters or reporters, or to query the repository, or to intervene and advise in this process. The code is heavily commented with FIXME reimplement for 3.3 In my case I can just do an SQL query to the database to provide a list of people. Either a SELECT DISTINCT on the history or a SELECT on a special table containing current bug owners. Content assist may be different for Assigned To, CC, QA contact or other person fields. Content assist may also be different for based on specific Task properties, such as product,component, platform, or severity... So I propose a method to be added to the repository API called SortedSet&lt;String&gt; advisePersonProposals(TaskAttribute attribute, ITask task, TaskData data, SortedSet&lt;String&gt; proposal); that in turn will call a method in the connector SortedSet&lt;String&gt; advisePersonProposals(TaskRepository repository, TaskAttribute attribute, ITask task, TaskData data, SortedSet&lt;String&gt; proposal); The default list will contain the current task owner. The default will either return the unchanged list, or loop through loaded tasks and add the owners. A connector writer can then override and make it more specific to its repository kind. If this sounds like a good idea I would be willing to contribute such a patch for the tasks core.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>266256</id>
      <title>[api] WebUtil.getProxy() should return Java system proxy if platform is not running</title>
      <description>From bug 258571: Currently WebUtil.getProxy returns null if the workbench isn't running (i.e. bugzilla libs in use but without platform running). Perhaps we should be checking if system level proxy properties are defined and return a proxy based on those if set? Java system properties: http://java.sun.com/j2se/1.4.2/docs/guide/net/properties.html</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>334520</id>
      <title>[api] provide method to generate commit message for a task</title>
      <description>We should provide API to access the functionality of ContextChangeSet#getComment(boolean checkTaskRepository, ITask task, IResource[] resources) in order to fill in the commit message for SCM providers.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>303278</id>
      <title>Let the Task Trim Widget finally escape from incubation</title>
      <description>This widget is a great help for many users and for me it seems pretty stable for long time now. Please consider graduating it so that it can be more easily consumed via p2.</description>
      <attachments/>
      <comments>16</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>337050</id>
      <title>show patch set contents when expanded in task editor</title>
      <description>Currently only contents for the last change set is shown when the review editor is opened. Contents for other patch sets should be available as well.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>286963</id>
      <title>[api] add support for ignoring incoming notification on specified fields</title>
      <description>There are scenarios where changes that take place on a task may be of little interest to the user yet result in awareness queues (incoming arrows and highlighting in the editor, notification popups). Examples of such cases could include: * when the CC list on a bug changes * notification of changes made by myself * some custom fields It would be great to have a facility in Mylyn where the user could denote which fields to disregard.</description>
      <attachments/>
      <comments>22</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>338763</id>
      <title>[api] support propagating data object to ITaskDataManagerListener</title>
      <description>Need mechanism to set/get additional metadata object on ITaskDataManager listener to support use cases like determining cause of update (i.e. submit vs background sync).</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>338612</id>
      <title>[api] Support getting the old value of a task attribute when it has changed</title>
      <description>It would be useful to be able to get the old value of a TaskAttribute from the TaskDataModel when it has changed (the value in workingCopy.getLastReadData()).</description>
      <attachments/>
      <comments>3</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>334962</id>
      <title>filter subtasks of tasks not matched by queries</title>
      <description>I have a subtask of a task that is matched by a query, but it's a subtask that doesn't concern me at all. I would like to be able say that I do not want to be notified of changes to this subtask.</description>
      <attachments/>
      <comments>27</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>338499</id>
      <title>support hiding of queries</title>
      <description>It can be desirable to have tasks available in the offline cache but not visible in the task list. The task list should support a facility for hiding queries and suppressing notifications for the tasks contained in those queries.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>339284</id>
      <title>include WikiText feature in WikiText SDK</title>
      <description>The WikiText SDK feature includes all WikiText plug-ins that are already included in the WikiText feature. It should include the feature instead.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>337227</id>
      <title>[api] add a download counter URL to the connector discovery</title>
      <description>It's currently difficult to determine how many downloads are being initiated from the Connector Discovery. It would be ideal if each Connector Discovery entry had an additional URL that was visited during the installation process so installs could be counted using web statistics/analytics.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>336655</id>
      <title>improve welcome screen for Mylyn 3.5</title>
      <description>Welcome: * Mylyn task Management =&gt; Connect Eclipse to your Team Systems &amp; needs a new description * New link: open add team repository wizard What's new: * Mylyn Application Lifecycle Tools * Visit the Mylyn N&amp;N on Eclipse.org Tutorials: * Update content * Consider second screen to provide more content</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>340260</id>
      <title>make dependencies on JDT and ECF optional</title>
      <description>To support installing the Hudson connector into RCP applications the dependencies on JDT and ECF should be optional.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>339815</id>
      <title>[releng] add mirror urls to update site</title>
      <description>The generated update sites shoudl have mirror urls.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>340990</id>
      <title>Build Plans List should resize with window</title>
      <description>Build Identifier: Build id: 20110218-0911 Second page of the New Build Server wizard - the list containing the Build Plans doesn't resize vertically - should attach to the bottom for resize Reproducible: Always Steps to Reproduce: 1. Just step through adding a new Build Server from the Builds view 2. Resize the dialog vertically</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>342373</id>
      <title>provide history implementation for Bugzilla</title>
      <description>The Bugzilla connector should provide access to the change history of task by implementing the API that was added as part of bug 142906.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>345056</id>
      <title>disable the submit button if we know that we get an error</title>
      <description>There are some cases where we know that an submit must fail. 1) anonymous user can not submit bugs 2) when ../show_bug.cgi?ctype=xml&amp;id= did not have the exporter attribute in &lt;bugzilla&gt; then all emails did not have @domain We should show a message with an hyperlink for the action. patch is coming soon!</description>
      <attachments/>
      <comments>27</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>345826</id>
      <title>show Gravatar images in task editor</title>
      <description>Provide support for showing an image for the task assignee in the top-right corner of the task editor. Images should be managed through the Mylyn Commons identity API which retrieves them from services such as Gravatar.</description>
      <attachments/>
      <comments>16</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>344198</id>
      <title>make com.sun.xml.bind dependency optional</title>
      <description>This is a follow up of bug 325176. Unfortunately, the proposed solution as described in that bug, does not work for non-Oracle JVMs (or jaxb implementations). It would be nice if there was a way to accomodate both. A solution which works on Java 5 and does not lock into one specific implementation. Thanks!</description>
      <attachments/>
      <comments>16</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>346162</id>
      <title>replace json in favor of gson</title>
      <description>Note that the component has been picked arbitrary. org.eclipse.mylyn.reviews.core requires com.google.gson. Mylyn commons depends on org.json. It would be nice if Mylyn could only use one of them consistently as a dependency for JSON related things. Since org.json isn't really available under a free license, our preference would be Google GSON. Thanks!</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>342275</id>
      <title>provide "New task from failure" for test cases</title>
      <description>The tests part in the build editor should support the same idea as the JUnit view integration to create a new task based on a failing test.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>344250</id>
      <title>allow searching for reviews</title>
      <description>It would be great to integrate gerrit into the task search to easily search for existing reviews.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>346153</id>
      <title>Double clicking a repository in the team repositories view should open the repository properties</title>
      <description>Double clicking a repository in the team repositories view should open the repository properties.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>343606</id>
      <title>[dicsovery] show installed Connector Discovery solutions</title>
      <description>In order to make it clear to the user what's installed and what isn't, we need a facility to show installed solutions. They should be distinguished, eg, with some kind of graphical check and a label that says "Installed". These entries should likely be hidden by default.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>339459</id>
      <title>[discovery] support an attribute to mark connectors as not available</title>
      <description>If connectors are not available, e.g. due to a version incompatibility it would be nice to have the ability to set a flag in discovery and a message that is displayed when the connector is selected.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>339467</id>
      <title>[discovery] inform users when new versions or connectors are available</title>
      <description>The Mylyn project provides maintenance and feature releases several times a year. In addition, connectors are frequently updated independently from the main project and made available through discovery. Many users consume Mylyn through EPP packages which are only released once a year and updated twice with maintenance versions. That means most users are running out dated Mylyn versions and may not be aware of available connectors. To make it easier for users to consume Mylyn updates we have discussed the following enhancements: * Show check boxes in the repository dialog and connector discovery to: ** Receive notifications if new connectors are available (opt-in) ** Receive notifications when a new Mylyn version is available (opt-in) * An RSS feed is provided on eclipse.org/mylyn/feed/ that is polled on a regular interval, e.g. every two weeks * Feed entries are displayed as service messages in the task list * Each message can be filtered by: ** os ** arch ** nl ** mylyn version ** product ** buildId ** platform version ** installed features ** Java version * Messages may have associated actions: ** Update Mylyn (only shown if the p2 update operation could be validated previously) ** Open discovery ** Open website</description>
      <attachments/>
      <comments>7</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>237546</id>
      <title>expand new comment when submitting changes to the repository</title>
      <description>When a task is submitted to the repository the editor does not indicate which changes were submitted to the repository.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>347056</id>
      <title>[api] Provide factory to get an instance of NewRepositoryWizardSelectionPage</title>
      <description>It would be useful if the framework provided some kind of factory or command to get an instance of or open a NewRepositoryWizardSelectionPage, so that clients can provide their own UI for opening the wizard.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>315184</id>
      <title>[api] provide hook in AbstractRepositorySettingsPage on finish and cancel</title>
      <description>Build Identifier: It would be great to have ability to handle Finish and Cancel events from AbstractRepositorySettingsPage. Here some example of implementation I've found in eclipse archive: http://dev.eclipse.org/mhonarc/newsLists/news.eclipse.platform.jface/msg00182.html Reproducible: Always</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>348348</id>
      <title>focus filter sticks when FocusTaskList action runs twice</title>
      <description>This problem was introduced by the changes made for bug 339777. TaskListFocusAction can get into a state when uninstallInterestFilter() does not remove the interest filter resulting in a Task List that is always focused.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>350333</id>
      <title>show content-type icons for files in changes section</title>
      <description>Use content-type specific icons for files displayed under changes displayed in the build editor.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>341027</id>
      <title>[build] changesets should provide right file icon</title>
      <description>The files in the changes section should show the corresponding icons for the file.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>352259</id>
      <title>show content-type icons in Artifacts section</title>
      <description>Follow up to bug350333, also show content-type icons in Artifacts section of build editor.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>352255</id>
      <title>Move private notes below attachments</title>
      <description>The private notes section of the task editor should be moved to below attachments, just above description.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>350334</id>
      <title>add preference for showing test failures only</title>
      <description>The setting for showing test failures only in the Test Results section of the Build editor should be persisted between invocations of the editor.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>352916</id>
      <title>show artifact hierarchy in build editor</title>
      <description>The Artifacts section of the build editor currently shows a flattened list of artifacts. This makes them difficult to disambiguate when build generates artifacts with the same name but in different folders (as JGit does). A folder hierarchy layout would make it easier to navigate for these cases.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>355900</id>
      <title>add Hudson/Jenkins connector to Indigo repository</title>
      <description>As discussed here http://dev.eclipse.org/mhonarc/lists/mylyn-pmc/msg00086.html add the following features to the Indigo repository: org.eclipse.mylyn.builds org.eclipse.mylyn.hudson org.eclipse.mylyn.versions</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>356650</id>
      <title>provide a standalone example application for Hudson</title>
      <description>Provide an application that demonstrates how to use the Hudson connector in standalone mode.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>341434</id>
      <title>support openid for login to gerrit</title>
      <description>It would be great if the Gerrit Connector supported OpenId as a method of authentication.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>350678</id>
      <title>support authentication by account id in 'development only mode'</title>
      <description>Version 0.8 of the Mylyn Gerrit reviews doesn't authenticate when the user is in 'development_become_any_account' mode. In this case, the login is something like http://localhost:8080/become?account_id=1000000 and has no password. When I try to put in a user of 1000000 in Mylyn, when pointing to a back-end instance, the login fails with 'Unexpected error: 200 (OK)'. Given that people aren't likely to use this in real systems, this is probably a minor issue to have, but it would be nice if there were some way of dealing with this response code and letting the user log in/comment in dev mode, for demo and familiarity purposes.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>349023</id>
      <title>provide support for Gerrit 2.2</title>
      <description>Build Identifier: 20110301-1815 The code in getPatchSetDetail(final PatchSet.Id id, IProgressMonitor monitor) assumes that if an exception is thrown from getChangeDetailService().patchSetDetail(id, this); that this must mean that the Gerrit version is &lt; 2.1.7. It then goes on to try the fallback of getChangeDetailService().patchSetDetail(id, this); For me, the second call throws an exception, because I'm trying to make the connector work with Gerrit 2.2.1. I'm clearly getting an "Error parsing request", but I just get exactly what I would expect from this code (given I'm using the compiled jars from 2.2.1): java.lang.NoSuchMethodError: org.eclipse.mylyn.internal.gerrit.core.client.compat.ChangeDetailService.patchSetDetail(Lcom/google/gerrit/reviewdb/PatchSet$Id;Lcom/google/gwt/user/client/rpc/AsyncCallback;)V I Because there is no further catch, this exception is propogated, and so I've lost the original exception that happened on: patchSetDetail(id, null, null, this). I'm not sure what the solution is. Maybe catch NoSuchMethodError and throw the original exception (e) instead. Reproducible: Always Steps to Reproduce: Details of code examination given. Otherwise: run against Gerrit 2.2.1, using the compiled prettify, common and reviewdb jars from 2.2.1</description>
      <attachments/>
      <comments>22</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>357207</id>
      <title>enhance patch sets with author and date/time</title>
      <description>To should be possible to quickly see the author and date/time of a changeset in the Gerrit task editor, similar to comments in the task editor.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>354153</id>
      <title>[release] plan Mylyn 3.6.2 release</title>
      <description>The Mylyn 3.6.2 release is planned for Indigo SR1 (September) to pickup bug fixes since the 3.6 release.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>360171</id>
      <title>[modeling] Papyrus UI tests hang with modal dialog</title>
      <description>http://ci.mylyn.org/job/mylyn-context-modeling/47/console Main" prio=10 tid=0x09be6400 nid=0x5773 runnable [0xb7401000] java.lang.Thread.State: RUNNABLE at org.eclipse.swt.internal.gtk.OS.Call(Native Method) at org.eclipse.swt.widgets.Display.sleep(Display.java:4069) at org.eclipse.jface.window.Window.runEventLoop(Window.java:826) at org.eclipse.jface.window.Window.open(Window.java:801) at org.eclipse.jface.dialogs.MessageDialog.open(MessageDialog.java:334) at org.eclipse.jface.dialogs.MessageDialog.open(MessageDialog.java:364) at org.eclipse.jface.dialogs.MessageDialog.openQuestion(MessageDialog.java:463) at org.eclipse.papyrus.diagram.common.resourceupdate.PartActivationListener.partActivated(PartActivationListener.java:95) at org.eclipse.ui.internal.PartListenerList$1.run(PartListenerList.java:72) at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42) at org.eclipse.core.runtime.Platform.run(Platform.java:888) at org.eclipse.ui.internal.PartListenerList.fireEvent(PartListenerList.java:57) at org.eclipse.ui.internal.PartListenerList.firePartActivated(PartListenerList.java:70) at org.eclipse.ui.internal.PartService.firePartActivated(PartService.java:187) at org.eclipse.ui.internal.PartService.setActivePart(PartService.java:306) at org.eclipse.ui.internal.WorkbenchPagePartList.fireActivePartChanged(WorkbenchPagePartList.java:57) at org.eclipse.ui.internal.PartList.setActivePart(PartList.java:136) at org.eclipse.ui.internal.WorkbenchPage.setActivePart(WorkbenchPage.java:3636) at org.eclipse.ui.internal.WorkbenchPage.requestActivation(WorkbenchPage.java:3159) at org.eclipse.ui.internal.PartPane.requestActivation(PartPane.java:279) at org.eclipse.ui.internal.PartPane.handleEvent(PartPane.java:237) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1258) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1282) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1263) at org.eclipse.swt.widgets.Shell.setActiveControl(Shell.java:1580) at org.eclipse.swt.widgets.Control.sendFocusEvent(Control.java:3587) at org.eclipse.swt.widgets.Control.gtk_event_after(Control.java:2938) at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1738) at org.eclipse.swt.widgets.Control.windowProc(Control.java:5016) at org.eclipse.swt.widgets.Display.windowProc(Display.java:4408) at org.eclipse.swt.internal.gtk.OS._gtk_main_do_event(Native Method) at org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(OS.java:8422) at org.eclipse.swt.widgets.Display.eventProc(Display.java:1245) at org.eclipse.swt.internal.gtk.OS._g_main_context_iteration(Native Method) at org.eclipse.swt.internal.gtk.OS.g_main_context_iteration(OS.java:2276) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3207) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2696) at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2660) at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2494) at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:674) at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332) at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:667) at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149) at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123) at org.eclipse.tycho.surefire.osgibooter.UITestApplication.runApplication(UITestApplication.java:31) at org.eclipse.tycho.surefire.osgibooter.AbstractUITestApplication.run(AbstractUITestApplication.java:114) at org.eclipse.tycho.surefire.osgibooter.UITestApplication.start(UITestApplication.java:37) at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196) at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110) at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622) at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577) at org.eclipse.equinox.launcher.Main.run(Main.java:1410) at org.eclipse.equinox.launcher.Main.main(Main.java:1386)</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>360330</id>
      <title>[api] provide generic extension point reader</title>
      <description>The common code for reading extension points and instantiating classes from extensions should be extracted to a reusable class.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>360780</id>
      <title>[soap][api] allow subclasses to override creation of HttpMethod instances</title>
      <description>When using the SoapHttpSender, it is useful to be able to override the HttpMethod instances created. These instances have direct access to the writing of the request and reading of the response. One use case is intercepting a malformed response and infering possible error causes. The handling is connector-specific and tricky, especially since Axis 1.4 has pretty unfriendly error messages for malformed input. Another use case is intercepting content and cleaning it up in case a proxy inadvertently rewrites it.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>355737</id>
      <title>update list of supported repositories for Mylyn 3.7</title>
      <description>To lower maintenance and testing overhead I propose that we stop support for unmaintained repository versions. This would leave support for these versions: * Bugzilla 3.4.12, 3.6.6, 4.0.2 * Trac 0.11.7, 0.12.2 * Hudson 2.1.0 * Jenkins 1.427 * Gerrit 2.2.1 Active testing of the following version would be discontinued: * Bugzilla 3.0, 3.2 * Trac 0.10 * Hudson/Jenkins 1.367 * Gerrit 2.1.5</description>
      <attachments/>
      <comments>7</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>361147</id>
      <title>support scrolling and focus in review comment part</title>
      <description>When opening the review comments widget in the compare editor, the resulting widget is cut off at the bottom, and is not selectable . Pressing 'F2' closes the widget. This was verified running the latest code from the e_3_7_m_3_6_x branch. Running Eclipse 3.7.1 on Gnome/GTK 2.22.1 , OpenSUSE 11.4 x86_64.</description>
      <attachments/>
      <comments>17</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>364164</id>
      <title>Make plugin id of versions.core public</title>
      <description>Build Identifier: To be able to access the constant with the plugin id from other classes it should be public. Review at http://review.mylyn.org/#change,112 Reproducible: Always</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>361048</id>
      <title>[api] move service message implementation to notifications component</title>
      <description>The service message implementation is a generic facility that should be available as part of the notifications component in the commons.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>367002</id>
      <title>refactor o.e.m.commons.repositories and o.e.m.commons.team packages to match bundle namespace</title>
      <description>The packages and ids in o.e.m.commons.repositories and o.e.m.commons.team should match the new bundle namespace o.e.m.repositories.core/ui.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>367003</id>
      <title>[api] expose identity model as OSGi service</title>
      <description>To make the identity model available to consumers in commons and tasks it should be expose as an OSGi service.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>356788</id>
      <title>Support for form-based login to Hudson/Jenkins</title>
      <description>Our Jenkins is running on Tomcat with certificate-based authentication. If the client doesn't provide a certificate we fall back to form-based authentication. Both login methods aren't supported by the Builds connector yet. See also Bug 356786 for certificate-based login support.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>366496</id>
      <title>[api] add path to place 'Associations' part</title>
      <description>When running the github connector inside Tasktop Dev, the summary part comes below the Tasktop-contributed attributes part. I've reported this against Tasktop dev at https://tasktop.com/bugs/show_bug.cgi?id=1781 and they decided that the fix should be in the github part, as "it is that they have a custom summary part and are changing the order when there are contributions to the header path".</description>
      <attachments/>
      <comments>10</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>368568</id>
      <title>[api] provide support for having repository and http authentication credentials the same</title>
      <description>The case that I had in mind is when there is a 401 (http authenication required) but the user should be prompted for repository credentials instead of http authentication credentials. The basic case is that the http auth and repository credentials should be kept in sync.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>367493</id>
      <title>[api] provide support for certificate authentication</title>
      <description>Provide support for certificate authentication: Enhance CommonsHttpClient to obtain certificate and trust manager from RepositoryLocation and create a connection manager configured with the corresponding SSL socket factory instance.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>356786</id>
      <title>support for certificate-based login</title>
      <description>Our Jenkins is running on Tomcat with certificate-based authentication. This isn't supported in the Builds connector yet.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>368777</id>
      <title>[api] support pre-emptive authentication in CommonHttpClient</title>
      <description>I've taken a look at using the new org.eclipse.mylyn.commons.repositories.http.core APIs, and the following came up: * it would be nice to have an easy way to instanticate an IOperationMonitor from an IProgressMonitor using public API. Currently there appears to be no API implementation of IOperationMonitor, though the internal OperationMonitor looks like it would do the job. The IOperationMonitor API is complex enough that commons should provide a default implementation. * it would be nice to have an easy way to implement preemptive auth using CommonHttpClient. I realize that preemptive HTTP auth is not great practice, however some repositories only support HTTP auth preemptively (the server doesn't ever issue a challenge). Currently the only way to enable preemptive auth is to write something as follows: bc.. CommonHttpClient httpClient = new CommonHttpClient(location); URL url = new URL(location.getUrl()); String hostname = url.getHost(); int port = url.getPort(); if (port == -1) { port = url.getDefaultPort(); } HttpHost targetHost = new HttpHost(hostname, port, url.getProtocol()); UserCredentials credentials = location.getCredentials(AuthenticationType.HTTP); if (credentials != null) { HttpUtil.configureAuthentication(httpClient.getHttpClient(), location); // Create AuthCache instance BasicAuthCache authCache = new BasicAuthCache(); // Generate BASIC scheme object and add it to the local auth cache AuthScheme basicAuth = new BasicScheme(); authCache.put(targetHost, basicAuth); httpClient.getContext().setAttribute(ClientContext.AUTH_CACHE, authCache); }</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>368835</id>
      <title>[api] disable log output for org.apache.http.*</title>
      <description>With the migration to the new HTTP transport the Hudson connector started logging a lot of output to the console by default: 16:29:24.517 [pool-1-thread-28] DEBUG org.apache.http.headers - &lt;&lt; Keep-Alive: timeout=15, max=100 16:29:24.517 [pool-1-thread-28] DEBUG org.apache.http.headers - &lt;&lt; Connection: Keep-Alive 16:29:24.517 [pool-1-thread-28] DEBUG org.apache.http.headers - &lt;&lt; Content-Type: text/plain 16:29:24.518 [pool-1-thread-28] DEBUG o.e.m.c.r.h.core.CommonHttpClient$1 - Connection can be kept alive for 15000 MILLISECONDS 16:29:24.518 [Worker-51] DEBUG o.a.h.i.c.t.ThreadSafeClientConnManager - Released connection is reusable. 16:29:24.518 [Worker-51] DEBUG o.a.h.i.conn.tsccm.ConnPoolByRoute - Releasing connection [HttpRoute[{s}-&gt;https://hudson.eclipse.org]][null] 16:29:24.518 [Worker-51] DEBUG o.a.h.i.conn.tsccm.ConnPoolByRoute - Pooling connection [HttpRoute[{s}-&gt;https://hudson.eclipse.org]][null]; keep alive for 15000 MILLISECONDS 16:29:24.518 [Worker-51] DEBUG o.a.h.i.conn.tsccm.ConnPoolByRoute - Notifying no-one, there are no waiting threads ...</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>328204</id>
      <title>[build][hudson] retrieve build parameter from job and not config</title>
      <description>The /job/action and /job/parameter tags of the XML output of a Hudson job have a partial description of required build parameters: &lt;parameterDefinition&gt; &lt;defaultParameterValue&gt; &lt;value&gt;INFO&lt;/value&gt; &lt;/defaultParameterValue&gt; &lt;description/&gt; &lt;name&gt;BUCKMINSTER_LOGLEVEL&lt;/name&gt; &lt;choice&gt;INFO&lt;/choice&gt; &lt;choice&gt;WARNING&lt;/choice&gt; &lt;choice&gt;ERROR&lt;/choice&gt; &lt;choice&gt;DEBUG&lt;/choice&gt; &lt;/parameterDefinition&gt; The only two things that are missing are the parameter types and for Run Parameter the project name. It seems that it would be straight forward to include that. A full description of parameters is only availalable from the config.xml but that may not be readable by all users and requires a separate request, e.g. https://build.eclipse.org/hudson/job/emf-cdo-integration/config.xml : &lt;parameterDefinitions&gt; &lt;hudson.model.ChoiceParameterDefinition&gt; &lt;name&gt;BUCKMINSTER_LOGLEVEL&lt;/name&gt; &lt;description/&gt; &lt;choices class="java.util.Arrays$ArrayList"&gt; &lt;a class="string-array"&gt; &lt;string&gt;INFO&lt;/string&gt; &lt;string&gt;WARNING&lt;/string&gt; &lt;string&gt;ERROR&lt;/string&gt; &lt;string&gt;DEBUG&lt;/string&gt; &lt;/a&gt; &lt;/choices&gt; &lt;/hudson.model.ChoiceParameterDefinition&gt; &lt;hudson.model.RunParameterDefinition&gt; &lt;name&gt;Run Parameter&lt;/name&gt; &lt;description&gt;Run Parameter Description.&lt;/description&gt; &lt;projectName&gt;test-ant&lt;/projectName&gt; &lt;/hudson.model.RunParameterDefinition&gt; &lt;/parameterDefinitions&gt;</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>345158</id>
      <title>fill in the build editor screen real estate</title>
      <description>Current build editor is using fixed heights for Test Results, Artifacts and Changes sections. It would make sense to have those sections fill in entire editor height. Also, it would be handy to have a resizeable split panel between sections (similar to PDE manifest editor).</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>357991</id>
      <title>openid authentication dialog provides no indication of the authenticity of the login page</title>
      <description>Normally when OpenID login is presented in a browser, the user can verify the authenticity of the login page from the browser address bar, and know if it's secure from the "lock" icon. I didn't notice any such information provided via the login dialog. This authenticity feedback is part of what makes OpenID work — I suspect that users may be reluctant to enter their username and password if they're not sure where the web page originated from. The dialog presented by @GerritRepositoryLocationUi.showAuthenticationDialog(String, OpenIdAuthenticationRequest)@ should provide the user with the web address location, and some indication as to the transport-layer protocol security (TLS/SSL). related to bug 341434: support openid for login to gerrit</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>358804</id>
      <title>support HTTP authentication for Gerrit</title>
      <description>To reproduce configure apache to: 1. reverse-proxy gerrit instance; 2. authenticate client by the 'basic' method. In this situation connector fails to retrieve gerrit configuration and after executing mylyn queries a warning icon is displayed. If I'm correct the reason for this is that GerritHttpClient#getMothod doesn't supply valid username/password for apache to handle authentication. It isn't the case for the GerritHttpClient#postJsonRequest method. -- Configuration Details -- Product: Eclipse Platform 3.7.1.v201109091335 (org.eclipse.platform.ide) Installed Features: org.eclipse.mylyn_feature 3.7.0.I20110922-1921</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>356898</id>
      <title>add hyperlink detector that detects bug links</title>
      <description>The Gerrit configuration specifies patterns for links in comments that should hyperlinked in the task editor, e.g.: "commentLinks":[ {"find":"(I[0-9a-f]{8,40})","replace":"\u003ca href\u003d\"#q,$1,n,z\"\u003e$\u0026\u003c/a\u003e"}, {"find":"([Bb]ug:?\\s*#?)(\\d+)","replace":"$1\u003ca href\u003d\"https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d$2\"\u003e$2\u003c/a\u003e"} ]</description>
      <attachments/>
      <comments>5</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>370504</id>
      <title>register URL handler for opening tasks in rich editor</title>
      <description>Based on the API provided by bug 346046 tasks should open in the task editor when opened from a URL.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>370432</id>
      <title>update target definitions for 3.6 to latest platform release</title>
      <description>The target definitions and the Orbit URLs need to be updated to the latest release versions.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>371017</id>
      <title>include task list index feature in build</title>
      <description>The task list index feature should be included in the build and added as a dependency of the org.eclipse.mylyn_feature.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>371010</id>
      <title>[api] provide abstracted priority mapping</title>
      <description>Most connectors have a different number than 5 for priority options. Some framework support for trying to map any ordered collection of priorities into those 5 buckets in Mylyn would be great. I assume lots of connectors implement something like this (most of them hardcoded), but also lots of connectors will have customizable options, so a generic approach seems like a good solution (of course with the connector being able to override that behaviour)</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>371747</id>
      <title>consume latest version of HttpCore and HttpClient</title>
      <description>HttpCore 4.1.4 and HttpClient 4.1.2 should be available in the Orbit S-build. The o.e.m.commons.repositories.http.core bundle should consume those versions and re-enable use of gzip streams.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>367789</id>
      <title>review parameters for HttpClient</title>
      <description>Review these parameters: * http.conn-manager.timeout * http.auth.credential-charset Also consider closing idle connection regularly: ClientConnectionManager#closeIdleConnections()</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>372360</id>
      <title>manage idle connections</title>
      <description>To ensure that idle connections are purged a thread should periodically invoke: connectionManager.closeExpiredConnections(); connectionManager.closeIdleConnections(30, TimeUnit.SECONDS);</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>372432</id>
      <title>[api] provide a generic list for managing listeners</title>
      <description>It is common that classes manage lists of listeners and have boiler plate code for notifications end error handling. This should be generalized in a class similar to org.eclipse.core.runtime.ListenerList.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>371984</id>
      <title>provide a generic storage API</title>
      <description>A common requirement is to persist state for a particular ALM artifact such as a task, build or repository. The commons should provide a simple persistence API that is not coupled to the file system, supports basic locking and deferring of I/O operations. It should be generic to be reusalbe.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>332697</id>
      <title>provide api for flushing editor mementos</title>
      <description>It would be useful to have a way to save the editor memento for a task without having to deactivate the task.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>371029</id>
      <title>add a Reindex menu item to the task list view</title>
      <description>While under normal usage the task list index should be maintained automatically, there are rare cases where the task list index could become out of sync with the task list. The user at times may wish to reindex the task list to resolve the issue. Adding a menu item to the task list that would cause the index to be rebuilt would provide a way to do this.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>239087</id>
      <title>[wikitext] implement a hyperlink detector in the form of "&lt;prefix&gt; &lt;qulified name&gt;"</title>
      <description>the hyperlink detector should detect "&lt;prefix&gt; &lt;qualified name&gt;". Examples are * See java class foo.bar.Baz, it could be related * See cpp class Foo, it could be related * See file foo.txt, I left some notes there * See task 123, I put a comment there</description>
      <attachments/>
      <comments>23</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>237831</id>
      <title>[sandbox] drop &amp; drag of the source element to the task editor</title>
      <description>when programmers drop &amp; drag a source element (e.g. files, class name, package name, method name) to the WikiText editor, the editor will generate its URI with proper wiki style. When posted, a link to this element will be displayed.</description>
      <attachments/>
      <comments>27</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>238038</id>
      <title>provide time range based folding for comments</title>
      <description>For every comment an expandable composite and source viewer is created which allocates a number of system resources. Opening a task with many comments can be slow and cause crashes if Eclipse runs out of resources (e.g. bug 206568, bug 216677). While some improvements have been made by constructing controls lazily the problems that the number of controls increases with the number of comments is inherent in the design. Two suggestions have been made to resolve this: 1. Use a single source viewer for displaying all comments 2. Add paging: only display n comments at a time A partial patch exists for (1) that would need to be ported to Mylyn 3.0. Both solutions should be implemented as a proto-type and compared in terms of usability, performance and resource usage.</description>
      <attachments/>
      <comments>72</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>240423</id>
      <title>[wikitext] specify extension point for resource hyperlink detectors</title>
      <description>Specify an extension point for hyperlink detectors as described on bug 239087.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>219939</id>
      <title>[wikitext] provide option to turn rendering off  for a particular comment</title>
      <description>Task editor could use fixed width font for comments as sometimes it happens people try to draw ASCII images there. For example here https://bugs.eclipse.org/bugs/show_bug.cgi?id=217738#c24</description>
      <attachments/>
      <comments>34</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>241167</id>
      <title>reimplement ExtensibleRichTextAttributeEditor to supports switching between RepositoryTextViewer and MarkViewer(WikiText)</title>
      <description>the new implementation will use StackLayout since it provides more flexible way of switching controls, while keeping the original features (switching between editing and previewing). The reimplementation is to provide method to disable/enable WikiText (bug 219939). Also to consider as well is to construct the controls lazily, i.e. create the preview widget when a preview is requested for the first time.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>244359</id>
      <title>implement grouping strategy for task comments</title>
      <description>Extract the implementation for grouping of task comments discussed on bug 238038.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>247736</id>
      <title>expand all button does not work the first time the task editor is open</title>
      <description>Quoted from comment 69 of bug 238038: * when a task editor is first opened and the comments section has not been expanded, pressing either of these buttons does nothing. I would expect the 'expand-all' button to cause all comments to be shown, or at the very least the 'current' comments. * when the comments section is expanded, the 'expand-all' button still does nothing, though the collapse-all button appears to work</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>244371</id>
      <title>implement tests for grouping strategy</title>
      <description>Implement tests that verify the grouping strategy for task comments.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>175229</id>
      <title>Should be able to open editor automatically when a task is activated</title>
      <description>From the newsgroup: Gunnar Wagenknecht wrote: &gt; Hi! &gt; &gt; When I activate a task all files in the context are opened in editors. &gt; Is there a preference to also open the task in the task editor? &gt; &gt; Cu, Gunnar Mik Kersten wrote: &gt; Not yet. The current work-around is to click the task link that's below &gt; the tool bar in the Task List. But I think that this should be &gt; automated, because very frequently when you reactivate a task you need &gt; to be reminded of what it's about. Could you please file a bug? ------- Original Message -------- Subject: Re: Open bug if it's activated Date: Wed, 21 Feb 2007 14:21:08 -0800 From: Mik Kersten &lt;beatmik@acm.org&gt; Organization: EclipseCorner Newsgroups: eclipse.technology.mylar References: &lt;erh9e7$us9$1@utils.eclipse.org&gt;</description>
      <attachments/>
      <comments>5</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>192220</id>
      <title>[api] AbstractAutoFocusViewAction should be public API</title>
      <description>Build ID: I20070323-1616 Steps To Reproduce: 1. org.eclipse.mylyn.internal.context.ui.actions.AbstractAutoFocusViewAction is in an internal package, however it is necessary to extend this class to have an apply-Mylyn button on a view. More information:</description>
      <attachments/>
      <comments>6</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>188984</id>
      <title>Provide better installation experience for users that are not using Java 1.5</title>
      <description>Mylar can be installed by an Eclipse user using a pre-1.5 version of Java. When they restart Eclipse, they just do not see Mylar, which can be confusing. There are a couple of ways this could potentially be improved: 1) Somehow prevent installing if they are not on 1.5. 2) If they do install on something earlier than 1.5, maybe there could be a plug-in that loads successfully, detects this, and provides a UI instructing the user that they need 1.5. Perhaps show them the version they are using, where the JVM is being loaded from and include some tips on how to control the version of Java that Eclipse uses.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>192059</id>
      <title>[api] provide runtime mechanism for registering structure bridges</title>
      <description>the ContextCorePlugin has an internalAddBridge(AbstractContextStructureBridge) method. An equivalent public API would be useful for integration where the bridges can only be determined at runtime.</description>
      <attachments/>
      <comments>18</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>172699</id>
      <title>[new uex] create new task list query from search results</title>
      <description>Should be able to automatically create a query in the task list based on the last executed Task Search. Perhaps we could contribute a button to the search results view. First iteration might just be to add a button to the Task Search page that will create a query based on the currently selected parameters (last executed query).</description>
      <attachments/>
      <comments>19</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>193423</id>
      <title>merge Open Repository Task dialog and Search functionality</title>
      <description>The two UIs have redundancy and there is a user expectation to be able to open a task by ID from the search page. We can consider leaving Open Repository Task but having that action set off by default.</description>
      <attachments/>
      <comments>48</comments>
      <commenters>7</commenters>
    </issue>
    <issue>
      <id>193059</id>
      <title>switch task working set to match active task</title>
      <description>From bug 189308: The only bit of automation that we seem to be missing is that if I activate a task that's not in the currently-selected working set, that working set should be automatically selected for me.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>195027</id>
      <title>add view shortcut for "task repositories"</title>
      <description>The planning perspective has no view shortcut for the "task repositories" view, but only for the "task list" view (i.e. "task repositories" is not under "Window" - "Show View" when the planning perspective is active). I know it is possible to open the "task repositories" view from the "task list", but the view shortcut would be more the Eclipse way.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>200741</id>
      <title>[api] make it possible for clients to override the Task Editor toolbar</title>
      <description>The toolbar is currently tangled with the addition of the other header controls. While in general we want toolbars to be standardized (e.g. for different kinds of tasks), we should make this more flexible until the various kinds are supported by the framework.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>160572</id>
      <title>[new eux] add ability to attach images to tasks</title>
      <description>When I go to add an attachment, I'm greeted with the text "Clipboard contents are for text attachments only." However, when I get to the next page in the "add attachment" wizard, I'm allowed to select the Content Type, including various image mime types. The behavior I would want is like this. If my clipboard has text in it, I click Next and then I can select from text/plain, text/html, or application/xml for the Content Type. If there is an image in my clipboard, I can click Next and then select from image/gif, image/jpeg, or image/png as the Content Type. The plugin would convert from the clipboard image to whichever Content Type is selected.</description>
      <attachments/>
      <comments>44</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>201131</id>
      <title>write New &amp; Noteworthy for 2.x releases</title>
      <description>Append any New &amp; Noteworthy items to this bug.</description>
      <attachments/>
      <comments>25</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>202184</id>
      <title>Allow "create new local task" shortcut</title>
      <description>99% of my tasks are local tasks, but now that I've added the Eclipse repository to Mylyn, I always need to specify which repository I'm adding to. It'd be much quicker if Mylyn had a "Create New Local Task" menu item that I could assign to a keyboard shortcut.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>202185</id>
      <title>Double-clicking task repository should suffice for "Finish"</title>
      <description>When creating a new task, the first screen allows you to select a repository; for local repositories, and possibly some others, that is the ONLY screen. If that's the case, then double-clicking on a repository should be the same as selecting one and clicking "Finish". If there are more screens, it should be the same as selecting a repository and clicking "Next".</description>
      <attachments/>
      <comments>5</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>200634</id>
      <title>make "Save Password" to keyring optional, similar to Team/CVS approach</title>
      <description>Mylyn should allow users to choose whether or not to save credentials to the keyring and only store them in memory if they choose not to. Users should be prompted for credentials when necessary, similarly to the CVS team provider. Since most of the credential storing/loading appears to be handled in the Mylyn core and ui, it would probably affect many of the connectors. I have observed the following behavior in the Trac connector: * Set up working repository connection with authenticated access. * Create a query * Close Eclipse. * Delete the keyring file. * Restart Eclipse. * The repository configuration dialog is shown when trying to refresh the query. Other operations result in a simple error dialog describing the lack of credentials.</description>
      <attachments/>
      <comments>58</comments>
      <commenters>7</commenters>
    </issue>
    <issue>
      <id>161646</id>
      <title>support for Clone this bug</title>
      <description>I need to go to the browser view to do a 'clone this bug' command. I use this command in the situation where I have one application deployed on different sites. Each site is a bugzilla product, so once I determine that a bug has occurences on different sites, I want to report that. I can then resolve (=deploy), verify (=see in production) and close for each site separately. Can Mylar provide a Clone this Bug button on the form tab, or even as a popup menu item in the Task List?</description>
      <attachments/>
      <comments>35</comments>
      <commenters>7</commenters>
    </issue>
    <issue>
      <id>196029</id>
      <title>support import/export of local tasks</title>
      <description>It should be possible to export and import a local task using drag&amp;drop, context menu and through file's menu</description>
      <attachments/>
      <comments>31</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>195727</id>
      <title>warn user about close being mapped to "remove from context" on first editor close</title>
      <description>Build ID: I20070625-1500 Steps To Reproduce: The problem is that Mylyn seems to remove all information from the context for items in resources that I close. To reproduce this scenario: - Create a new task and enable it. - Open some resources (e.g. Java source files), edit some code, etc... The edited methods show up in the (filtered) package explorer. - Now close all open editors. Mylyn removes all those items from the context (i.e. they are not shown any more in the package explorer.) More information: I find this very confusing. If I happen to close all editors before deactivating the context, all information in the context is lost! In my opinion, such resources should rather decay over time, as long as they are not opened again. Landmarks probably should even never decay.</description>
      <attachments/>
      <comments>24</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>205730</id>
      <title>Make it easier to take a screenshot from non-eclipse window</title>
      <description>I was trying to attach a screenshot to a bug from an application other than eclipse and discovered that it is a little difficult actually. I had Eclipse full screen and when I hit capture it just captured the Eclipse screen. So I brought my other window to the foreground first, but that didn't really work as I had to then bring Eclipse to the foreground to say create an attachment. The only way I could do it was to shrink the Eclipse window down so both Eclipse and the other window would be visible on the screen at the same time. Luckily the other window was small, but I had to expand the edit view for the bug to be able to hit attach. If I were trying to capture a large window it would be near impossible. One way I can think to make this easier is to have 2 screenshot choices. One is to take a screenshot from Eclipse and the other is to take a screenshot from a non-eclipse window. The first would capture the Eclipse window only the latter would hide Eclipse before capturing the screenshot.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>205838</id>
      <title>[api] add support for IContextAwareWindow similar to IContextAwareEditor</title>
      <description>I am interested in an IContextAwareWindow that works similarily to the IContextAwareEditor. This would allow integrators to create new workbench windows that are not monitored by Mylyn.</description>
      <attachments/>
      <comments>13</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>205538</id>
      <title>Clicking active task hyperlink results in go up to root</title>
      <description>To reproduce: * go into a category/query * activate task * click the active task hyperlink This results in the editor opening correctly but the tasklist is pushed back to the top (i.e. Go up to Top)</description>
      <attachments/>
      <comments>3</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>206490</id>
      <title>[context] parameterize scaling factors and "mark as landmark" user interest manipulation scaling</title>
      <description>Now that global contexts exist, the landmark and interesting values should be customizable on a per context basis like the decay and edit scaling factors can be changed. Furthermore, the value used by InteractionContextManager.manipulateInterestForElement(...) to make an element a landmark (current landmark value * 2) should be parameterized as well.</description>
      <attachments/>
      <comments>24</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>206699</id>
      <title>create Mylyn 2.2 release/move review slides (due Oct. 31)</title>
      <description>Waiting on EMO to find out details of what should be in the slides, but it sounds like the move to Tools PMC was not explicit enough in the 2.0 release review, and that we need a 2.1 release release review.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>210320</id>
      <title>group working sets by task repository in working set edit dialog</title>
      <description>When a significant number of task repositories and queries are present, it can be cumbersome to select Mylyn's task working set contents. Grouping by task repository will facilitate this.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>214309</id>
      <title>warn user when committing a task to a non-associated source repository</title>
      <description>Since Mylyn does not have a strict association between task repositories and source repositories, it is possible to have an automatic commit message from one task repository be wrongly used for another. For example, if I have the following repositories: 1) Eclipse CVS 2) FooCorp CVS And I accidentally modify a file in (1) while working on a task in (2), the file can become part of the commit and have the automatic commit message for (2) be put in the public repository (1). This is a privacy concern and too easy to slip up on (it has happened to me more than once).</description>
      <attachments/>
      <comments>9</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>206566</id>
      <title>improve the usability of scheduling and workweek focus and get rid of "red Mondays"</title>
      <description>Mylyn's facility for focus and scheduling causes the problems described in these posts: * http://dev.eclipse.org/newslists/news.eclipse.tools.mylyn/msg00155.html * http://dev.eclipse.org/newslists/news.eclipse.tools.mylyn/msg00189.html We need to improve the usability of the Focus on Workweek facility, it's definitions of guaranteed visibility and overlap between "Scheduled for" and "Due" dates.</description>
      <attachments/>
      <comments>23</comments>
      <commenters>7</commenters>
    </issue>
    <issue>
      <id>152211</id>
      <title>allow local tasks to be promoted to repository tasks</title>
      <description>Action should be something like: Convert to Repository Task. * copies summary * gets Description from notes * copies priority (if possible) * copies URL (maybe) * attaches context * provides option to delete local task</description>
      <attachments/>
      <comments>23</comments>
      <commenters>8</commenters>
    </issue>
    <issue>
      <id>194360</id>
      <title>add action to task editor to compare attachments</title>
      <description>add action to task editor to compare attachments. it would be handy to see progress in attached patches (or pictures)</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>196082</id>
      <title>Make 'Clear outgoing' action more accessible</title>
      <description>If I have a bug that I'm reporting changes in, and I do a 'submit', occasionally the connection dies. I'm then left with a bug which has a record of an outgoing change to that bug. I tend to find in these cases that the change has gone through, it's just that the client hasn't got a successful response. If I synchronize, I can see my comment, but the outgoing change still shows up in the task list. There should ideally be some way of throwing away that change and not having the bug marked as outgoing, but synchronizing/closing/re-opening doesn't seem to do it. In the end, I just erased the comments in the comment box, then clicked on 'submit', and fortunately the remote system ignored my empty comment. But it did fix the problem of the outgoing change. Not a great workaround, and presumably other back-end systems wouldn't be that intelligent in the case of an empty change, so it would be nice to have some kind of 'revert' on the task list context menu.</description>
      <attachments/>
      <comments>11</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>169916</id>
      <title>make strikethrough font optional and consider supporting on non-win32 platforms</title>
      <description>Build ID: M20060629-1905 Steps To Reproduce: Try to read the title text of one of your complete tasks in the "Task List". More information: It make sense to have it light grey and striked during normal circumstances; however when trying to copy the context from a completed task, this is a real nuisance and significantly increases the time required to find the correct task. It would be great if the text of completed tasks would change back to black on white with no strike though while the user has their mouse over it. Currently I often find myself changing the tasks back to Incomplete just so I can read it. P.S. Love Mylar, great work!</description>
      <attachments/>
      <comments>54</comments>
      <commenters>7</commenters>
    </issue>
    <issue>
      <id>213724</id>
      <title>use product image for popup notification</title>
      <description>Shawn pointed out that ConfigurationView.getProductImage16() has code how to obtain the application icon. This should be a better approach than using an image provided by the workbench window shell.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>173150</id>
      <title>manage Mylyn participation in Europa</title>
      <description>Links: * http://wiki.eclipse.org/index.php/Europa_Build * http://wiki.eclipse.org/index.php/Europa_Simultaneous_Release * Process: http://wiki.eclipse.org/index.php/Development_Process_2006_Revision * Build workshop: http://wiki.eclipse.org/index.php/Europa_Build_Workshop_Breakout_Results * Build process: http://wiki.eclipse.org/index.php/Europa_Build_Workshop_Report#Eclipse_Build_Best_Practices * PDE packager: http://help.eclipse.org/help32/index.jsp?topic=/org.eclipse.pde.doc.user/guide/tasks/pde_packager.htm * Update site categories: https://bugs.eclipse.org/bugs/show_bug.cgi?id=168885</description>
      <attachments/>
      <comments>40</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>224055</id>
      <title>Ability to create new task directly from in-place task views</title>
      <description>It would be great to be able to create a new task directly from the in-place activate task and open task views - i.e. just having "new task" as a menu entry in the list would be sufficient.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>191793</id>
      <title>[api] remove coupling from to ..mylyn.team.ui to org.eclipse.team.cvs</title>
      <description>The ..mylyn.team.ui plug-in should be generic and not coupled to a specific team provider.</description>
      <attachments/>
      <comments>20</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>214379</id>
      <title>[api] Generalize screen capture UI and other common facilities for cross-project use</title>
      <description>Currently Mylyn has a wizard-based screen capture user interface. Several other projects (e.g. ECF) have the need for a screen capture UI for different purposes (in ECF's case, for transmission to others via IM rather than/in addition to saving to file). For user simplicity, it would be helpful to have one (extensible) user interface for doing screen capture. It would allow some amount of flexibility on how/what of the screen was captured (e.g. the entire display, workbench, view, selected screen region), how much time delay before the shot is actually taken, and perhaps some basic/flexible editing capabilities (e.g. bug#195691, bug#209897, bug#210020, bug#210179). For ECF's use cases, it would be helpful to have much of the screen capture user interface be optionally displayed/used, in order to keep the usage easy and lightweight. Further, it would be desirable to have minimal dependencies on non-swt or jface plugins so that multiple environment (i.e. non-Eclipse) usage is possible.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>177974</id>
      <title>[Workbench] provide desktop notification popup</title>
      <description>Some applications need to inform the user of events in the workbench that may require attention, whether or not the workbench is visible. An increasingly standard way of doing this is to use a desktop notification popup, often appearing for a fixed amount of time in the bottom-right hand of the window. As an example, Mylar has a custom notification mechanism to inform the user when a Bugzilla report has a new comment. Ideally this mechanism would use the native platform mechanism for notifications. But as far as I know the common case is that this isn't available (for Linux/GTK see http://www.galago-project.org/specs/notification/index.php). I don't think that we should wait on native ones to become reusable because we already have the case where multiple Eclipse-based applications are showing custom notifications with different look-and-feel (e.g. the IBM Jazz demo at EclipseCon 2007 showed custom notifications that would clash with Mylar's). To avoid these UI clashes and having other plug-ins implement their own support, it would be helpful to have Platform/UI provide an SWT-based implementation. UI stuff to figure out: * Appearance: slide in from bottom (MSN Messenger), slide in from left (Jazz), fade in/out (Outlook 2007). I find the latter best because it is noticeable but not distracting. * Multiple notifications: tile or show next/prev button (Messenger, Jazz demo at EclipseCon), show sequentially (Outlook 2007), merge into 1 and elide (Mylar, Outlook 2007 in some cases). I find tiling problematic because it's hard and stressful to aim for popups when more than one is present. The next/prev button can be stressful to interact with because it is hard to aim for small buttons in the limited time that the notification is visible (even though the popups typically stick when mouse is over them). For this reason on Mylar we will show up to 3 notification in a single window and provide an "n more..." hyperlink. * How much information to show. I think less is best because the notifications are necessarily small which makes them hard to interact with, so the view or editor that they take you to should make the incoming information clear. The notifications should present the minimal amount information for the user to decide whether they want to handle the interruption. In conjunction I think that we should come up with a first pass at UI guidelines describing when to use which kind of notification mechanism (status line vs. system tray vs. desktop notification). Microsoft has a similar guideline, but it's a bit thin on when to use the desktop notification mechanism. See http://msdn.microsoft.com/library/default.asp?url=/library/en-us/UxGuide/UXGuide/Controls/Notifications/Notifications.asp</description>
      <attachments/>
      <comments>69</comments>
      <commenters>12</commenters>
    </issue>
    <issue>
      <id>202547</id>
      <title>improve packaging of Mylyn features to allow redistributions of Team and CVS integration</title>
      <description>(from newsgroup thread "Re: Default Eclipse 3.3/Europa redistribution and org.eclipse.mylyn.team.ui") The ..mylyn.pde-feature is the bridge to the Eclipse SDK, even though it is not properly named (we got the repackaging request from EPP too late in the 2.0 process to rename this feature). What we need is a separate feature for just the Mylyn team stuff. The challenge that we are always faced with is that we don't want to force users to select from a dozen different features because that adds a lot of complexity to the install. So we break up features as lazily as possible, and have already had confusion from breaking up IDE and SDK. However, I could see making the following changes, along the lines of your suggestion and to more closely line up the Mylyn Bridge features with the EPP packages: 1) IDE: same as current, core IDE stuff, can be redistributed by CDT 2) JDT: same as current, coupled to JDT 3) PDE: just the PDE stuff 4) Team: team+CVS This unfortunately still leaves the Ant bridge stuff out, because Ant UI is coupled to JDT and so it cannot be added to (1) or (4). Depending on EPP packaging, it may be possible to add it to (2), if not it's not that bad for it to be available in (3) only, because what's more important is that more people have access to the Team stuff.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>132092</id>
      <title>provide focus for the Breakpoints view</title>
      <description>Apply mylar filtering to Breakpoints view</description>
      <attachments/>
      <comments>27</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>233142</id>
      <title>propose Focus and Notification services for E4</title>
      <description>http://wiki.eclipse.org/E4/Eclipse_Application_Model</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>233600</id>
      <title>create Mylyn 3.0 release review slides</title>
      <description>Needed for Ganymede release review.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>222048</id>
      <title>Adding tasks to context while focused on workweek</title>
      <description>This all happen when working in the "Focus on Workweek" mode: Suppose that there is a new task in the list. I open and activate it. When done working if it, I deactivate it. Then, it will disappear from the task list. If I want to work again with that task (and I haven't schedule it) I need to turn off the "Focus on Workweek" option (or use the "Find" query field if I remember it's summer or number). What about using a context on task list itself, so the tasks which has been activated during current week are visible in the list. Does it sound reasonable? PS. This is a follow up to bug 219082.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>136298</id>
      <title>[new eux] importing/promote/convert Eclipse todo tags/markers items to become tasks</title>
      <description>It would be nice if the todo items which are listed in Eclipse's task view could be imported into Mylar. Perhaps as a separate category 'todo items' or so. The resource where the todo item is from could automatically be marked as context for its own todo-task.</description>
      <attachments/>
      <comments>28</comments>
      <commenters>10</commenters>
    </issue>
    <issue>
      <id>236760</id>
      <title>rename "Mylyn" UI entries to "Tasks"</title>
      <description>The fact that we use "Mylyn" does make these pages easier to pick out, but we violate an important convention taken by Platform (i.e., to name UI facilities by their function and not their branding). We should only have the word "Mylyn" left in the following three spots: * Preferences * Views category * Import/Export category</description>
      <attachments/>
      <comments>7</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>226287</id>
      <title>[uex] eliminate the blank task list when due to focus applied with no tasks scheduled</title>
      <description>We need to improve user experience by eliminating the possibility of blank/empty views. Another scenario that needs to be eliminated is when focus is applied to the task list when no tasks are scheduled. We should consider rendering some form of help within the task list view explaining or helping the user in the the right direction.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>246387</id>
      <title>restructure the User Guide and FAQ</title>
      <description>We have a lot of out-of-date documentation that needs to be removed or restructured.</description>
      <attachments/>
      <comments>15</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>254424</id>
      <title>[context] provide button to prune task context according to the selected threshold in the task Context pane</title>
      <description>Sometimes the Mylyn context may get large, but clearing it completely is not an option. It would be nice to have a way to prune all objects in the context below some given interest level. This could be added e.g. to the Context pane of a task where the slider selects the threshold of interest visible. A prune button could then cut the context to the currently visible set according to the slider position.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>263870</id>
      <title>[context] preserve filters in the resource navigator when using resourceFilters</title>
      <description>When filters are added in the following manner: &lt;extension id="myfilterId" name="myFilter" point="org.eclipse.ui.ide.resourceFilters"&gt; &lt;filter selected="true" pattern="*.txt"&gt;&lt;/filter&gt; &lt;/extension&gt; Mylyn does not preserve the filter in focused mode. This is because there is no backing class. This is a problem in the resource navigator view and in new file creation dialog.</description>
      <attachments/>
      <comments>17</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>263126</id>
      <title>In focused mode incoming changes should not change the expansion state of queries</title>
      <description>Eclipse 3.3.2 with both Mylyn weekly builds 20090122-0600-e33 and 20090130-1800-e33: In a task working set, mode "focused on work week", any change to a task expands the query containing it. This quite annoying, especially if the query is located at the top of the list. Steps to reproduce: 0. Create working set -- not sure whether this contributes... 1. Add query Q1 2. Add query Q2 3. Enable focus on work week -- expands all queries with matching tasks bc. - Q1 =&gt; T1 T2 - Q2 =&gt; T1 T3 4. Collapse Q1: bc. + Q1 - Q2 =&gt; T1 T3 5. Open task T1 which is in both queries and has incoming changes By opening the task the incoming marker is reset. The same could happen on Shift-Alt-R or asynchronous incoming changes from background task may add a new task. Expected result: bc. + Q1 - Q2 T3 Actual result: bc. - Q1 T2 - Q2 T3 The unexpected behaviour is that all queries which contain the changed task T1 get expanded. This is annoying when the queries are larger so that expanding the first query scrolls the current query where you are looking at out of your view. You loose focus which is of course torpedos the central job of Mylyn. Even more drastic this could happen if background jobs update tasks. Now all of sudden a query with matching tasks expands. And to make this more hurt the focused week lacks my beloved "Collapse All" button... I also wonder whether the expansion state has to change if I switch to focused mode. I would prefer that the queries stay in expanded or collapsed state as before. Since the main job of Mylyn is to keep focus and this behaviour makes me to loose the focus everytime I mark the severity as "major."</description>
      <attachments/>
      <comments>10</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>220006</id>
      <title>Keep a newly opened (incoming) bug in the task list or make it easier to return to</title>
      <description>I often "lose" bugs as I'm going through reading new incoming bugs. I open up the bug to read it in the editor (which causes it to disappear from the task list) and then I lose it in the tabs I have open. Or worse, I close it too quickly and then realize I needed to take action on it. The management of how many task editors are open helps but it would be helpful to have some support for easily getting back to it. The function I most want is "undo". Keeping the bug in the list is obviously problematic because of the query nature of categories. But perhaps with a different presentation (i.e., all incoming) it might be possible not to take it out of the list too quickly.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>266752</id>
      <title>[api] provide API for listening to the InteractionEvent log</title>
      <description>I’m in a situation where I’d like to subscribe to Interaction Events in the Monitor API in addition to generating them. The situation is that I need a live feed of events in my organization for usage tracking. One possible use case is that I’m trying to see how much time, on the fly, I'm spending on each task in a Status view. From an implementation standpoint, I can see two similar approaches, both having code introduced into InteractionEventLogger, where an independent plug-in could be notified each time interactionObserved is fired: 1. An addListener-style mechanism could allow any arbitrary class to subscribe using a GoF Observer pattern. 2. An extension point definition could be created allowing the InteractionEventLogger to use a factory instantiate the listeners and then perform the notify. I'm attaching a sample implementation of modifications required to InteractionEventLogger for refererence based on approach 1.</description>
      <attachments/>
      <comments>14</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>268401</id>
      <title>update the contribution ideas listing</title>
      <description>Let's update the listing and make it a reference for summer of code students. http://wiki.eclipse.org/Mylyn_Contribution_Ideas</description>
      <attachments/>
      <comments>6</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>265978</id>
      <title>review web site content and update site links to non-Eclipse.org content</title>
      <description>Links to non-eclipse.org content Occasionally, you may want or need to provide links to external content from your project website. Several projects do this today: it's an excellent way to provide more information for your project, and help to make your project become part of the community. Some projects link to websites that showcase how the project's code is being used by the community, some to FAQs and other sources of information. The content on the Eclipse website and wiki is subject to the Eclipse Terms of Use [1]. Information, downloads, and other kinds of information found on other websites are likely subject to different terms of use. In consideration of this, it is critical that your project's consumers are made explicitly aware of where the Eclipse project's website ends and the third-party site begins. You can provide links from your Eclipse project's web site to external resources (e.g. binaries, code, etc.), provided that: 1. There is some adequate disclaimers that make it clear that although this is a "related link" that this is not Eclipse content. 2. The link to the existing code is not just be a direct link to content. It has to be a link to a download page on the external site. 3. The link to their download page needs to be such that it brings up an entirely new browser so that it is made even more apparent to the user that they are leaving the eclipse.org website. [1] http://www.eclipse.org//legal/termsofuse.php</description>
      <attachments/>
      <comments>11</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>213661</id>
      <title>[context] java files not interesting in the resource Navigator</title>
      <description>Build ID: M20071023-1652 Steps To Reproduce: 1. Open a java file in editor window 2. Select focus on active tasks in Navigator pane. 3. Java files not displayed More information: I would like these to be remembered in the tree. I can see them in Package explorer</description>
      <attachments/>
      <comments>24</comments>
      <commenters>7</commenters>
    </issue>
    <issue>
      <id>256071</id>
      <title>Reduce/remove reflection usage in Java bridge</title>
      <description>Hi all, I talked to Steffen a little at ESE to get a feel of where you all are using reflection and/or internal code. Steffen described to me that it was for retrieving the StructuredViewer so then I posed the question of "hey, why not just use the workbench part site's ISelectionProvider and see if you can downcast to a StructuredViewer?". :)</description>
      <attachments/>
      <comments>11</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>277984</id>
      <title>update synchronization icon color scheme</title>
      <description>The synchronizations icons are some of the most prominent graphics in the Mylyn UI. After the fall Mylyn UI review with the UI best practices working group we identified green as a good candidate color for the black/gray outgoing icons.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>264583</id>
      <title>improve the Task List presentation switcher</title>
      <description>As part of other UI improvements for Mylyn 3.2, we need to consider a faster and more intuitive presentation switcher. This will be dependent on the other tool and Find bar changes in the Task List view.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>280474</id>
      <title>add overlay for story issue type</title>
      <description>Stories are are now supported by JIRA, we should have a corresponding icon.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>280475</id>
      <title>review and and polish new UI additions</title>
      <description>* Private section of editor should be explicit about information not going to the server * Icon for open with browser</description>
      <attachments/>
      <comments>5</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>283740</id>
      <title>restore Schedule button on the task editor header</title>
      <description>We removed this and put it on the Private section, but as a result it's much harder to use and find since it jumps around. We rely on this button in order to help tasks not "disappear" from a focused Task List after they've been read.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>284173</id>
      <title>show "Hide Completed Tasks" toolbar action when not focuses</title>
      <description>Since users have trouble discovering this action in the view pull down.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>284511</id>
      <title>make the schedule button reflect the schedule state</title>
      <description>It's too hard to tell if a task is scheduled or not. Dynamicall updating the image of the button could address that.</description>
      <attachments/>
      <comments>13</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>291435</id>
      <title>[e3.4][framework] use identifier type in extension schemas</title>
      <description>Since Eclipse 3.4 identifiers are supported as a type for referencing other extensions. Extension schemas should use the new type were appropriate.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>316174</id>
      <title>improve Task List category gradient rendering on Windows 7</title>
      <description>The shading is lighter than on other OS's and needs to be darkened to improve the visual separation of items in containers.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>316166</id>
      <title>provide a colour setting for tasks that are overdue but not owned by the user</title>
      <description>Tasks that are overdue, but not owned by the user, currently do not provide a visual indication of their state. This can be useful information, eg, if the user created the task.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>316214</id>
      <title>remove container decorations from the Scheduled presentation</title>
      <description>The font foreground and incoming/outgoing decorations on the scheduled presentation containers are often incorrect, and provide little value. I propose that we suppress them, and instead provide representative icons.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>168895</id>
      <title>improve UI for selecting multi-value attributues such as keywords</title>
      <description>I caught myself today trying to change the "keyword" field from a bug. It took some time until I realize that it is read-only and I have to select the desired keywords on the right side list. It is not very intuitive and there is room for improvements. Perhaps you can just eliminate the field and leave only the listbox.</description>
      <attachments/>
      <comments>29</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>202502</id>
      <title>AbstractRepositorySettingsPage should only create the Additional Settings area if requested by the connector</title>
      <description>Right now, all conenctors that don't have additional settings still get the label and the expandable composite with nothing in it. The connector should be able to specify that it doesn't need this section similarly to how the proxy and httpauth sections can be disabled.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>203378</id>
      <title>group subtasks should not filter subtasks when unselected</title>
      <description>I have a connector that has a hierarchical structure, and therefore the structure cannot be flattened like the other connectors. To support other connectors with this same strict structure, I propose that the ConnectorUI can specifiy if the subtasks can be flattened (hidden in this case) or not.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>203479</id>
      <title>add collapse all button to comments section of task editor</title>
      <description>Since there is an expand all button on the comments section of a task editor, there should be a mirroring collapse all button.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>204342</id>
      <title>support drag and drop in scheduled mode of tasklist</title>
      <description>The scheduled mode of the tasklist is a great way of helping users plan the week, and to make this easier, I would like to be able drag a task to the day of the week that I want to schedule it for.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>208247</id>
      <title>[global context should support composite contexts</title>
      <description>Currently, the global context support provided by mylyn only supports using an InteractionContext. The global context should support IInteractionContext so that CompositeContext can be used as well. To do this, here are the following changes that I propose: IInteractionContext: add getContentLimitedTo(); add setContentLimitedTo(String contentLimitedTo); add getLandmarks CompositeInteractionContext: make getContextMap() public InteractionContextManager: change globalContexts to be a set of IInteractionContext</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>212215</id>
      <title>[api] add ability to remove the default mylyn status handler</title>
      <description>Right now Mylyn allows plugins to register an IStatusHandler, but this could produce multiple dialogs presented to the user. There should be a way to add a status handler so that the default Mylyn one is removed so that users are not presented with multiple error dialogs.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>209407</id>
      <title>support grouping of hits in the Search view</title>
      <description>In order to facilitate using the search view to make a broad but organized query, we can use the task groupings that are currently added by the Sandbox (other than Incoming) to the popup menu of the Search view. Some use cases: * Query all bugs left open for this milestone, group by owner or group by component * Query all bugs on a component, group by milestone</description>
      <attachments/>
      <comments>9</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>215057</id>
      <title>[api] add support for pre and post task deactivation</title>
      <description>It would be nice to have support for pre- and post- task activation in the ITaskActivityListener so that clients can prepare for a task activation and deactivation. This can be needed since during activation and deactivation, many UI refreshes and other operations are performed which, if partnered with other operations, can cause performance problems. An example of this is if you try to add or remove a filter to a viewer at this time, it can cause some race conditions dealing with multiple refreshes and expand-alls occurring.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>225172</id>
      <title>contribute filter to search view</title>
      <description>When performing a search, it would be desirable to be able to perform a text search on the search results (similar to the functionality in the task list).</description>
      <attachments/>
      <comments>9</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>195456</id>
      <title>[api] Need a canQuery method on AbstractRepositoryConnectorUi</title>
      <description>There needs to be a canQuery method on AbstractRepositoryConnectorUi since not all task repositories can be queried. An example could be a second repository of local tasks. Currently, if a connector returns null for the query wizard, an error occurs when the user selects it in the new query dialog.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>200235</id>
      <title>[api] guard against circular dependencies (sub-tasks)</title>
      <description>If a connector doesn't guard against circular dependencies (sub tasks) this can result in stack overflow. The framework therefore need to be defensive in this respect.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>234957</id>
      <title>add more types to TasklistContainerDelta</title>
      <description>It would be nice to have a MOVED and DELETED event for the tasklist so that developers don't need to try to determine whether an ADD or REMOVE event represents one of these cases, especially since events are being fired more consistently in 3.0.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>190503</id>
      <title>Scheduled mode in task list should allow "Next Week" category to be viewed by day</title>
      <description>Monday mornings are a bit bleak in scheduled mode because one has to spend a bunch of time moving tasks around on the days per week. I would like to see scheduled mode broken out by day in the next week so that on Friday of the week before I could do some planning, making Monday mornings less overloaded :)</description>
      <attachments/>
      <comments>14</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>236957</id>
      <title>[context] improve context population and predicted interest setting of changed resources</title>
      <description>From bug 210011: I think that I finally tracked this down. What's happening is that elements with predicted interest which comes from the ResourceInteractionMonitor are considered uninteresting by the InterestFilter. There are two potential fixes: * Change how isPredicted() works and/or udpate the bookkeepping used by ensureIsInteresting() * Change ResourceInteractionMonitor</description>
      <attachments/>
      <comments>11</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>252672</id>
      <title>add support for programatically refreshing a focused viewer</title>
      <description>FocusedViewerManager has the ability to force a refresh of all viewers programatically. It would be nice to have a way to refresh a single viewer (refreshViewer) so that clients who want to trigger a refresh can do so without copied code for the management of the expansion state, therefore having the same behavior as mylyn.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>257740</id>
      <title>AbstractRepositoryQueryPage2 should have a way to disable the update button</title>
      <description>Not all queries require repository configuration, so it would be good if having the button was an option.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>261240</id>
      <title>[api] AbstractRepositoryQueryPage2 should have a way to set the query title</title>
      <description>I would be nice to have a way to set the query title programatically on the query page so that deafult title can be created.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>271204</id>
      <title>round notification popup shell bottom corners</title>
      <description>It would be nice if these are more like Outlook Notifications. Add rounding to the bottom corners as well as make the gradient span the entire popup shell.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>274904</id>
      <title>[api] support deletion of multiple interaction elements</title>
      <description>This can be a very slow operation that locks the workbench UI especially with a large context. Using a deleteElements method that can be called once could eliminate this as there would only be 1 notification of a deletion instead of multiple.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>276383</id>
      <title>[context] allow making folders interesting</title>
      <description>Sometimes it is desirable to make folders explicitly interesting, e.g. when copy and pasting to make the target directory visible. This already works when new folders are created but not for existing folders. This would also provide a fall-back to recover from bug 213661 in case the parent container of an interesting element is not in the context.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>174413</id>
      <title>[context] display orphaned element content on the Context editor tab</title>
      <description>Orphaned elements that could still be in the task context, but that can not be shown in one of the common navigator content providers (e.g. because they correspond to a Java element that has been deleted) should be shown under their own top-level node. This is needed in case they should be deleted before sharing the context.</description>
      <attachments/>
      <comments>16</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>276581</id>
      <title>use a gradient background for the tooltip instead of the yellow</title>
      <description>The background gradient of the notification popup is much more visually appealing than the standard yellow background of a tooltip.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>233158</id>
      <title>[api] allow contribution of task editor parts through extension point</title>
      <description>Task editor pages are currently extensible through inheritance only (bug 232853). It would be nice if editor parts could be contributed through an extension point.</description>
      <attachments/>
      <comments>16</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>211096</id>
      <title>merge the local and the repository task editors</title>
      <description>We have numerous bugs that are related to the fact that local tasks have a completely separate editor. We should merge these into a single editor facility, while still ensuring that we support a clear UI differentiation between what's shared and what's local/private information.</description>
      <attachments/>
      <comments>15</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>235439</id>
      <title>Local Task repository should have a settings page</title>
      <description>in the 'Task Repositories' view all repositories have a properties dialog where configuration settings can be made. The 'Local Tasks' repository has no such dialog, which makes it impossible to add configuration settings for the ITaskEditorExtension.</description>
      <attachments/>
      <comments>16</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>278298</id>
      <title>[api] add support for enabling and disabling the new private section</title>
      <description>We now add the new Private section to all task editors by default. We should change this so that the connector must specify whether to add it or not. By default, this should probably be off (except for new tasks).</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>279333</id>
      <title>show attributes of kind KIND_OPERATION in TaskEditorActionsPart</title>
      <description>Right now, it only shows the speical operation attributes, but some connectors have simpler actions that are just a regular attribute and this should be supported. Currently, these KIND_OPERATION attributes are just ignored and not shown anywhere.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>286460</id>
      <title>[usage] clean up usage data collection and upload code</title>
      <description>Currently it is a bit of a mess and hard for integrators to follow or use.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>286691</id>
      <title>[usage]IProgressMonitor when reading interaction history from file</title>
      <description>Created attachment 144604 [details] Addresses enhancement request. When calling InteractionEventLogger&gt;&gt;getHistoryFromFile, when the interaction history is very large, I would like to be able to use an IProgressMonitor.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>174892</id>
      <title>[usage] update org.eclipse.mylyn.examples.monitor.study to use servlets</title>
      <description>The org.eclipse.mylar.examples.monitor.study package in the sandbox needs to be updated to use the servlets. It also needs to be updated to reflect the refactoring that has happened in the monitor.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>286283</id>
      <title>allow connectors to provide some connector specific information in the tooltip</title>
      <description>Connectors should be able to provide a short bit of information in the tooltip that is custom to that connector (i.e. target milestone for bugzilla) if it is important to the operation of the connector.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>279334</id>
      <title>make the bugzilla keywords attribute editor usable by other connectors</title>
      <description>It would be nice to be able to reuse the keywords attribute editor for other attributes</description>
      <attachments/>
      <comments>14</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>207623</id>
      <title>[api] add support for deleting a task from repository</title>
      <description>Build ID: M20070921-1145 Currently, Delete action (on Abstract Task in the TaskListView) removes the task from the task list. I think, this action can also be propagated to the repository if remote task deletion is supported. Additional api methods (canDeleteTask and deleteTask) on AbstractRepositoryConnector might help to hook into the infrastructure. I would be happy to help you on this.</description>
      <attachments/>
      <comments>30</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>286286</id>
      <title>improve date picker widget</title>
      <description>Currently when the user edits a date in Mylyn, they are presented with a modal dialog. It would be nice if it opened up as a shell in place so that it was easy for the user to choose the date without the dialog. For date attributes, this could automatically close once a date is selected, making it single select, and if there is a time that is needed, the shell could have an ok and cancel link at the bottom.</description>
      <attachments/>
      <comments>23</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>260897</id>
      <title>support sorting by rank under a query</title>
      <description>Mylyn currently uses PriorityLevel P1 - P5 for tasks in the TaskList. This priority handling always feld backwards to me. I thought that I should go ahead and propose an enhancement based on how I originally expected Mylyn to handle things. That is, Mylyn would show the value from TaskData.getMappedAttribute(TaskAttribute.PRIORITY) field instead of P1 - P5? Instead of showing the user getting the connectors to map their priorities to Mylyn's priority list, the idea is to let all connectors use their native priority levels and to provide a mapper or comparator for Mylyn to use when sorting those values across one or more repositories. Here are some examples of problems with the current system. * My connector's priority field is called "severity" in the task repository. While users talk about "sev 1" and "sev 2" issue, the interface for this repository doesn't even show the numeric severity value. The web interface displays the severity/priority as "Normal", "Show stopper", etc. Thus, while the priority icons make sense to the user, the Task List view's tool tip for tasks from this repository shows P1. The users are always confused by that value at first and have no idea that it corresponds to the severity field. If they saw "sev 1" or "show stopper" in the tool tip, it would reduce support requests from our users. (Our users are mostly new to Mylyn. Our connector is brining them to Mylyn for the first time.) *My repository has more than 5 severity levels. I'm not sure why we need to map priorities from various task repositories into a scale of 5. I understand that it makes sorting across repositories easier, but it means that users who use just one connector to a repository with more than 5 priority levels can never get a proper sort by priority. Some of his tasks with different priorities will end up in the same "bucket" in priority sorts. The obvious drawback of this feature is that users with tasks from heterogeneous repositories in their Task List would see a different values in the Task List tool tip. That is, all of the old P1 bugs will still be sorted to the top of the list with the same icon, but the value in the tool tip might show "Critical" for one repository, and "Sev 1" for another repository. That actually makes more sense to me, but it would be a user-visible change from previous versions of Mylyn. If Mylyn were to handle priorities this way, connectors could map their priority to a float value from -1 (lowest priority) to 0 (normal) to 1 (highest priority). So, for 5 priorities, you'd have -1, -.5, 0, .5, and 1. Another repository with 8 priorities might use -1, -.75, -.5, -.25, 0, .5, .75, 1. That way, heterogeneous sorting could still keep highest, normal, and lowest priorities grouped together across all repositories. But when sorting the tasks for a single repositories, the finer granularity would be preserved.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>219173</id>
      <title>[context][externalization] auto save task context</title>
      <description>I'm finding that when I restart Eclipse after a crash and I had an active task, that mylyn has forgotten about files that I've been working with before the crash. Some appear in the context, but are not automatically re-opened, while othere are just not there.</description>
      <attachments/>
      <comments>20</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>179586</id>
      <title>[date picker] add Today link to date pickers and remove Clear</title>
      <description>New date picker is missing 'today' link at bottom of widget.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>184566</id>
      <title>[usage] local usage stats aren't reset after uploading</title>
      <description>Local usage stats aren't reset after uploading to the community usage server. Perhaps they should be reset automatically or Usage Summary editor should provide some actions for resetting usage stats.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>275899</id>
      <title>copy editor mementos and last used perspective when context is copied</title>
      <description>It seems that the open editor mementos should be copied with the context as they are viewed as part of the context.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>292320</id>
      <title>cdt bridge contributes focus button to all editors</title>
      <description>See screenshot (Java editor).</description>
      <attachments/>
      <comments>3</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>303138</id>
      <title>add find/search box widget to mylyn commons ui</title>
      <description>There should be a find/search box widget that supports both the emulated and native controls as the filtered tree does so that it can be consumed by other tools for different purposes so that this implementation does not need to be copied. As Platform will be unable to accept this for Eclispe 3.6 (as per Bug 293230), we should take this widget and make it work within the Mylyn commons while ensuring that it can be applied to platform for the 3.7 stream so it can be consumed.</description>
      <attachments/>
      <comments>15</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>305199</id>
      <title>show Windows Task Bar progress for manually triggered synchronizations</title>
      <description>We should set IProgressConstants2.SHOW_IN_TASKBAR_ICON_PROPERTY on manually triggered synchronizations so that the progress is shown in the windows 7 taskbar.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>298688</id>
      <title>[context] support ant filters for resource monitoring exclusions</title>
      <description>Build Identifier: M20090917-0800 I want to exclude certain file path patterns from being added to the context. The "Resource Monitoring Exclusions" list will only exclude the file from the context if an entry in this list exactly matches (actually, I can't find any documentation that says exactly how it does the matching). This really would be more useful if each entry represented an Ant-style path, like "build/**/*.class" or "gen/**/*.java". Reproducible: Always</description>
      <attachments/>
      <comments>14</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>309405</id>
      <title>[context] improve resource monitoring to only automatically add modified files to the active task context</title>
      <description>We need to improve resource monitoring to only automatically add files that were modified while the current task is active to the current context. This should help reduce context pollution when a workspace refresh happens that hasn't happened for a while due to the exponential back-off of the workspace refresh. We can start by reviving the patch on bug 120499.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>306063</id>
      <title>add new task and activate action to the Windows task bar</title>
      <description>Now that there is jump list support in SWT, we should contribute the new task and activate actions so that they are easy for users to get it.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>314579</id>
      <title>[api] allow command contributions to all task editor toolbars</title>
      <description>Currently, there is support to contribute commands to the task editor toolbar of a particular connector kind, bug we should also allow contributions to all task editors to support integrators better.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>323891</id>
      <title>[api][build] persist column sizes in Builds view</title>
      <description>The size of the table columns is lost when the workbench is restarted. It would be nice if the columns were configurable and if the configuration was persisted.</description>
      <attachments/>
      <comments>13</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>302190</id>
      <title>when checking out a project from SCM, don't add every single file to the context</title>
      <description>Build Identifier: M20090917-0800 One annoyance I have with Mylyn happens when I checkout a new project from our SVN repository. After it finishes the checkout, it takes several minutes after that to get my context into a reasonable state again. This is because when the checkout is done, it will end up adding every single file in the project to the current context. What I really want is just the top-level project directory being added to the context, and I will add to the context from that. Reproducible: Always</description>
      <attachments/>
      <comments>20</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>302015</id>
      <title>[context] do not filter nodes when navigating hierarchies with Alt+click</title>
      <description>As you navigate hierarchies with Alt+click nodes that were temporarily unfiltered are re-filtered whenever a node is selected. This can cause the selection and nodes to jump as the scrollbar is adjusted and can make it difficult to find the right nodes. I think it would be better if all children of nodes that are clicked stay visible until the Alt+click operation is complete.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>175655</id>
      <title>[api][context] provide an on-hover affordance to supplement Alt+click navigation</title>
      <description>many times I want to get a set of files from a package into the context. currently the process is pretty annoying, for each file I need to: * alt-click the parent package. * click on the file. since the alt-mode turns off when I click the file, I need to do the whole thing again. it gets extra annoying if I am in hierarcial package presentation, and I need to 'drill down' the packages list for each file. maybe a solution can be a new 'sticky' alt click mode, that remains until I explictily turn it off? (ALT-CTRL maybe?)</description>
      <attachments/>
      <comments>52</comments>
      <commenters>8</commenters>
    </issue>
    <issue>
      <id>273355</id>
      <title>Support image scaling for Textile -&gt; DocBook</title>
      <description>Currently, image scaling is not properly supported. Looking at the DocBookDocumentBuilder, we can see that no scaling information is applied to the image. I suggest to read the "width" attribute of an inline CSS style to derive the scaling, as described here: http://css-discuss.incutio.com/?page=UsingPercent</description>
      <attachments/>
      <comments>9</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>196700</id>
      <title>Need editor for new task creation</title>
      <description>XPlanner connector does not currently have a custom editor for creating new tasks.</description>
      <attachments/>
      <comments>11</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>196523</id>
      <title>Need to set up Mylyn XPlanner repository for testing</title>
      <description>mylyn.eclispe.org virtual server should have an XPlanner repository set up for XPlanner connector testing, since there doesn't appear to be a publicly accessible XPlanner repository available for that.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>194936</id>
      <title>attachment names are not displaying for connectors by default</title>
      <description>org.eclipse.mylyn.tasks.ui.editors.AbstractRepositoryTaskEditor does not display the attachment name, just description, Type, Creator, and Created. Attachment name should be added as the first column for the atttachments section.</description>
      <attachments/>
      <comments>16</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>161457</id>
      <title>Support Bugzilla 3.0 custom resolutions</title>
      <description>It would be nice if custom resolutions were supported. For example, the name used for the development stream of Fedora is "rawhide". One of the resolutions in Red Hat bugzilla is "RAWHIDE" (indicating that it is fixed there).</description>
      <attachments/>
      <comments>29</comments>
      <commenters>7</commenters>
    </issue>
    <issue>
      <id>169426</id>
      <title>create a new bug from a comment</title>
      <description>Sometimes I'm asked to create a new bug from some comment. We can have a button together with the "reply", on each comment, where when clicked would open a new bug editor with the same attributes from the original one, with some template description like "Bug created from bug#XXX comment#YYY: {original-comment-here}".</description>
      <attachments/>
      <comments>49</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>206510</id>
      <title>enable contribution/configuration of language settings</title>
      <description>Mik suggested using the templates mechanism (RepositoryTemplate). If we did this then a plugin could be provided that simply contributes a template for at particular repository along with the appropriate language. The language could be a sub element of the template extension point. Franks Comments from bug#173352 * If this is the enduser who is not a bugzilla admin then I think a preference page or a button in the BugzillaRepositorySettingPage. The same in someone use a Bugzilla which has localized templates. * If you think that Mylyn should set up all the language settings for the localized bugzilla templates (actually 17) with more then one available versions then I think the templates mechanism should be used.</description>
      <attachments/>
      <comments>44</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>152869</id>
      <title>allow to create new issues from JUnit stack trace</title>
      <description>Allow to create new issues from JUnit stack trace. In a way it is very similar to what is already done for PDE's Error Log view.</description>
      <attachments/>
      <comments>15</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>207524</id>
      <title>add create subtask action for Bugzilla editor</title>
      <description>It would be great if the Bugzilla editor had an action to create subtasks similar to the JIRA editor. The created bug would have the "Depends On" attribute preset to the parent task and could also inherit other attribute values.</description>
      <attachments/>
      <comments>13</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>199678</id>
      <title>change Description/Summary field in local task editor to use text viewer widget</title>
      <description>Currently the description field uses the standard text widget. Upgrade it to use the text viewer support so that we get the nice copy/paste/etc menu and spell checking.</description>
      <attachments/>
      <comments>15</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>212484</id>
      <title>Move field QA Contact from section Attributes to People</title>
      <description>When I start useing the QA Contact I first not found the Editfield in the Taskeditor because I expect that this is in thePeople and not in Attributes Section.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>213110</id>
      <title>make testReassign31 more robust</title>
      <description>The test fails if the "assigned to" was not "rob.elves@eclipse.org". The soon following patch will only fail if "assigned to" is no "rob.elves@eclipse.org" or "tests2@mylyn.eclipse.org".</description>
      <attachments/>
      <comments>9</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>175922</id>
      <title>Support Bugzilla 3.0 custom fields</title>
      <description>The Bugzilla we are using is version 2.20 with some customization. We have added reproducibility, frequency, locales, work item type, Web request number fields to bugbase. Currently The Mylar Bugzilla plugin does not seem to support these fields. Is this something that we can add to our Mylar configuration or can we get a patch from you guy? We would really love to use the Mylar plug in but are stuck right now on a "legal reproducibility" error on a bug submit because of our bugzilla's custom fields.</description>
      <attachments/>
      <comments>47</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>216150</id>
      <title>2nd level sorting in Search view</title>
      <description>When sorting by priority, order or tasks with the same priority is random and they should be sorted by task id/description as a 2nd level of sorting</description>
      <attachments/>
      <comments>28</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>219540</id>
      <title>2nd level sorting in Task List</title>
      <description>-- Created from Comment -- URL: https://bugs.eclipse.org/bugs/show_bug.cgi?id=216150 Comment: 5 Frank: this bug is about sorting in the Search view, not Task List. However, it would be great if you could make a new bug for your additional Task List sorting, because there have been some requests for that as well. Regarding this approach, I have a bit of a usability concern with your approach though, because some might have trouble understanding the word "Level", and because doubly-nested menus are hard to use. What if the menu was? * First Sort by -&gt; full list of sorters * Then Sort by -&gt; full list of sorters Btw, if you're interested in providing a patch for this bug that would be great too. What we're after is that no matter what primary sort order is chosen in the Search view, there should be a second sort order that's by ID and description (with the same semantics as in the Task List).</description>
      <attachments/>
      <comments>30</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>219911</id>
      <title>when moving bugs to another product, provide a mechanism of reassigning to the default assignee</title>
      <description>When moving some bug to another product, it is common to forget to change the assignee, because the "move to another product" story involves many other changes: - Change the product. - Change the component. - Change the version. It just happened on bug#218412 where it got moved to SWT, but Mik forgot to change the assignee to SWT inbox. I remember having got into this problem myself too at least 1 time. Another side problem I see is that the assignee field auto-completion does not suggest the inbox accounts.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>223589</id>
      <title>Enhancement for scheduled Container "Future"</title>
      <description>Actual the Container for "Future" contain Tasks from now + 2 weeks until now + 1 Year. I think it is more useful to have a more flexible Solution. In the Preference page of Mylyn Task List you can define Dates in the Advanced Section. The dates can defined as fixed Dates or as Dates relative of now. What do you think about this Solution?</description>
      <attachments/>
      <comments>10</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>175324</id>
      <title>[workflow] Support moving a report to alternate product</title>
      <description>Currently the Bugzilla Connector doesn't support moving a report to another product. This is a more complex operation in the web ui and may require adding a wizard to complete this process.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>215116</id>
      <title>externalize Mylyn UI Strings, Labels, Messages to support internationalization</title>
      <description>I suggest to externalize all Strings, Labels, Messages ... into properties-files so Mylyn UI could be internationalized. I offer to contribute a german translation pack.</description>
      <attachments/>
      <comments>26</comments>
      <commenters>7</commenters>
    </issue>
    <issue>
      <id>226214</id>
      <title>exported file name differs from file name when dragged from task list</title>
      <description>The name of exported files differs between TaskExportAction and TaskDragSourceListener. Common code should be extracted and resulting file use same naming conventions in both cases.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>164221</id>
      <title>recognize comment#number link on bug editor</title>
      <description>Mylar 0.9.0: The bugzilla web interface recognizes patterns like bug#158069 comment#22, and turns it out into a link not only to the bug, but directly to the comment too. The bug editor only recognizes bug#number, not the comment part.</description>
      <attachments/>
      <comments>27</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>169625</id>
      <title>Update attributes in query dialog should preserve selection</title>
      <description>When updating attributes for a query the selection of milestones etc. is lost.</description>
      <attachments/>
      <comments>13</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>186265</id>
      <title>add support for Bugzilla flags</title>
      <description>Although we may not be able to support this feature we need to ensure that submitting bugs with set flags does not drop the flags from the report.</description>
      <attachments/>
      <comments>44</comments>
      <commenters>8</commenters>
    </issue>
    <issue>
      <id>233621</id>
      <title>autoselect component when only one available</title>
      <description>When creating a new task and using the component selection text filter, it would be nice if the component were automatically selected when only on applies (e.g. typing my I'd like to have Mylyn selected). Saves one click or two tabs.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>239729</id>
      <title>add option to copy commenter's email address out of task editor</title>
      <description>Use case: copy email address of a commenter to add him on CC to another bug. Have not found any way to do this. Was looking for right-click and context menu e.g. in the outline view or the CC box.</description>
      <attachments/>
      <comments>25</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>215549</id>
      <title>Indicate obsolete attachments</title>
      <description>It would be nice if attachments that are obsolete were somehow marked as such in the task editor. P.S. I find the components really confusing so sorry if this should be under Bugzilla or something else :)</description>
      <attachments/>
      <comments>9</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>204051</id>
      <title>attachments don't show if they are incoming like other attributes in task editor</title>
      <description>All of the attributes in the task editor are highlighted if they have changed since the previous version of the task with the exception of the attachments. Any incomming attachments should be highlighted this same way so that users know what has changed and to maintain UI consistency.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>152065</id>
      <title>add support for deprecating patches</title>
      <description>There is no way to deprecate a patch in our UI, so people are either relying on the web UI to do this or not doing it.</description>
      <attachments/>
      <comments>50</comments>
      <commenters>13</commenters>
    </issue>
    <issue>
      <id>238789</id>
      <title>add ability to change the resolution on resolved bugs</title>
      <description>Build ID: I20080617-2000 Steps To Reproduce: After resolving a bug in Bugzilla, the only options become leave as is, reopen, close, and verify. Add the ability (as in the Bugzilla web interface) to change the resolution (showing the resolution dropdown).</description>
      <attachments/>
      <comments>7</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>248376</id>
      <title>add ability to mark as duplicate when in resolved state</title>
      <description>The bugzilla web ui now allows marking as a duplicate when in resolved state.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>244553</id>
      <title>provide one click task creation</title>
      <description>Due to the need to select a repository and sometimes a component within that repository, we require too many clicks for task creation. I think that we should be able to provide one-click task creation via the following mechanisms: 1) Make the toolbar button for creating new tasks a drop down that allows the user to select a repository (bug 219241). 2) Allow the user to set a repository as default for new tasks, both via the repository Properties page and the Task Repositories view. 3) Remove the need for a second wizard page for selecting projects/components (bug 166595). 4) Make the default action of (1) be opening the new task editor for the default repository.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>212967</id>
      <title>sorting of query nodes and archive categories in the task list</title>
      <description>Currently all Archive categories are placed at the end of the task list. In result, active category can be far apart from the actual query node. I suggest, to change default sorting order and use the following rules: -- All local categories should be at the top of the Taks List view -- The rest of the task list should be sorted using the following order: -- repository (same order as in Repositories view) -- query nodes sorted alphabetically by query name -- Archive category for this repository should be placed at the end of the list For example: - My Tasks - Uncategorized - Eclipse/aj [Eclipse.org] - Eclipse/Mylyn [Eclipse.org] - Archive [Eclipse.org] - m2eclipse [Codehaus] - Archive [Codehaus] - Subclipse [Subclipse] - Archive [Subclipse] This way it should be easier to see if query hits are dropped from queries and moved into the Archive</description>
      <attachments/>
      <comments>27</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>165072</id>
      <title>when submitting changes from a rich editor into the repository, it would be nice to see who were notified</title>
      <description>I often want to know who exactly was notified of a change I submitted to a bug/task in a repository. There is of course the CC list etc., but this alone doesn't always help -- different repositories might have different policies on when notifications are sent. At least Bugzilla's and ChangeLogic's web UI shows who was notified after a change was made and I'm very used to it. I don't know for which repositories this would be possible, so I'm filing this under the UI component.</description>
      <attachments/>
      <comments>20</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>272207</id>
      <title>Include iplog flag for patches on bugzilla task editor</title>
      <description>I would like to see being able to mark an attachment with the iplog+ flag. I do a lot of reviewing and committing of contributions, and it would be nice to not have to switch to the web browser view every time for that.</description>
      <attachments/>
      <comments>61</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>243655</id>
      <title>notification window shows last unread comment, not the newest one</title>
      <description>When the notification window pops up, it shows the last unread message, not the newest message that has arrived. This is usually not what you want to see, because if several new messages arrive before you have read them, you always get to see one and the same message. In my opinion, the newest message(s) should be shown.</description>
      <attachments/>
      <comments>11</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>218400</id>
      <title>Display formatted timestamps adjusted to local time</title>
      <description>I usually avoid to look at the timestamps in the web interface. The same applies to Mylyn's task editor. I still rely on bugzilla email notifications because gmail shows me the message timestamp adjusted to my local timezone. I'm in GMT-0200 timezone, and either bugzilla web UI and Mylyn task editor presents them using server's timezone; in eclipse.org server, it is GMT-0400. It is painful, because my brain starts to calculate every time I look to a timestamp :) So, I'd like to present every timestamp adjusted to local timestamp. Or at least make it a preference. Taking a quick look at bugzilla task editor, I think this involves: comments, attachments, and the opened and modified fields.</description>
      <attachments/>
      <comments>26</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>279357</id>
      <title>add custom fields in New Task Editor</title>
      <description>see https://bugs.eclipse.org/bugs/show_bug.cgi?id=175922#45 We did not support custom fields in New Task Editor.</description>
      <attachments/>
      <comments>33</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>239742</id>
      <title>Task list view: 'Group by JIRA Issue Type' presentation menu option</title>
      <description>Mylyn 3.0 CVS head has new 'Group by ... (Experimental)' options in the Task List View's Presentation menu. Grouping is a great way to cope with large numbers of tasks. For JIRA a 'Group by JIRA Issue Type' menu option would help navigation. Or something more generic such as 'Group by Task Type' is this made sense to non-JIRA task sources.</description>
      <attachments/>
      <comments>13</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>279536</id>
      <title>bugzilla hyperlink detector should detect attachment hyperlinks</title>
      <description>attachment references such as the following should be detected as hyperlinks: bq. Created an attachment (id=138622)</description>
      <attachments/>
      <comments>12</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>280337</id>
      <title>use query execution timestamp from rdf as query update time</title>
      <description>Until now we've been iterating over returned tasks to establish the 'last syc time' for a query. Now that this information is provided in the rdf reuslts we can use it instead (for repositories &gt;= Bugzilla 3.4)</description>
      <attachments/>
      <comments>6</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>289663</id>
      <title>remove circular dependency between BugzillaCorePlugin and BugzillaTaskDataHandler</title>
      <description>Part of the state needed by BugzillaRepositoryConnector and BugzillaTaskDataHandler is held in BugzillaCorePlugin. In non Eclipse environments the plug-in class may not have been initialized which can cause NPEs, e.g. when running headless standalone tests (see bug 287226). In order to support headless standalone environments and instantiation of multiple connector instances circular dependencies between BugzillaRepositoryConnector and BugzillaCorePlugin should be eliminated: * BugzillaRepositoryConnector should pull information from BugzillaCorePlugin (if it exists). * All methods not related to Eclipse specific configuration should be moved from BugzillaCorePlugin to BugzillaRepositoryConnector. * All invocations of BugzillaCorePlugin.getDefault() in the core plug-in need to be replaced by calls to BugzillaRepositoryConnector. The constructor in TracRepositoryConnector has an example how to handle initialization.</description>
      <attachments/>
      <comments>18</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>293373</id>
      <title>add ETag to RepositoryConfiguration</title>
      <description>We have requested an enhancement for Bugzilla to support the ETag in config.cgi (https://bugzilla.mozilla.org/show_bug.cgi?id=515644). When this is fixed we have to do the Mylyn side.</description>
      <attachments/>
      <comments>26</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>178474</id>
      <title>[api] open corresponding task should highlight or expand comment number</title>
      <description>This should be very straightforward to implement: we get the time from the history view entry, and we make the task editor scroll to the corresponding comment. If scrolling it is too hard it can just auto-expand for now.</description>
      <attachments/>
      <comments>22</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>296913</id>
      <title>support sorting by due date</title>
      <description>User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.1.5) Gecko/20091102 Firefox/3.5.5 Build Identifier: 20090920-1017 Would be very nice to be able to sort the tasks by the task due date. Reproducible: Always Steps to Reproduce: Tasks should be displayed in order of their due date. The first one due should show up at the top, and the last one due should show up at the bottom. Child tasks should be sorted the same way under a parent. A parent task with no due date, should take either the earliest or latest date of all of its children. This should be configurable in the settings.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>297437</id>
      <title>Support for patch review through Mylyn for Bugzilla</title>
      <description>User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.1.5) Gecko/20091102 Firefox/3.5.5 (.NET CLR 3.5.30729) Build Identifier: 20090920-1017 Currently Mylyn3.3.0v20091015-0500-e3x do not have support for asking patch review to peers or do a patch review while attaching the patch to Bugzilla. There should be a feature that should have the following support: 1. On "Add Attachment" dialog box while attaching patch there should be fields asking for the person who should review the patch. 2. The reviewer should be listed in Bug Window -&gt; Attachments section so that we are aware of who is about to review my patch. 3. If I have been asked for a review then Bug Window -&gt; Attachments section should have another option/column for setting the status(r+, r- etc) of patch being reviewed prior to submit. Above all need to update the Bugzilla fields values accordingly but might need to honor the current bug state i.e.; we can have optional configuration that says whether we are strict about if a bug is in Resolved-Fixed/Closed state then do we really want to add the patch as attachments to the bug with/without changing its state. --Deepak Reproducible: Always</description>
      <attachments/>
      <comments>27</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>290197</id>
      <title>[ui] refactor bugzilla search query page layout</title>
      <description>With the addition of qacontact email to the search page (bug#288478), the email text fields are small. qa, cc check boxes may need to be collapsed into a combo.</description>
      <attachments/>
      <comments>36</comments>
      <commenters>7</commenters>
    </issue>
    <issue>
      <id>302654</id>
      <title>support for Bugzilla 3.6</title>
      <description>Bugzilla 3.5.3 has the following change * comments for attachments changed from Created an attachment (id=????) to Created attachment ???? This breaks SaxMultiBugReportContentHandler.parseAttachment so Creator and created are no longer filled.</description>
      <attachments/>
      <comments>21</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>303411</id>
      <title>cleanup of CustomTaskListDecorationDrawer</title>
      <description>CustomTaskListDecorationDrawer direct use fields from TaskListView and not an API. This needs a cleanup before we can fix bug#199345 ( The Preview within the PreferencePage needs to use this)</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>303413</id>
      <title>TaskRepository Version not set from Configuration</title>
      <description>We need this to support decoration in the TaskListView</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>303531</id>
      <title>refactor CATEGORY_GRADIENT_DRAWER out of TaskListViewer</title>
      <description>Currently CATEGORY_GRADIENT_DRAWER is private in TaskListView. This needs to be public before we can fix bug#199345 ( The Preview within the PreferencePage needs to use this)</description>
      <attachments/>
      <comments>14</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>199283</id>
      <title>[api] make attachments actionable from associated comment in task editor</title>
      <description>Attachments are accompanied with attachment information but users are currently forced to scroll up to the Attachments section and locate the associated attachment. It would be more convenient if the attachment could be acted upon from the comment.</description>
      <attachments/>
      <comments>26</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>308830</id>
      <title>Can't copy name of a commenter from a task</title>
      <description>There is a drop-down menu against a name of a commenter in the task. It allows to do reply or copy email of the commenter to a clipboard. However, I am not able to copy the name of the commenter as there is no such option and the name is not selectable. Every so often I need to copy the name to give a proper credit to a contributor committing their patch and to copy contributor's name I have to open Bugzilla Web interface. Ideally I'd prefer to select the name and use Ctrl-C but another item in the menu would be just fine.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>308737</id>
      <title>[api] provide generic XML-RPC transport layer</title>
      <description>Extract XML-RPC client code from Trac and move to commons to make it reusable for other connectors.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>282211</id>
      <title>create Webservice API</title>
      <description>create the new API for use xmlrpc instead of ctype=xml</description>
      <attachments/>
      <comments>26</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>259291</id>
      <title>add support for custom status workflow</title>
      <description>Bugzilla 3.2 allows the administrator to customize the status workflow sequence (http://mylyn.eclipse.org/bugs32/editworkflow.cgi).</description>
      <attachments/>
      <comments>78</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>278102</id>
      <title>add quick outline to task editor and provide quick access to related tasks</title>
      <description>Stick all attributes in it so that the following works: * Ctrl+O * Type "ver" * Jump into value of Version attribute</description>
      <attachments/>
      <comments>42</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>302652</id>
      <title>attachment table should be sortable</title>
      <description>Would be nice to sort for columns, i.e. creation-date.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>320202</id>
      <title>add support for use... administration parameters</title>
      <description>Actual there is now way to get the ../editparams.cgi?section=bugfields fields from config.cgi or webservice method. We can fields in RepositoryConfiguration that can hold the information for * useclassification * usetargetmilestone * useqacontact * usestatuswhiteboard * usebugaliases * use_see_also RepositoryTemplate genericAttributes can hold the values so we are able to support the correct values for eclipse.org. BugzillaRepositorySettingsPage should show and edit the fields. SWe then can use the RepositoryConfiguration for correctly show the correct field in TaskEditor see bug#307729 Thoughts?</description>
      <attachments/>
      <comments>15</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>295104</id>
      <title>show id and comment number for attachments</title>
      <description>Some people refer to attachments by attachment id. The id is not present in Attachments table and one got to scan the comments to figure it out. It would be also neat to keep comment# in the table, there is enough space for that. I think Mylyn can do better than Bugzilla for that one too.</description>
      <attachments/>
      <comments>15</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>314744</id>
      <title>support defaultmilestone from Product.get XMLRPC</title>
      <description>Actual the defaultmilestone from an product is not supported. The webservice Operation Product.get has the field internals which holds the defaultmilestone. For more information see bug#312207.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>322680</id>
      <title>skip redundant parameters when creating new bugs</title>
      <description>Problem: Some Bugzilla installations may not have custom field information available in their config.cgi. This is problematic, because on task creation Mylyn attempts to send every available custom field as a parameter with a blank value. Bugzilla treats these blank parameters as invalid options, and task creation fails. Possible fix: AFAICT there are no issues if Mylyn ignores blank parameters (i.e. does not pass them into the method). Side note: I did a quick check, and even if the blank string is set as a valid option for a custom field (via direct SQL insert into the database, the web interface will not allow this) Bugzilla will treat it as invalid.</description>
      <attachments/>
      <comments>17</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>324007</id>
      <title>[regression] QA contact field displayed twice</title>
      <description>If I open a bug that has an incoming on the QA contact field (e.g. bug 322058) I see the field twice, under attributes and under people. It should only show under People.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>324525</id>
      <title>Repository Settings Page and custom status workflow problems</title>
      <description>This subtask was created to track the changes requested from bug# 259291 comment #73 - bug# 259291 comment #76 so we can close bug# 259291.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>325349</id>
      <title>Provide CVS Patch Diff format viewer</title>
      <description>It will be great if the CVS patch can be opened in a Diff viewer like the Eclipse.org bugzilla can show. -- Configuration Details -- Product: Eclipse SDK 3.7.0.v201009131800 (org.eclipse.sdk.ide) Installed Features: org.eclipse.mylyn_feature 3.5.0.I20100805-0500-e3x</description>
      <attachments/>
      <comments>6</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>263610</id>
      <title>Add support for status whiteboard in Task Search</title>
      <description>The Task Search dialog doesn't currently support whiteboard field. afaik this is a Bugzilla specific field but quite useful when searching for bugs to review.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>326216</id>
      <title>Enable CLOSED transitions without going through RESOLVED</title>
      <description>Especially for the resolutons WONTFIX, INVALID and WORKSFORME it doesn't seem to make sense to go through RESOLVED first.</description>
      <attachments/>
      <comments>11</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>283200</id>
      <title>[bugzilla] support querying over custom fields</title>
      <description>Now there there is support for editing custom fields in the bugzilla editor, it would be nice if a user could create a query over the custom fields in bugzill using the rich query editor instead of using the URL.</description>
      <attachments/>
      <comments>39</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>329164</id>
      <title>Bugzilla 4.0 - New Default Status Workflow</title>
      <description>Bugzilla 4.0rc1 is released soon so I think we should prepare for the New Default Status Workflow</description>
      <attachments/>
      <comments>20</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>331154</id>
      <title>[api] extend TaskOperation to support tooltip and enablement</title>
      <description>I want to add the following two new features. 1) enable/disable of an TaskOperation 2) add Tooltip support Patch is coming soon.</description>
      <attachments/>
      <comments>20</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>331626</id>
      <title>[api] attribute editors should have a tooltip</title>
      <description>The label of attribute editors should support an additional description as tooltip. Could be handled via the metadata. metaData.setLabel("a field"); metaData.setDescription("a field to enter something");</description>
      <attachments/>
      <comments>15</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>333609</id>
      <title>support parent TaskRelation</title>
      <description>currently only children (dependsOn) are supported</description>
      <attachments/>
      <comments>7</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>335278</id>
      <title>enhance search result handler to handle additional attributes</title>
      <description>When using the @BugzillaClient@ it's possible to add columns to the search results by passing the desired columns in the columnlist parameter. Some of these are correctly mapped to BugzillaAttribute, however others are not. @SaxBugzillaQueryContentHandler@ should be modified to handle the following mappings: reporter_realname assigned_to_realname</description>
      <attachments/>
      <comments>20</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>339791</id>
      <title>bugzilla search page did not store chart settings</title>
      <description>I can reproduce it consistently: 1. do a search with a chart defined 2. reopen the search page 3. chart options is not expanded and you have an empty chart.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>339448</id>
      <title>query dialog should resize when sections are expanded</title>
      <description>When a section is expanded on the query page and the size of the dialog is not sufficient to show all controls without a scroll bar the dialog should be resized so that entire page is visible without a scroll bar.</description>
      <attachments/>
      <comments>18</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>339470</id>
      <title>move flags to subsection</title>
      <description>Some repositories define many flags which can make the attributes section very long. It's also not easy to determine which flags are actually set. To improve I suggest that flags are moved to a sub-section of Attributes named "Flags" that is collapsed by default. The section client are should show all configured flags similar to how the product / component is shown in the title of th eAttributes section.</description>
      <attachments/>
      <comments>17</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>310059</id>
      <title>[api][framework] provide 'update configuration' button on query pages</title>
      <description>Build Identifier: It would be great to have generic solution to add the button to the bottom of the page where 'Finish' and 'Cancel' buttons are placed (but on the left). Reproducible: Always</description>
      <attachments/>
      <comments>32</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>345847</id>
      <title>[api] create UI for private comments</title>
      <description>we need a way to show that an comment is private. Now I do the background work and show the comments in BOLD and ITALIC Font until we did an UI review and come up with an better way to present this to the user.</description>
      <attachments/>
      <comments>19</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>349771</id>
      <title>support marking comments private</title>
      <description>Actual we can only change existing comments and not the new comment.</description>
      <attachments/>
      <comments>25</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>359976</id>
      <title>support excluding fixtures from Bugzilla test suite</title>
      <description>During the setup of my new local Sever i found some small places that we should change</description>
      <attachments/>
      <comments>11</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>242739</id>
      <title>add support for custom priority levels (ie. if not using P1-P5)</title>
      <description>Build ID: I20080617-2000 Steps To Reproduce: 1. Import a task from https://partner-bugzilla.redhat.com 2. Check priority level More information: When priority levels are not P1-P5 and are for instance urgent, high, medium and low (as RHBZ uses), Mylyn defaults to a P3 priority when interpreting the priority.</description>
      <attachments/>
      <comments>19</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>365959</id>
      <title>Bugzilla 4.2: need Token to create Bugs / Attachments</title>
      <description>The next Bugzilla Version (4.2) needs an token for Bug / Attachment creation.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>168204</id>
      <title>support bugzilla's usermatchmode for matching names to email addresses</title>
      <description>if usermatchmode is on and you assign the bug to somebody else by putting only part of the username in the assignee field a window pops up asking for a confirmation of the possible found users. hitting the confirm button will result in a "File Not Found": "The file /process_bug.cgi cannot be found. Please check the location and try again."</description>
      <attachments/>
      <comments>85</comments>
      <commenters>7</commenters>
    </issue>
    <issue>
      <id>349620</id>
      <title>improve UI for private comments</title>
      <description>Instead of using an italic font show a little lock icon to the right of the comment header to denote private comments. The lock icon should also support making a comment private in the future.</description>
      <attachments/>
      <comments>33</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>370331</id>
      <title>[api] automatically validate when pressing finish on repository setting page</title>
      <description>The repository settings page should have a check box "Validate on Finish" that triggers validation when hitting and enter and reports the results. It's important that validation can be disabled by unchecking "Validate on Finish" to allow creation of repositories when offline or when the server returns transient errors.</description>
      <attachments/>
      <comments>22</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>372068</id>
      <title>store last modification date for attachments</title>
      <description>Actual all DELTA_TS are stored in one TaskAttibute. We want to store the DELTA_TS of attachments in an attribute of the attachment.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>194248</id>
      <title>add activate button to local task editor toolbar</title>
      <description>This button is useful and this will be consistent with repository tasks.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>197876</id>
      <title>Remove header actions from new bug editor</title>
      <description>The open in web browser action tries to open a bug report on target repository with our temporary bug number. This action should be removed.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>198953</id>
      <title>task errors not cleaned up on successful query synchronization</title>
      <description>Not sure if this is specific to bugzilla but that is where I noticed it. To reproduce you'll need to turn off authomatic query sync, then disconnect from the network and open some bugzilla task from any query. It will show you a error like "unknown host". Then connect back to the network and kick synchronization for the query containing that task. Query sync passes, but task still have error indicator and even staying italicized.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>180335</id>
      <title>Make network IO timeout values configurable</title>
      <description>Currently socket timeout been set to 10 seconds and http request timeout - to 30. This changed with the bug located a https://bugs.eclipse.org/bugs/show_bug.cgi?id=174685. These values should be configurable for each repository. I was using eclipse 3.2 with the latest version of mylar for that release with a web based repo and it was working fine. I moved to 3.3M6 this week with the dev build of Mylar and I always get the "Unable to fetch resource: Read timed out" error message when mylar queries the web repo.</description>
      <attachments/>
      <comments>14</comments>
      <commenters>7</commenters>
    </issue>
    <issue>
      <id>197853</id>
      <title>Support all platform proxy features</title>
      <description>WebClientUtil has code to setup proxy information for an HTTP connection. It appears that the getPlatformProxy() method only has code for handling unauthenticated HTTP proxies. The Eclipse preference also allows you to configure SOCKS and SSL proxy with or without authentication. It seem like it ought to support all of these.</description>
      <attachments/>
      <comments>23</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>203025</id>
      <title>Trim the task id/key field upon initiating search</title>
      <description>If a bug number is pased in there that happens to have leading or trailing space an invalid bug error occurs.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>141390</id>
      <title>Bug reports show email address rather than proper names</title>
      <description>In the conversion to xml/rdf we lost the real names associated with the user email addresses. We need some mechanism for harvesting the user names and email addresses from bugzilla.</description>
      <attachments/>
      <comments>23</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>201028</id>
      <title>support task editor templates for creating new comments</title>
      <description>A team often builds up a set of stock replies to some common problems, for example, pointers to the download page or to the FAQ. Another example is Eugene's reply on bug 200348. We could better support this via Ctrl+Space invoked templates.</description>
      <attachments/>
      <comments>33</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>178156</id>
      <title>Support negative expressions for email field in Bugzilla query configuration</title>
      <description>Support negative expressions for email field in Bugzilla query configuration. I.e. "email address does NOT contain string". We discussed this with Mik last week and the primary driver fro this is to allow to create query that would exclude bugs assigned to me, because I already have separate query for my bugs.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>183229</id>
      <title>Task Editor incoming changes message is confusing</title>
      <description>When a task is open in the rich editor and it is synchronized and found to have changes, a warning icon and message is given to the user. The message says "Task has incomming changes, synchronize to view". It is expected that the user clicks the refresh button in the right hand corner of the editor, however this message seems to tell the user to synchronize the task, not the editor. If a user does this, the editor is never refreshed until it is closed and reopened. I think that the message should be changed to reflect that the editor needs to be refreshed, not the task, and direct the user to where the refresh button is, or hyperlink the message so that clicking it will refresh the editor.</description>
      <attachments/>
      <comments>17</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>227901</id>
      <title>[api] refactor activity listener add/remove into TaskActivityManager</title>
      <description>The listeners should be registered with the TaskActivityManager. Once completed, ITaskActivityListener.activityChanged() should be called when week start is changed.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>227902</id>
      <title>remove the work day end hour preference</title>
      <description>New scheduling facility does not need this preference, consider eliminating it all together as per bug#173809</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>236569</id>
      <title>consider using returned cookie as indication of authentication</title>
      <description>Currently, the Bugzilla client tests for the presence of a specific value in the response body when logging in to confirm valid authentication. The content should not be relied upon as this is brittle and can break when the repository has been customized. One possible solution would be to test for presence of the bugzilla login cookie in the returned header upon successful validation.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>268408</id>
      <title>automatically select the last used Product when no selection is present</title>
      <description>We currently select the top product, which can be very annoying on large repositories.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>219218</id>
      <title>Show attachment preview right after choosing attachment source</title>
      <description>I just wanted to attach a patch to a Bugzilla via clipboard and I found that it is not obvious at what time exactly the clipboard data is read. Wouldn't it be better to read it right after the first step of the attachment wizard and display the attachment preview at that time? The reason that I stumbled across this is that I tried to copy&amp;paste an attachment comment as well - and got completely confused ;-)</description>
      <attachments/>
      <comments>9</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>273361</id>
      <title>factor out create comment code in CvsContextChangeSet</title>
      <description>duplicated from ContextChangeSet</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>208089</id>
      <title>resolve subtask presentation in Task List</title>
      <description>A number of usability issues have been reported related to subtask visibility and incoming status.</description>
      <attachments/>
      <comments>18</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>269407</id>
      <title>[api] implement TaskDataModel.getChangedOldAttributes()</title>
      <description>When submitting tasks it is sometimes useful to know the old values of the attributes which have changed. Possible use cases: # sending 'delta' changes to the repository for efficiency resons # efficiently handling operations which the repository implements with delete/create As a contributor in the Mantis connector, I've hit the second case with when mapping task relations, and I can only move forward if I can know which task relations where changed, if any. Otherwise I need to delete all relations ( 1 + n SOAP calls ) and then re-create them ( n SOAP calls ) which is a lot of trouble, especially since they don't change often. Please consider implementing TaskDataModel.getChangedOldAttributes. Thank you, Robert Mailing list reference: http://dev.eclipse.org/mhonarc/lists/mylyn-integrators/msg00516.html</description>
      <attachments/>
      <comments>6</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>288175</id>
      <title>numerous false incomings in task list after upgrade</title>
      <description>Numerous false incomings appearing in my task list this morning.</description>
      <attachments/>
      <comments>19</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>280807</id>
      <title>improve Mylyn welcome experience</title>
      <description>Review task-focused title and icons in welcome page. Consider 'Mylyn Connectors' heading...</description>
      <attachments/>
      <comments>6</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>291084</id>
      <title>make time tracking optional and opt-in</title>
      <description>While time tracking is optional in the sense that you currently don't need to use it, and the information is private, but you cannot use both focusing and time tracking since we don't have a separate preference. Proposal: * On the "Tasks" preference page add a check box that says "Track time spent on active task". * Make this new preference off by default so that we give developers a better sense of control by opting into this functionality. * If the option is off, do not show the "Active" text on the Private task editor section. * If the option is off, do not write the heartbeat events that we use to determine time tracking information.</description>
      <attachments/>
      <comments>23</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>299531</id>
      <title>[oslc] update service discovery to use rdf:about from ServiceProviderCatalog</title>
      <description>Looking for resource but should be using rdf:about for catalog url.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>287572</id>
      <title>respect custom bugzilla closed status</title>
      <description>The bugzilla connector treats the statuses RESOLVED, VERIFIED and CLOSED as complete and all others as incomplete. Bugzilla allows the introduction of custom states with an attribute whether such a custom state should be regarded as open or completed. In our company we use an additional state "APPROVED" which we like to regard as one of the completed states. The attached patch replaces the hard coded values with information from the configuration to check whether a task is completed. Perhaps, this bug has a relation to bug 189788.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>302907</id>
      <title>[api] support categorization in Task Repositories view</title>
      <description>First steps for generalizing the Task Repositories view: * Add categories presentation similar to the Task List: Tasks, Bugs, Other * Rename view to "Team Repositories" Some thought needs to be put into how connectors can specify the repository type and how existing repositories can be migrated.</description>
      <attachments/>
      <comments>48</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>306604</id>
      <title>[oslc] support ChangeRequest creation</title>
      <description>Support posting new ChangeRequests to an OSLC_CM service</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>307800</id>
      <title>delegate default change set assignment to AbstractActiveChangeSetProvider</title>
      <description>ContextActiveChangeSetManager currently sets a bogus noTaskActiveProxy on each ActiveChangeSetManager upon deactivation. Consider refactoring so that the default change set can be retrieved from AbstractActiveChangeSetProvider.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>263528</id>
      <title>display a repository service message to warn users of problems, updates, and other relevant information</title>
      <description>As per the discussion on bug 244441, this will help insulate us from incompatibilities between the our rich client and the server. Sits at &lt;repo-url&gt;/service-message.xml, e.g., https://bugs.eclipse.org/bugs/service-message.xml Suggested format: &lt;message&gt; &lt;id&gt;2009-09-03&lt;/id&gt; &lt;type&gt;{warning, info, error}&lt;/type&gt; &lt;connector&gt;bugzilla&lt;/connector&gt; &lt;version-repository&gt;3.2.0&lt;/version-repository&gt; &lt;version-mylyn&gt;3.0.3&lt;/version-mylyn&gt; &lt;summary&gt;Bugzilla 3.2.0 not fully supported, click here to update.&lt;/summary&gt; &lt;details&gt;... HTML formatted message pointing to update site, etc ...&lt;/details&gt; &lt;/message&gt; Message is checked whenever the repository configuration is updated. When the Mylyn version is smaller or equal to "version-mylyn" AND the task repository version is smaller than or equal to "version-repository" the "summary" String is displayed in the task editor's header, as the appropriate type, for each editor opened for that repository, unless user has asked to ignore messages. When user clicks the hyperlink for the message, dialog opens showing HTML-formatted summary of the message, and offers to not display again.</description>
      <attachments/>
      <comments>45</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>306065</id>
      <title>"Unscheduled" in Scheduled Task Presentation shows date 7010</title>
      <description>See attached screen shot: The "Unscheduled" entry shows the data "7010" in the Scheduled Task Presentation. Maybe a very minor issue :-) -- Configuration Details -- Product: Eclipse 1.2.2.20100122-1337 (org.eclipse.epp.package.jee.product) Installed Features: org.eclipse.mylyn_feature 3.3.2.v20100222-0100-e3x</description>
      <attachments/>
      <comments>10</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>172393</id>
      <title>Additional actions on Repository view</title>
      <description>Repository view should have the following actions in the popup menu for selected repository: -- New Task -- New Query -- Open Repository Task</description>
      <attachments/>
      <comments>11</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>165732</id>
      <title>Can't mark multiple local and web tasks completed</title>
      <description>It is possible to mark individual query hits from web query completed, but this action is disable when there is more then one hit selected. It is quite critical, since we decided for now to manage completed status locally.</description>
      <attachments/>
      <comments>19</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>194614</id>
      <title>Values in issue type attribute dropdown aren't scoped by project</title>
      <description>Values in issue type attribute dropdown aren't scoped by project in both new and existing task editor</description>
      <attachments/>
      <comments>9</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>159343</id>
      <title>Due date filter in JIRA query does not work</title>
      <description>Due date does not work for Jira query</description>
      <attachments/>
      <comments>5</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>189787</id>
      <title>[web connector] Make regexp parsing of web pages more flexible</title>
      <description>Currently, there is one regexp which has to return ${task.id} in the first match and ${task.description} in the second one. This could be made more flexible in this way: 1. Any regexp is allowed with any number of capturing groups (...) 2. Any capturing group can be referenced by e.g. ${query.group.1}... 3. For both the task id and the task description a string composed of any characters and references to variables including the capturing groups ${query.group.1}... can be build (form input field) E.g. Task ID: "ID ${query.group.2}" Task Description: "${query.group.3}: ${query.group.1}" In this way, access to other task properties (e.g. status, priority etc.) could be defined.</description>
      <attachments/>
      <comments>30</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>196549</id>
      <title>[web connector] completion proposal for query configuration</title>
      <description>query configuration could use completion proposals on all url and pattern fields.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>166604</id>
      <title>Show task info when hovering a hyperlink</title>
      <description>On the web interface, when you hover some bug hyperlink, like bug#152065, the browser shows a tooltip with the bug description. The bug editor (and other places where there is bug hyperlink detection) should have similar functionality. Additionally, since we have a custom tooltip, it can show not only the bug id/description, but other task info, if available. If the task info is not available locally, it can be downloaded on background and presented to the user.</description>
      <attachments/>
      <comments>17</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>171724</id>
      <title>support searching and querying bugzilla based on keywords</title>
      <description>It would be handy (hence the P5) to be able to include keywords in the bugzilla repository queries.</description>
      <attachments/>
      <comments>31</comments>
      <commenters>8</commenters>
    </issue>
    <issue>
      <id>155280</id>
      <title>provide spell checking correction recommendations in the task editor</title>
      <description>Eugene suggested that spelling recommendations be made available via content assist. Another idea would be to populate the context menu with the recommendations. The first hurdle will be actually getting the recommendations form the spelling engine.</description>
      <attachments/>
      <comments>19</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>179856</id>
      <title>convert hyperlink detectors in Task Editor to Eclipse 3.3 hyperlink detectors</title>
      <description>Convert hyperlink detectors in Task Editor to Eclipse 3.3 hyperlink detectors</description>
      <attachments/>
      <comments>10</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>199342</id>
      <title>extension point for contributing task list presentations</title>
      <description>provide extension point for contributing task list presentations</description>
      <attachments/>
      <comments>16</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>195514</id>
      <title>support spell checking in description, comment and summary field</title>
      <description>When entering a new bug (such as this one), spelling mistakes are automatically underlined in description and comments, which is nice. However, this not the case for the summary line, which goes unchecked. Further, there is currently no way to invoke the auto-correct feature to have eclipse give me a spelling suggestion. I tried Apple-1 (Mac OS X) and Ctrl-1 (Linux), which works fine in the Java editor, but does nothing in the bug editor.</description>
      <attachments/>
      <comments>18</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>167866</id>
      <title>make Bugzilla URL link clickable</title>
      <description>(I am using whatever Mylar version you get if you download today. Eclipse 'About' box gives it as version 1.0.0, but that isn't listed in the version box above.) When viewing a bug from Bugzilla it displays the URL field as an edit box, which is fine. However it would be nice if the label ('URL') next to the field was an underlined, clickable link which would launch the user's default browser [as per Eclipse preferences]. Current use: 1) View bug 2) Expand 'Attributes' 3) Click in URL field 4) Press Ctrl-A, Ctrl-C 5) Switch to external browser program 6) Open new window or tab 7) Press Ctrl-V, Return (Now viewing URL in preferred browser) Use after proposal implemented: 1) View bug 2) Expand 'Attributes' 3) Click the underlined label 'URL' (URL launches in preferred browser)</description>
      <attachments/>
      <comments>26</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>204847</id>
      <title>polish create bugzilla query from url page</title>
      <description>Current create wizard page for creating bugzilla query from url have somehow odd ui and could use some cleanup.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>201144</id>
      <title>[context] support focusing the Bookmarks view</title>
      <description>Build ID: I20070621-1340 When I switch from working on one task to another, I'd like it if my bookmarks also switched. In other words, I do *not* want to see bookmarks that I set when a different task was active.</description>
      <attachments/>
      <comments>13</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>203994</id>
      <title>Create image attachments from clipboard</title>
      <description>It would be great if creating enhancements from clipboard would support image creation. That would save the clipboard-&gt;mspaint-&gt;save as-&gt;file orgie at least for Windows.</description>
      <attachments/>
      <comments>21</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>214274</id>
      <title>show project keys on project selection page of the new jira task wizard</title>
      <description>show project keys on project selection page of the new jira task wizard</description>
      <attachments/>
      <comments>18</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>186733</id>
      <title>Incoming details in task tooltip should strip quoted comment</title>
      <description>Incoming details in task tooltip should strip quoted comment. So, it will be actually possible to see the comment and not the quoted text.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>159397</id>
      <title>Improve auto detection of platform/os for new bug submission</title>
      <description>When I create a new bugzilla task, the attribute "OS" comes pre-selected with "Windows Vista", while when using the web interface it detects correctly "Windows XP". I'm not sure if the bug editor uses the same mechanism as the web interface, i.e. the detection comes from server metadata, but in any case it would be nice to have the same detection mechanism.</description>
      <attachments/>
      <comments>38</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>205708</id>
      <title>Make Mylyn accept gzip encoded data on all requests</title>
      <description>Luckily I'm blessed with acceptable download/response speeds from eclipse.org and bugzilla. Not every developer in every country is so lucky: https://www.blogger.com/comment.g?blogID=237205426838095904&amp;postID=3052377496651115504 bandwidth can also be contrained for those connecting via moblie networks. Bandwidth was even an issue for eclipse.org, see bug 196056 Mylyn can further reduce its bandwidth needs by accepting gzip encoding on ALL connections. Proposed solution: create a Facade for HttpClient.Method that always sets the Accept-encodig: gzip header It also overrides Method.getResponseBodyAsStream to intercept with java.util.zip.GZIPInputStream() when the content-encoding: gzip or content-type: application/x-gzip headers are set. Method.getResponseBody is only used to clear the buffer in response to an error.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>208275</id>
      <title>Task, Category and Repository should fill the standard Properties view:</title>
      <description>See bug 207498: [patch] stop automatic configuration retrieval if already done https://bugs.eclipse.org/bugs/show_bug.cgi?id=207498#c10 What you want is a new bug: Task, Category and Repository should fill the standard Properties view: http://dev.eclipse.org/blogs/wayne/2007/10/08/getting-started-with-properties/ http://dev.eclipse.org/blogs/wayne/2007/10/15/adapters/ http://dev.eclipse.org/blogs/wayne/2007/10/23/adapters-part-deux/ Some key data relevant to users (or developers) can be shown here</description>
      <attachments/>
      <comments>26</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>210639</id>
      <title>Task, Category and Query should display # children, offspring and cyclic state in properties view</title>
      <description>Many bugs currently concern issues with children, potential cyclic children, recursing through offspring or other things to do with counting and testing children. I ahve extended the Mylyn PropertySources in the sandbox developer tools with three extra bits of information: - Total children, giving the result of getChildrenInternal(), - Total offspring, giving the total of unique tasks below the selection, - Test contains cyclic, return true if any of the offspring contains a cycle</description>
      <attachments/>
      <comments>11</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>217247</id>
      <title>add key binding for "Del" in the Task Repositories view</title>
      <description></description>
      <attachments/>
      <comments>10</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>184532</id>
      <title>[connector] Generic SQL connector</title>
      <description>Here is a suggestion for a future Mylar connection. Since most task repositories are in a relational database it does not make sense that we should build each connector from scratch. Instead there should be a a generic connector just as there is a generic web connector. The base task building blocks (tables) are: Tasks, contains master data (id, prio, moddate, plandate, assigned to, etc..) Task Details, contains at least one single block of comments Can be extened by the following tables Attachements, containing (a reference to) attachments People data, contains people info In addition to that we need methods that operate on the data. These methods could either update a single field in the database or implement some clever interface. These map to the actions that can be found in bugzilla (close, etc) I see a wizard that is able to connect to a database, show the table and fields that map to map Mylar fields. The base could be defined in extension points so that zero programming is required to create a new connector.</description>
      <attachments/>
      <comments>76</comments>
      <commenters>11</commenters>
    </issue>
    <issue>
      <id>245823</id>
      <title>display attributes for tasks and queries accessible through the IAttributeContainer in Properties View</title>
      <description>(In reply to comment #3) &gt; Thanks Maarten. I have applied the patch. &gt; &gt; Would be you be interested in extending the property pages to also display &gt; attributes for tasks and queries accessible through the IAttributeContainer &gt; interface?</description>
      <attachments/>
      <comments>7</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>249021</id>
      <title>OpenTaskAttachmentXXXHandlers do not work for stream based  attachments, only for URL based</title>
      <description>For the Generic SQL Connector with reference implementation in Derby we store all task artifacts in SQL tables. This means that an attachment such as a screen shot is stored in an sql BLOB field. We can store and retrieve allright but double clicking and opening in Default editor mostly fail. We store file name and mime type, so enough info is available to select a default editor on double click, but the open in Browser handler get the double click action, even when no URL is specified. I propose we change these handlers so that when no URL is specified but the mime type is openable by browser , the blob data is downloaded from the DB and stored in a TEMP location and opened with a file:// URL instead. This will give rapid double click access to screenshots. When the attachment is java, or zip we handle it differently.</description>
      <attachments/>
      <comments>14</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>247213</id>
      <title>display TaskData for selected task in Properties View</title>
      <description>During development it is useful to be able to introspect into the takdata for a selected task. in bug 245823: display attributes for tasks and queries accessible through the IAttributeContainer in Properties View https://bugs.eclipse.org/bugs/show_bug.cgi?id=245823 comment 5 &gt; That would be a nice addition, even if it the task data was only dumped to the &gt; console or displayed as text. The attributes can be obtained using this call: &gt; &gt; TasksUi.getTaskDataManager().getWorkingCopy(task).getLocalData().getRoot().getAttributes() &gt; &gt; Please create a new task if you are interested in implementing that. This bug handles creation of that functionality.</description>
      <attachments/>
      <comments>25</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>174473</id>
      <title>[new eux] New repository wizard should suggest to create New query upon completion</title>
      <description>Several users got confused with New repository wizard and were expected to see updates in the task list right after creating new repository. So, it would make sense to open New Query wizard right after repository creation to eliminate such confusion.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>297559</id>
      <title>Allow dragged tasks to be dropped anywhere into the list of tasks in the Scheduled Task Presentation</title>
      <description>In the Scheduled Task Presentation I would like to drop dragged task anywhere into the list. E.g. bc. [-] Monday Task 1 ------------------ Task 2 Task 3 Task 4 [+] Tuesday [+] Wednesday [+] Thursday [+] Friday [-] This Week Task X Task Y ------------------ Here I would like to drag and drop Task Y to the "Monday". But since the "Monday" element is out of my visible area (indicated by the "@----@ "), I have to scroll before. Much simple would it to just drop the task anywhere between Task 3 and Task 4 above. Since the sorting is done by the presentation, the exact position would not care here. -- Configuration Details -- Product: Eclipse 1.2.1.20090812-1036 (org.eclipse.epp.package.jee.product) Installed Features: org.eclipse.mylyn_feature 3.3.1.I20091126-2200-e3x</description>
      <attachments/>
      <comments>6</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>331172</id>
      <title>warn when copying context to a task that already has context</title>
      <description>It would be nice to get a warning when you're about to copy context to a task that already has context, both because it's easy to accidentally copy to the wrong task, and also because it's not obvious that it will _replace_ the existing context rather than simply add to it (which would be a useful feature).</description>
      <attachments/>
      <comments>15</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>331571</id>
      <title>[api] tasks framework should invoke updateTaskFromTaskData() for new tasks</title>
      <description>Some connectors use information on the ITask to determine task kind labels and other information. When a new task is created, there is no way that this can be set to ensure that the UI has the information that it needs on the ITask. There should be some way of being able to updateTaskFromTaskData with new task data before the new task editor is opened.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>327723</id>
      <title>[context] add elements to context when a breakpoint is created</title>
      <description>When I double click in the editor margin to create a breakpoint on a method that is not in my context, the method is not added to my context, so the breakpoint doesn't show up in the filtered breakpoints view. I frequently do this when exploring code. I think adding a breakpoint to a method should cause it to be interesting.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>334414</id>
      <title>add repository tasks to task list on save or submit</title>
      <description>When opening a task from the repository, if you save it or submit, it should be added to the task list automatically. This should prevent receiving an incoming notification for a task on which you just added yourself as CC.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>334445</id>
      <title>date bins for next week should indicate the day of the week</title>
      <description>Date bins for next week should indicate the day of the week. e.g. Jan 18, 2011 (Tuesday)</description>
      <attachments/>
      <comments>16</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>174658</id>
      <title>[context] support context preview without requiring task activation</title>
      <description>Currently only the context for the active task can be previewed and edited. Task activation should not be required.</description>
      <attachments/>
      <comments>23</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>162007</id>
      <title>[change sets] Do not include files in change set unless edited when task is active</title>
      <description>Upon activating a new task I've seen files 'move' from one change set into the newly activated task's change set (based on interest I believe).</description>
      <attachments/>
      <comments>22</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>335068</id>
      <title>add "Hide Completed Tasks" button to search view</title>
      <description>Add "Hide Completed Tasks" button to search view. Having to select the status in the search dialog is a pain, and you often want to search tasks with all statuses and then narrow the search to non-completed tasks after.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>343005</id>
      <title>[api] framework should provide facility to update attribute editors when the TaskDataModel changes</title>
      <description>I am working on a plugin which changes the values of various task attributes in response to user interaction in the task editor, and I would like the attribute editors to refresh with the new values. The problem is that most subclasses of AbstractAttributeEditor do not implement refresh(). Some of them do implement refresh() and provide their own TaskDataModelListener which calls refresh(), but it seems like this should be handled in the super class, and the listeners in the subclasses should be removed if they are not needed.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>356397</id>
      <title>task trim menu: replace active task with "open active task" option at the bottom of the menu</title>
      <description>As per discussion on bug 347720, the active task should be removed from the drop down menu of the task trim widget, and an "open active task" option should be added at the bottom of the menu.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>349510</id>
      <title>add maximize button to private notes section</title>
      <description>It would be great to have a maximize button for the private notes section. Current workaround is to fill it with text and close and reopen the task. That makes it bigger but not maximized.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>364999</id>
      <title>User can select repository when clicking a task hyperlinks in the task editor</title>
      <description>Task hyperlinks in the task editor should work the same way as in the Java editor: when you hover over the link, there should be a popup simliar to the one for attachment links allowing you to select the repository.</description>
      <attachments/>
      <comments>17</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>333930</id>
      <title>[api] provide ability to get notified of changes to task data and submits</title>
      <description>...so one can listen to submits without creation/initiating them.</description>
      <attachments/>
      <comments>20</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>370283</id>
      <title>[api] allow clients to be notified of drop events in the task list</title>
      <description>I would like to be able to extend the TaskListDropAdapter, in particular to add custom behaviour when a task is dragged onto another task if some modifier key is held.</description>
      <attachments/>
      <comments>22</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>236367</id>
      <title>[wikitext] MarkupParser has formatting typos</title>
      <description>The space between normal text and the *strong* text disappear, e.g. "the *getControl* method in *WikiTextAttributeEditor*" becomes "the getControlmethod in WikiTextAttributeEditor". There might be other formatting typos when transferring the text from the "New Comment" area. The origin of this issue is when MarkupViewer invokes MarkupParser. Please take a look at the attached screen shot.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>237307</id>
      <title>[wikitext] contributed markup editor should display markup validation annotations</title>
      <description>Textile-J provides markup validation so that users can avoid common pitfalls when authoring markup. The annotations created for validation errors and warnings should be displayed in the markup editor in the Task editor of Mylyn. Mylyn-Inbox: please assign to me.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>244653</id>
      <title>[api] extension for repository properties wizard page</title>
      <description>Implement an extension point for contributors to add to the repository properties wizard page UI. This new feature will facilitate adding configuration UI for properties that are not a part of the repository-specific plug-in, such as the task editor extension.</description>
      <attachments/>
      <comments>50</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>245607</id>
      <title>it should be possible to exclude specific headings from the table of contents</title>
      <description>this feature will support TWiki syntax for exlusion of headings from %TOC%</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>245549</id>
      <title>support for TWiki syntax</title>
      <description>TWiki syntax is used by other Mylyn sandbox projects, namely XPlanner. http://twiki.org/cgi-bin/view/TWiki04x02/TextFormattingRules</description>
      <attachments/>
      <comments>18</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>245757</id>
      <title>HTML viewer should paint horizontal rule</title>
      <description>Several of the markup languages supported have syntax for horizontal rule. The viewer should paint a separating line for such markup.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>246034</id>
      <title>HtmlViewer (and MarkupViewer) should be able to display images</title>
      <description>StyledText and SourceViewer don't appear to be able to display images, however we can paint images ourselves. The strategy could look something like this: # load all required images ## determine their height and width # based on the font metrics determine the number of newlines required to display each image # while parsing insert the required number of newlines and add the image annotation # use an ImageAnnotationDrawingStrategy to paint the image The details of when this functionality should be enabled and how/when image data is downloaded have yet to be established.</description>
      <attachments/>
      <comments>17</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>249261</id>
      <title>content assist for TWiki markup language</title>
      <description>The TWiki plug-in should provide content assist for TWiki markup</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>249561</id>
      <title>validation rule for TWiki lists</title>
      <description>TWiki list syntax is a bit error-prone since it relies on preceding whitespace in multiples of 3. WikiText should look for markup that looks like a list but doesn't quite meet the criteria and create a warning.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>249560</id>
      <title>Ant task should provide the option of markup validation</title>
      <description>The wikitext-to-* Ant tasks should provide the option of validation. Settings for what to do on error or warning should also be available.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>256143</id>
      <title>Validation for editor CSS style preferences</title>
      <description>Editor uses CSS for font preferences. Validation on preference page should verify syntax and supported styles.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>256144</id>
      <title>Markup validation for document-internal links</title>
      <description>A validator should be available for markup-internal links. In other words, if a link references an #id in the document that does not exist then a warning or error should be created</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>256190</id>
      <title>markup validation should be performed as part of the Eclipse build</title>
      <description>preferably the validation would be managed the same as other validators, such as XML and HTML</description>
      <attachments/>
      <comments>11</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>256512</id>
      <title>[website] WikiText stand-alone package download URL sometimes gives a 404</title>
      <description>depending on the mirror selected this URL can give a 404: http://www.eclipse.org/downloads/download.php?file=/tools/mylyn/update/weekly/mylyn-wikitext-standalone-latest_incubation.zip&amp;r=1 the URL should be changed to the following so that users can select a different mirror if a 404 occurs: http://www.eclipse.org/downloads/download.php?file=/tools/mylyn/update/weekly/mylyn-wikitext-standalone-latest_incubation.zip</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>257868</id>
      <title>Support image hyperlinks for MarkupViewer</title>
      <description>make an image in MarkupViewer be clickable to execute an Eclipse Command</description>
      <attachments/>
      <comments>3</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>259089</id>
      <title>HtmlDocumentBuilder beginDocument extensibility improvements</title>
      <description>Build ID: CVS Head I extended the class org.eclipse.mylyn.wikitext.core.parser.builder.HtmlDocumentBuilder to create my own HTML Variation. Specifically I want to parameterize style sheets and include some javascript links. I found that the only ways to influence the &lt;head&gt;...&lt;head/&gt; contents at all are the calls to setTitle(...) and addCssStyleSheet(...). For me this is insufficient because I want to add some more attributes to the style sheet link. I also want to include a link to some Javascript file. The only way to make this work is to override beginDocument() and not call super.beginDocument(). So I have to write everything until &lt;body&gt; myself. Please provide a hook in HtmlDocumentBuilder.beginDocument() to allow subclasses adding own stuff to the HTML head.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>258559</id>
      <title>configurable markup language rules</title>
      <description>Build ID: M20080911-1700 Steps To Reproduce: Generate HTML for a textile doc with this content: "OK" The result will look like: &amp;#8220;OK&amp;#8221; This does not render nicely in the Eclipse Help System. (For a live example, look at the *WikiText User Guide* in the help system: notice how "Source" renders in the *Markup Source Tab* section.) More information: The relevant logic is here: @org.eclipse.mylyn.wikitext.textile.core.TextileLanguage.initializeTokens()@ where these transformations are added: bc.. tokenSyntax.add(new EntityWrappingReplacementToken("\"", "#8220", "#8221")); tokenSyntax.add(new EntityWrappingReplacementToken("'", "#8216", "#8217")); p. For the short term, I'll probably just remove these and build a jar for internal use. It would be nice, ultimately if there were a way to configure this without having to re-compile though... Maybe such rules could be externalized to a config file of some kind?</description>
      <attachments/>
      <comments>13</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>260209</id>
      <title>markup editor content assist should suggest anchor names</title>
      <description>validation can easily find invalid internal document references, but content assist doesn't know about ids. content assist should be smart enough to help.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>260476</id>
      <title>WikiText editor should support a quick outline</title>
      <description>the summary says it all</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>260547</id>
      <title>implement folding in the WikiText editor</title>
      <description>folding per "Folding in Eclipse Text Editors":http://www.eclipse.org/articles/Article-Folding-in-Eclipse-Text-Editors/folding.html</description>
      <attachments/>
      <comments>7</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>260479</id>
      <title>hyperlinks in the WikiText editor preview should open documents in a new window/tab</title>
      <description>the workspace preferences should be used to determine how to open the document</description>
      <attachments/>
      <comments>5</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>260485</id>
      <title>Suppress display of "Plain Text" when no other options present</title>
      <description>in repository preferences dialog, if no TaskEditorExtensions are available then don't show 'Editor' section.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>260934</id>
      <title>MarkupEditor should adapt to a IShowInTargetList</title>
      <description>this is necessary for the *Show In* menu to be populated.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>260475</id>
      <title>application of DOI to editor content and folding</title>
      <description>The WikiText editor and representation of WikiText content should integrate better with the Mylyn task DOI model * structured outline integration inside the editor, the outline view and in the navigation hierarchy * editor folding (automatic, as it works for the Java editor)</description>
      <attachments/>
      <comments>14</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>261942</id>
      <title>undo/redo should be available from the markup editor outline</title>
      <description>now that edits are available from the outline view undo/redo via hotkeys and context menu should be available.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>263150</id>
      <title>markup rendering preferences should provide rending preview</title>
      <description>a side-by-side preview would be ideal, much the same as the Java editor syntax coloring preferences</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>262202</id>
      <title>markup rendering should use stylesheet preferences</title>
      <description>Currently it's difficult to see the difference between code/tt text and regular paragraphs. Furthermore, there is no way to alter the appearance with preferences. The WikIText editor preferences currently only affect the source view. Either the preview should use the same preferences as the source view or seperate preferences should be available (perhaps as simple as a default CSS.) Also a the default CSS should provide styles to make code blocks more obvious.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>262994</id>
      <title>provide an implicit "task editor" mode for supported WikiText dialects</title>
      <description>The task editor has some important features for editing comments: * Foreground highlighting of quoted regions * Hyperlinking and foreground highlighting of task hyperlinks * Content assist for tasks In order to support making WikiText be a preferred or default mode for task editing, we need a mode for each of the relevant WikiText dialects to support the above features. This would preferably be done with no additional UI, since we have two very clear modes for the WikiText behavior, i.e., one for file editing, one for task editing.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>267960</id>
      <title>guess the mime type of attachments from the filename using plug-in registered meta-data</title>
      <description>In the new attachment wizard of the task editor the mime type is often guessed incorrectly as an octet stream for some file types (such as *.textile) Using org.eclipse.team.core.fileTypes Mylyn should be able to make a better guess for text/plain files</description>
      <attachments/>
      <comments>10</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>268597</id>
      <title>external links in mylyn help should open a new window</title>
      <description>It seems weird that the user can potentially get to Google or bugzilla from within the help documentation. I think that all external links should have a target set on them so that they open in different browser.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>269147</id>
      <title>wikitext-to-dita ant-task removes "." from dita file name</title>
      <description>wikitext-to-dita ant-task removes "." characters from the name of generated topic (.dita) files. If a topic is "eu.myorg.package.functions" the generated topic file has the name "eumyorgpackagefunctions.dita" instead of "eu.myorg.package.functions.dita". It would be nice to have this feature configurable.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>269637</id>
      <title>[api] move MarkupLanguageConfiguration to API</title>
      <description>this will enable 3rd party markup editors</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>269547</id>
      <title>support for nested markup blocks</title>
      <description>Currently markup block nesting is not well-supported by WikiText. Some markup languages (such as Confluence) have this paradigm. First-class support for nested blocks should be supported by WikiText. Care should be taken to avoid creating a performance issue for languages that do not support this feature. Avoiding nested blocks has been a great optimization opportunity so far. This should be one of those features where it doesn't cost anything unless it's used.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>269898</id>
      <title>Update WikiText developer documentation to reflect nested block capability</title>
      <description>see bug 269547 for details</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>271019</id>
      <title>prepare 3.1.1 maintenance release</title>
      <description>To address regressions in JIRA we should consider a 3.1.1 maintenance release.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>272621</id>
      <title>create Mylyn Connector discovery mechanism</title>
      <description>One of the key challenges that we have had with Mylyn is making it easy for users to access the connectors that they need to use Mylyn. The connectors that we bundle have high adoption, but discovering and installing additional connectors has been painful, and bundling third party components is not an option. I propose that we take a similar approach to what WTP has done with enabling server discovery (screenshot attached). We can create a similar UI that uses a web-based listing of connectors or connector portals that have passed some kind of transparent approval process. The goal of this initiative will be to make it easy to get high quality connectors that help the growth and adoption of Mylyn into the hands of Mylyn users. The proposed approach is to closely follow both the UI and interaction style (e.g., license acceptance of the install) of WTP.</description>
      <attachments/>
      <comments>39</comments>
      <commenters>7</commenters>
    </issue>
    <issue>
      <id>273325</id>
      <title>Ease wikitext ant tasks usage in Eclipse</title>
      <description>Wikitext ant tasks should use org.eclipse.ant.core.antTasks and org.eclipse.ant.core.extraClasspathEntries extension points so these tasks can be freely used in Eclipse. Attached patch is doing all the things to make the wikitext tasks available to ant editor completion and ant classpath is set so the tasks work. The patch is doing the following: 1. Extract ant tasks to a separate src_ant source folder. 2. Adds a custom builder to build the ant tasks library. 3. Adds all tasks to the org.eclipse.ant.core.antTasks and the new library to the org.eclipse.ant.core.extraClasspathEntries extension points. 4. Other project settings changes needed. This work is based on the org.eclipse.equinox.p2.publisher way of adding its ant tasks.</description>
      <attachments/>
      <comments>63</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>272626</id>
      <title>define XML format for plugging into discovery UI</title>
      <description>We need an extensibility mechanism for adding listings to the discovery UI.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>272757</id>
      <title>Markup specific to bugs.eclipse.org: -- Error Details --</title>
      <description>Some markup is common to see in bugs that are filed in bugs.eclipse.org, possibly due to submission by Mylyn. One such kind of markup is -- Error Details --. WikiText should detect -- Error Details -- and create a preformatted block for it and everything that follows. See bug 272562 for an example.</description>
      <attachments/>
      <comments>14</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>257977</id>
      <title>[api] It would be useful for IInteractionContext to provide a means for knowing if something is interesting</title>
      <description>while it is currently possible to know if something is interesting given an IInteractionContext, the current APIs make the code inefficient. A new method on IInteractionContext would make the query easy and fast. Suggested API change on @IInteractionContext@: bc. /** * indicate if the interaction element identified by the given handle is interesting * * @param elementHandle * the {@link IInteractionElement#getHandleIdentifier() handle identifier} * * @return true if an {@link #getInteresting() interesting} interaction element exists with the given handle */ public boolean isInteresting(String elementHandle);</description>
      <attachments/>
      <comments>11</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>275029</id>
      <title>Add a text search field to the discovery UI wizard</title>
      <description>Provide a search text field that filters the connectors in the UI. The search text field will do a plain-text search on names, descriptions etc. of connectors. From bug 272621 comment 14: &gt; I think it?s worth doing since we?re expecting to support stores with a large number of listings. &gt; Please take the ?Find? UI approach of the Task List rather than the ?type filter text? approach &gt; that the Preferences dialog uses.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>275204</id>
      <title>integrate discovery mechanism with tasks.ui</title>
      <description>Integrate the discovery mechanism by adding to the *Add Task Repository* wizard. At this point how this is to appear is uncertain. Likely to be either a hyperlink in the wizard UI, or an *Other...* kind added to the list of repository kinds available.</description>
      <attachments/>
      <comments>15</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>275696</id>
      <title>Textile to disable markup conversion to special characters (quotes, apostrophe) for task repositories</title>
      <description>As per bug 275346 Bugzilla has problems with some characters unless it's configured to use UTF-8. To avoid issues with repositories that are not configured to use UTF-8, Textile markup should disable conversion to special characters such as apostrophe (#8217), directional quotes (#8220, #8221), and directional single-quotes (#8216, #8217) when used with task repositories.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>275777</id>
      <title>features that are already installed should be filtered from the discovery UI</title>
      <description>Currently selecting an installed feature in the discovery UI causes an error in P2. Some things that we could do: * filter the feature from the discovery UI * allow feature detection, but do not select it when finish is pressed unless the version available in the repository is newer</description>
      <attachments/>
      <comments>7</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>276217</id>
      <title>improve error message when connector installation fails</title>
      <description>If get the following error when attempting a connector installation in a self-hosted environment which is not very informative: "Problems occurred while performing installation: null. See error log for Details." This is logged to the error log: java.lang.reflect.InvocationTargetException at org.eclipse.mylyn.internal.discovery.ui.wizards.InstallConnectorsJob.run(InstallConnectorsJob.java:80) at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:121) Caused by: org.eclipse.equinox.internal.provisional.p2.core.ProvisionException: Unable to read repository at http://download.eclipse.org/tools/mylyn/update/weekly/extras/content.xml. at org.eclipse.equinox.internal.p2.metadata.repository.CacheManager.createCache(CacheManager.java:167) at org.eclipse.equinox.internal.provisional.spi.p2.metadata.repository.SimpleMetadataRepositoryFactory.getLocalFile(SimpleMetadataRepositoryFactory.java:60) at org.eclipse.equinox.internal.provisional.spi.p2.metadata.repository.SimpleMetadataRepositoryFactory.validateAndLoad(SimpleMetadataRepositoryFactory.java:99) at org.eclipse.equinox.internal.provisional.spi.p2.metadata.repository.SimpleMetadataRepositoryFactory.load(SimpleMetadataRepositoryFactory.java:87) at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.factoryLoad(MetadataRepositoryManager.java:54) at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:662) at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:610) at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:92) at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:88) at org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningUtil.loadMetadataRepository(ProvisioningUtil.java:88) at org.eclipse.mylyn.internal.discovery.ui.wizards.InstallConnectorsJob.doRun(InstallConnectorsJob.java:118) at org.eclipse.mylyn.internal.discovery.ui.wizards.InstallConnectorsJob.run(InstallConnectorsJob.java:75) ... 1 more Root exception: org.eclipse.equinox.internal.provisional.p2.core.ProvisionException: Unable to read repository at http://download.eclipse.org/tools/mylyn/update/weekly/extras/content.xml. at org.eclipse.equinox.internal.p2.metadata.repository.CacheManager.createCache(CacheManager.java:167) at org.eclipse.equinox.internal.provisional.spi.p2.metadata.repository.SimpleMetadataRepositoryFactory.getLocalFile(SimpleMetadataRepositoryFactory.java:60) at org.eclipse.equinox.internal.provisional.spi.p2.metadata.repository.SimpleMetadataRepositoryFactory.validateAndLoad(SimpleMetadataRepositoryFactory.java:99) at org.eclipse.equinox.internal.provisional.spi.p2.metadata.repository.SimpleMetadataRepositoryFactory.load(SimpleMetadataRepositoryFactory.java:87) at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.factoryLoad(MetadataRepositoryManager.java:54) at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:662) at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:610) at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:92) at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:88) at org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningUtil.loadMetadataRepository(ProvisioningUtil.java:88) at org.eclipse.mylyn.internal.discovery.ui.wizards.InstallConnectorsJob.doRun(InstallConnectorsJob.java:118) at org.eclipse.mylyn.internal.discovery.ui.wizards.InstallConnectorsJob.run(InstallConnectorsJob.java:75) at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:121)</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>277194</id>
      <title>cancel button doesn't work when "Discovering connectors"</title>
      <description>"Cancel" button doesn't work: it doesn't stop immediately, and it doesn't even close dialog. After "discovery" finishes, list of connectors is empty, so it is somewhat cancelled. Error log contains this "Unexpected error" log with stacktrace: org.eclipse.core.runtime.OperationCanceledException at org.eclipse.mylyn.internal.commons.net.PollingInputStream.read(PollingInputStream.java:159) at java.io.BufferedInputStream.fill(BufferedInputStream.java:218) at java.io.BufferedInputStream.read(BufferedInputStream.java:237) at org.eclipse.mylyn.internal.discovery.core.util.WebUtil.downloadResource(WebUtil.java:81) at org.eclipse.mylyn.internal.discovery.core.model.RemoteBundleDiscoveryStrategy$DownloadBundleJob.call(RemoteBundleDiscoveryStrategy.java:221) at org.eclipse.mylyn.internal.discovery.core.model.RemoteBundleDiscoveryStrategy$DownloadBundleJob.call(RemoteBundleDiscoveryStrategy.java:1) at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303) at java.util.concurrent.FutureTask.run(FutureTask.java:138) at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) at java.lang.Thread.run(Thread.java:619)</description>
      <attachments/>
      <comments>3</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>276998</id>
      <title>it should be possible to specify a MarkupLanguageConfiguration using Ant tasks</title>
      <description>MarkupLanguageConfiguration is designed to facilitate language extensibility without subclassing a MarkupLanguage. This facility should be readily available from Ant tasks.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>276213</id>
      <title>add support for specifying Mylyn version constraint</title>
      <description>It is not uncommon for connectors to use Mylyn internals. It is recommended to specify a version constraint that is compatible to the corresponding major release version in that case, e.g. [3.1.0,3.2.0) for a connector that works with Mylyn 3.1. Once a newer Mylyn major release is available the version specified by the connector has to be updated and a new connector release is required. The discovery UI should support this scenario. I can see the following options: * The old Mylyn release should not allow installation of the new connector version: ** The discovery UI indicate that a Mylyn upgrade is required to install the connector. ** The discovery UI could support multiple versions of the same connector with different version constraints against Mylyn and allow installation of an old version of the connector. ** The connector could be hidden from the discovery UI * The new Mylyn release show not allow installation of the old connector: ** The discovery UI indicate that the connector is not available for the particular Mylyn release if it has not been updated for the release. ** The discovery UI could hide the old connector if it has not been updated for the Mylyn release. The version of the org.eclipse.mylyn_feature feature is representative of the installed Mylyn version.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>277344</id>
      <title>connector discovery does not display some connector attributes</title>
      <description>the following are not displayed: * license * provider</description>
      <attachments/>
      <comments>6</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>277507</id>
      <title>refine default WikiText fonts</title>
      <description>Assuming that the current stylesheet is not using a convention that's set in stone, I think that we should take a pass through the default fonts and colors used by the key block modifiers. h1. Heading 1 h2. Heading 2 h3. Heading 3 h4. Heading 4 h5. Heading 5 h6. Heading 6 pre. bla bla bla bc. bla bla bla bq. bla bla bla &gt; Task Editor quote http://hyperlink java.lang.NullPointerException at com.tasktop.internal.web.ui.editors.browser.TasktopBrowserViewer.setURL(TasktopBrowserViewer.java:710) at com.tasktop.internal.web.ui.editors.browser.TasktopBrowserViewer.setInitialURL(TasktopBrowserViewer.java:747)</description>
      <attachments/>
      <comments>16</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>277910</id>
      <title>use dialog font for discovery wizard</title>
      <description>The discovery wizard should use the dialog font for all controls. Screenshot: https://bugs.eclipse.org/bugs/attachment.cgi?id=136766.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>277889</id>
      <title>discovery connectors should be able to declare themselves as more than one kind</title>
      <description>Currently connectors can declare themselves as one of task, document, or vcs. Since connector descriptors describe a feature, it makes sense that a single feature could cover one or more of these.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>278250</id>
      <title>WikiText supports XSL-FO as an output format</title>
      <description>WikiText supports "XSL-FO":http://en.wikipedia.org/wiki/XSL_Formatting_Objects as an output format. XSL-FO is suitable for conversion to other formats such as PDF.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>278331</id>
      <title>present discovery wizard content before verifying availability</title>
      <description>Update site availability verfication to be performed after descriptors are displayed. Initially connectors are to be displayed disabled, enabled incrementally as availability is determined. 'Finish' button to remain disabled until all availability checks have been performed.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>278330</id>
      <title>warning overlay on connectorDescriptor icon</title>
      <description>for descriptors that don't appear to be available</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>278315</id>
      <title>add relevance value to listings</title>
      <description>There are a couple of use cases for non-alphabetical sorting for the Eclipse listing, and in general it seems like it would be helpful. * We need the "Eclipse" listing to be on top, and currently "Community" sorts first. * Within the "Eclipse" listing we will want to sort things by relevance, e.g., sorting incubation items last if we add them. I suggest we add a "group" concept for categories, and allow connectors to specify which group they belong to. Anything not in a group gets listed last. For "Eclipse", we would define "features", "bridges" and "connectors" groups, which would be sorted in the order they are defined.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>276235</id>
      <title>create Mylyn discovery site content</title>
      <description>Mylyn should provide initial content for the discovery site for the 3.1M2 release, e.g.: JIRA, Trac and XPlanner. It also needs to be determined where the site plug-in is managed in cvs and how its deployment is integrated into the build process.</description>
      <attachments/>
      <comments>21</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>278319</id>
      <title>add tests for Discovery</title>
      <description>* network-based unit test * system test</description>
      <attachments/>
      <comments>24</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>278684</id>
      <title>WikiText (Standalone) Ant task relies on default encoding when reading files</title>
      <description>I had some problems with the Standalone Wikitext component to convert UTF-8 ecndoded @.textile@ files to @.html@. Umlaute weren't properly encoded. I suspected that that underlying @Reader@ didn't use the proper encoding, so I checked out the source In fact the ant task uses &lt;code&gt; Reader r = new InputStreamReader(new BufferedInputStream(new FileInputStream(inputFile))); &lt;/code&gt; to "determine" the encoding of the file. It therefore falls back to some default encoding. It would be a nice addition to the ant task, if the user could set the encoding of the input files via a task attribute, like @inputEncoding@ For example &lt;code&gt;&lt;pre&gt; &lt;wikitext-to-html markupLanguage="Textile" inputEncoding="UTF-8"&gt; ... &lt;/wikitext-to-html&gt; &lt;/pre&gt;&lt;/code&gt; The @fullyRead()@ method than has to rely on the getter method getInputEncoding() to return the given encoding (or fall back to default encoding). That way a user has more control/choice over the encoding of his files. On a sidenote: The default encoding on my machine is UTF-8 (OSX 10.5) but the ant task still creates files that aren't properly encoded. I was surprised that @Systems.getProperty("file.encoding")@ reports _"UTF-8"_ while @new InputStreamReader(new ByteArrayInputStream(new byte[0])).getEncoding()@ reports _"UTF8"_ Not a huge difference, but I expected the same String. It made me suspicious though if other platforms have bigger differences on what they report.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>279544</id>
      <title>add a "Learn More" link to connector categories</title>
      <description>Currently, only the connector entries have a "Learn more..." link. It would be helpful if categories had a similar link so more information could be provided about the purpose or significance of a category.</description>
      <attachments/>
      <comments>21</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>280614</id>
      <title>Add API Tools Nature</title>
      <description>It's sad that wikitext isn't taking advantage of PDE API Tools. Can you please use API Tools :)?</description>
      <attachments/>
      <comments>11</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>280832</id>
      <title>end support for Eclipse 3.3</title>
      <description>Mylyn currently supports three different Eclipse platform versions: 3.3, 3.4 and 3.5. With the Eclipse Galileo release support for Eclipse 3.6 will be added. Due to the way Mylyn's integrates with the platform it is not always possible to solely rely on API and a number of Mylyn plug-ins have been branched for Eclipse 3.3 to account for changes in the platform. In other places reflective code is used to make the implementation work across all supported Eclipse versions. The maintenance of branches, reflective code, multiple update sites and testing on different Eclipse versions imposes significant overhead on Mylyn committers. Feedback from the Mylyn community suggests that Eclipse 3.3 usage has decreased significantly and major Eclipse based product and distributions have moved to Eclipse 3.4 at this point. In order to reduce the maintenance overhead it is planned to end support for Eclipse 3.3 starting with Mylyn 3.3. In addition this will enable Mylyn to take advantage of platform enhancements added in Eclipse 3.4.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>281524</id>
      <title>Enhanced DocumentBuilder</title>
      <description>We are using the wikitext component for one of our projects. One task is to build a special DocumentBuilder for our output format. The document structures that can be build are limited by the BlockTypes or SpanTypes. We would need some more types to build more complex document structures, especially tables. So additional BlockTypes like CAPTION, TGROUP, THEAD, TBODY, TFOOT would be welcome. Also I'am missing a property in the ListAttributes class, a property "type" of String type.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>283328</id>
      <title>Add MediaWikiFetcher to mediawiki.core</title>
      <description>There are people interested in generating documentation from Eclipseapedia. By generating documentation from a wiki, it lowers the barrier to entry for people to participate in the documentation process. I was attempting to do this by following the Mylyn help bundle but came across an issue where the 'mediawiki-fetch-images' ant task was nowhere to be found. It happened to be in the mylyn.help.ui bundle which wasn't where I expected it. I expected it to be in the mediawiki.core bundle. I will attach a patch that makes this happen. Do people agree? -- Configuration Details -- Product: Eclipse SDK 3.5.0.v200906111540 (org.eclipse.sdk.ide) Installed Features: org.eclipse.mylyn_feature 3.2.1.I20090701-2200-e3x</description>
      <attachments/>
      <comments>23</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>290961</id>
      <title>Locale support for wikitext</title>
      <description>User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1.3) Gecko/20090910 Ubuntu/9.04 (jaunty) Shiretoko/3.5.3 Build Identifier: 1.1.1.v20090722-0200-e3x it would be nice having support for different languages in markup conversion ie supporting the different quotation marks in different languages (ie in german &amp;#8222; is used as left quotation mark instead of english &amp;#8221;, see http://en.wikipedia.org/wiki/Quotation_mark_glyphs). For this, MarkupParser should be extended with a set/getLocale to select the requested language and so ie TextileLanguage.addStandardTokens() could use different tokens depending on the Locale set. Reproducible: Always</description>
      <attachments/>
      <comments>10</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>290015</id>
      <title>[editor/preview] preview should update the view at least on resource change</title>
      <description>WHAT the preview of the wiki text seems not to get updated on resource changes STEPS 1. opened the editor for the same (.mediawiki) file 2x 2. put the editors side by side 3. E1 is in source, E2 is in preview mode 3. perform changes in E1 and save them =&gt; changes are not reflected in the previewing editor not even a refresh will do it, which seems to not work at all producing a blank page in any case (s.o. care to open a diff. bug for this one?) WANTED refresh the preview on safe event of resource better: do on the fly updates even w/o saving the resource. org.eclipse.mylyn.wikitext_feature_1.1.1.v20090722-0200-e3x</description>
      <attachments/>
      <comments>7</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>294383</id>
      <title>WikiText: add configuration option to wikitext-to-html ant task to disable writing DOCTYPE declaration</title>
      <description>I'd like to add configuration option to avoid writing DOCTYPE declaration into generated xhtml file. I am processing generated file with XSLT tools, and XML parser is trying to fetch specified dtd file. While it would be possible to configure xml catalog, this is notoriously hard in Java, and it's much simpler to just avoid writing doctype in the first place. This is possible thanks to not using entities in generated xhtml.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>293066</id>
      <title>Reusable WikiText editor</title>
      <description>Currently it's very difficult to reuse the Mylyn WikiText editor without using internal API. An editor can be assembled without using internals by using MarkupSourceViewer and MarkupSourceViewerConfiguration, however there are several concerns that should be addressed in order to create a full-featured editor that are not readily reusable without significant effort and/or use of internals: * outline * preview * non-resource editor input * enabling commands * integration with services (IFocusService, IContextService, IHandlerService) With this enhancement Mylyn WikiText would provide reusable components and API that facilitate creating an editor with minimal effort, supporting flexible configurations such as: * multipage editor integration * form integration * with or without outline * with or without preview ** flexible preview configuration, such as tab-based, stack-layout, toggle action/command etc. The implementation should consider making it easier to consume Mylyn WikiText in an RCP environment, see bug bug 273013</description>
      <attachments/>
      <comments>22</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>293250</id>
      <title>provide a help anchor in TOC for connectors</title>
      <description>User-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 Build Identifier: Please provide an anchor in the Task Repository Connector section of the Mylyn help centre, so that task repository connector providers can add their help in the appropriate and most logical place. Reproducible: Always</description>
      <attachments/>
      <comments>13</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>294991</id>
      <title>Update MediaWikiImageFetcher task to use MediaWiki API to determine image URLs</title>
      <description>The MediaWikiImageFetcher task could be improved by using the MediaWiki API that can be invoked via HTTP. A list of images in a page together with their URLs can be obtained by using something like: http://wiki.eclipse.org/api.php?action=query&amp;titles=Mylyn/User_Guide&amp;generator=images&amp;prop=imageinfo&amp;iiprop=url&amp;format=xml From bug 242979 comment #32</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>290026</id>
      <title>[Markup Editor] support for custom templates and autocl</title>
      <description>i'm starting to use the wiki editor and would wish for the following: a) i wanted to use the &lt;strike&gt; tag in mediawiki and being lazy i thought the editor would close it with strl+space (content assist) but unfortunately it doesnt. b) so i wanted to add a custom template for this and found that the editor doesnt support custom templates, as far as i can tell.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>299697</id>
      <title>[editor] implement preference to enable current line highlight in task editor</title>
      <description>A preference is to be added to enable current line highlight, default value false. The preference should appear under *Tasks -&gt; Task Editing* in the Eclipse preferences. WikiText task editor extension to be modified to use this preference for enabling current line highlight. After this enhancement current line highlight will be disabled by default in the task editor when WikiText is used. Enhancement based on conference call discussion.</description>
      <attachments/>
      <comments>11</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>299669</id>
      <title>show wikitext strikethrough style in editing mode</title>
      <description>-Strikethroughs- are are useful facility, perhaps particularly so when it comes to to editing tasks. What makes them less useful is that they are hard to notice in editing mode. If straightforward, I think that it would be useful to have this rendered.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>299838</id>
      <title>Generation of Eclipse Help content from a MediaWiki</title>
      <description>Enable Mylyn WikiText users to specify a set of MediaWiki pages to be converted to Eclipse help format. Currently Mylyn WikiText users can easily convert a single page to Eclipse Help, however it's somewhat limiting in that all help content must be on a single wiki page. With this feature, users will be able to specify a set of wiki pages from which to generate help content. relevant issues: * bug 283734: Documentation Best Practices * bug 214139: Tool to create Eclipse documentation plug-ins from subset of Eclipse wiki An initial implementation could take the form of an Ant task.</description>
      <attachments/>
      <comments>20</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>302081</id>
      <title>[MediaWiki] Implement commonly-used templates</title>
      <description>Commonly-used templates in Eclipsepedia include bug templates, for example: @{{bug|244618}}@ See "Most Used Templates":http://wiki.eclipse.org/Special:Mostlinkedtemplates for a list of the most relevant ones.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>303234</id>
      <title>hyperlink detector doesn't always correctly detect JIRA issue hyperlinks</title>
      <description>NB-729 is detected, but if preceded with '(' it is not -- for example (NB-729) is not detected, but ( NB-729) is.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>303053</id>
      <title>Support links between WikiText source files</title>
      <description>Build Identifier: 20090920-1017 It would be nice if WikiText behaved like this: (a) Links are highlighted and "control-clickable" in the "Textile Source" view. (b) Both in "Textile Source" and "Preview" mode, following a link to a textile file should open the linked file in a wikitext editor. (Ideally the link target would be opened in source mode if we come from source mode and it would be opened in preview mode if we come from preview mode. But that's a detail that's not too important.) (c) When foo.textile and bar.textile are converted to foo.html and bar.html then the corresponding link in foo.html should point to bar.html. Of course textile and html are only examples here. The same holds, e.g., for mediawiki and PDF. Items (a) and (b) would give WikiText the feel of an "interpreted" language where you need no explicit "compilation" step to HTML. This makes it easy to use and extend wiki files at the same time. Item (c) allows to do the compilation nevertheless when needed. Some details: - I'm currently using Mylyn WikiText 1.2.0.v20091215-0000-e3x - See also this forum discussion: http://www.eclipse.org/forums/index.php?t=msg&amp;th=162405&amp;start=0&amp; Reproducible: Always Steps to Reproduce: 1. Have two files foo.textile and bar.textile in the same directory. 2. Let the file foo.textile contain a link "bar":bar.textile 3. Open foo.textile and use the "Textile Source" view. 4. Notice that the link is neither highlighted nor does it act as a link. 5. Switch to "Preview" mode. 6. Notice that "bar" now is a link. 7. Click the link. 8. Notice that bar.textile is opened in a browser tab rather than a wikitext editor tab. So you cannot edit bar.textile here.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>304871</id>
      <title>[releng] set up a sandbox for Mylyn WikiText</title>
      <description>Initially we'll need the following: * o.e.m.wikitext.sandbox.ui bundle * o.e.m.wikitext.sandbox_feature bundle * changes to include the sandbox feature in the sandbox update site * commit rights for David Green on the sandbox</description>
      <attachments/>
      <comments>20</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>312153</id>
      <title>CollabNet TeamForge Wiki markup not supported</title>
      <description>Build Identifier: M20090917-0800 CollabNets TeamForge uses its own wiki markup language which is based on an old version of JspWiki (http://www.jspwiki.org/). Although there is a Mylyn connector for TeamForge available, the wiki markup is not supported by WikiText yet. Reproducible: Couldn't Reproduce</description>
      <attachments/>
      <comments>8</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>312263</id>
      <title>[MediaWiki] Produce a table of contents in the HTML output</title>
      <description>The magic word __TOC__ (http://en.wikipedia.org/wiki/Help:Magic_words) has not been implemented in WikiText, though WikiText is quite capable of producing a table of contents in HTML. Please make this available in WikiText.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>321701</id>
      <title>[api] Support common keyboard commands for textual navigation</title>
      <description>OS X, GNU Readline, Emacs, and many other applications/platforms support a basic set of useful keyboard navigation meta-sequences, such as: * CTRL-E - go to end of line * CTRL-A - go to beginning of line * CTRL-F - go forward one character * CTRL-B - go backward one character * CTRL-H - delete backward from cursor one character * CTRL-W - delete backward from cursor one word * CTRL-U - delete backward from cursor to beginning of line * CTRL-K - delete forward from cursor to end of line * Up-arrow - go to beginning of line if first line of text * Down-arrow - go to end of line if last line of text .. and so on. Mylyn's wikitext task editor does not support these sequences/shortcuts and it results in a significantly worse experience than the JIRA web application offers. The web application does not actually do anything special, it simply allows the OS X support for these sequences to pass through when typing in a textfield. It's understood that some of these commands will have collisions with existing keyboard shortcuts (e.g.: CTRL-H) I would set this up myself as a custom configuration in Preferences-&gt;Keys, but many of the movements/commands mentioned above are not even listed there. Please consider providing such support, thanks.</description>
      <attachments/>
      <comments>36</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>331065</id>
      <title>improve Bugzilla client error handling and error messages</title>
      <description>Bugzilla provides an HTML message in a tag identified by id 'error_msg'. It's possible to improve error handling to use IStatus.ERROR instead of IStatus.INFO and provide a more descriptive message in some cases.</description>
      <attachments/>
      <comments>18</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>319977</id>
      <title>wikitext-to-eclipse-help for Trac doesn't support images</title>
      <description>Using wikitext-to-eclipse-help ant task with markupLanguage="org.eclipse.mylyn.wikitext.tracwiki.core.TracWikiLanguage" doesn't handle [[Image(your_image_name]] properly. a href tag is created (not proper though) when img tag is supposed to be created.</description>
      <attachments/>
      <comments>17</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>327518</id>
      <title>WikiText should support overstrike syntax for Trac wiki</title>
      <description>Currently the overstrike syntax "~~XXX~~" is not supported for WikiText Trac syntax. Please add support for it. Does this also apply for other WikiText languages? -- Configuration Details -- Product: Eclipse 1.3.0.20100617-0521 (org.eclipse.epp.package.jee.product) Installed Features: org.eclipse.mylyn_feature 3.4.0.v20100608-0100-e3x</description>
      <attachments/>
      <comments>5</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>302616</id>
      <title>Ease wikitext ant tasks usage in Eclipse</title>
      <description>Cloned from: bug 273325: Ease wikitext ant tasks usage in Eclipse https://bugs.eclipse.org/bugs/show_bug.cgi?id=273325 _This change has introduced an issue running wikitext Ant tasks from within Eclipse in the same VM as the workbench._ Wikitext ant tasks should use org.eclipse.ant.core.antTasks and org.eclipse.ant.core.extraClasspathEntries extension points so these tasks can be freely used in Eclipse. Attached patch is doing all the things to make the wikitext tasks available to ant editor completion and ant classpath is set so the tasks work. The patch is doing the following: 1. Extract ant tasks to a separate src_ant source folder. 2. Adds a custom builder to build the ant tasks library. 3. Adds all tasks to the org.eclipse.ant.core.antTasks and the new library to the org.eclipse.ant.core.extraClasspathEntries extension points. 4. Other project settings changes needed. This work is based on the org.eclipse.equinox.p2.publisher way of adding its ant tasks.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>334721</id>
      <title>[api] determine the task for which an AttributeEditor control is used</title>
      <description>It would be great if it were possible to know the TaskData for controls created when using @org.eclipse.mylyn.tasks.ui.editors.AbstractTaskEditorExtension@. This would enable task editor extensions to provide commands that relate to the task for which the extension was used. See the attached patch</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>339777</id>
      <title>fill empty context from stack trace when task is activated</title>
      <description>Task activation with an empty context should create a context from information available on the task, such as a Java stack trace.</description>
      <attachments/>
      <comments>15</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>349726</id>
      <title>[textile] table of contents should include a CSS class to facilitate styling</title>
      <description>When using Textile markup, WikiText extends Textile with the following bc. {toc} the emitted table of contents can include a list-style as follows: bc. {toc:style=circle} however there is no way to affect the CSS class in the ouput. With this enhancement, a CSS class can be specified as follows: bc. {toc:class=tableOfContents} if unspecified, the class should default to "toc".</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>349724</id>
      <title>Support or at least omit &lt;source&gt; sections</title>
      <description>The eclipse wiki has the wikimedia syntax highlighting extension installed. This allows you to write blocks like this: &lt;source lang="javascript"&gt; var serviceImpl = { run: function(text) { return text.split("").reverse().join(""); } }; &lt;/source&gt; And have it syntax highlighted like javadoc. Currently WikiText converts this to: &lt;p&gt;&amp;lt;source lang="javascript"&amp;gt;&lt;/p&gt; &lt;pre&gt; var serviceImpl = { run: function(text) { return text.split("").reverse().join(""); } }; &lt;/pre&gt; &lt;p&gt;&amp;lt;/source&amp;gt;&lt;/p&gt;</description>
      <attachments/>
      <comments>15</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>336592</id>
      <title>XslfoDocumentBuilder should be able to generate a bookmark tree</title>
      <description>XSL:FO and PDF both have a feature that allows you to build a document tree or table of contents. In the rendering application this usually shows up as a tree structure that can be used for navigation. The XslfoDocumentBuilder should be able to generate the code for this if a table of contents is available. See http://www.w3.org/TR/xsl/#d0e14206 for more information.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>336683</id>
      <title>XslFoDocumentBuilder should allow for basic page styling</title>
      <description>The XslFoDocumentBuilder is rather limited when it comes to page styling. At least some of the properties available should be supported so that users can define various page sizes, regions and margins. We should allow for the following properties to be set on *simple-page-master*: * page-width * page-height * margin-top * margin-bottom * margin-left * margin-right * reference-orientation The following properties should be allowed on *region-body* inside of *simple-page-master*: * margin-top * margin-bottom * margin-left * margin-right And we should allow for the following elements inside *region-body* * region-before (extent &amp; precedence) * region-after (extent &amp; precedence) * region-start (extent &amp; precedence) * region-end (extent &amp; precedence)</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>354386</id>
      <title>[search] error loggen when starting Eclipse</title>
      <description>This error is logged when I start Eclipse: !ENTRY org.eclipse.ui.workbench 2 0 2011-08-10 11:44:08.294 !MESSAGE A handler conflict occurred. This may disable some commands. !SUBENTRY 1 org.eclipse.ui.workbench 2 0 2011-08-10 11:44:08.294 !MESSAGE Conflict for 'org.eclipse.mylyn.internal.sandbox.search.ui.openDesktopSearchCommand': HandlerActivation(commandId=org.eclipse.mylyn.internal.sandbox.search.ui.openDesktopSearchCommand, handler=org.eclipse.mylyn.internal.sandbox.search.ui.OpenDesktopSearchHandler, expression=,sourcePriority=0) HandlerActivation(commandId=org.eclipse.mylyn.internal.sandbox.search.ui.openDesktopSearchCommand, handler=org.eclipse.mylyn.internal.sandbox.search.ui.OpenDesktopSearchHandler, expression=,sourcePriority=0)</description>
      <attachments/>
      <comments>7</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>354430</id>
      <title>[search][api] provide API to enable programatic creation of desktop search queries</title>
      <description>currently there is no way to programatically create a search using the new desktop search functionality. API should be provided to enable programatic creation/execution of searches.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>357294</id>
      <title>[api] provide API for converting content to wiki markup</title>
      <description>API is needed to convert content to wiki markup. Content source format could be HTML, other markup languages, or some arbitrary format. DocumentBuilder provides a great API and abstraction for driving content generation in the target output format. By using this common API, 3rd parties would be able to support new source formats simply by implementing a parser driving the document builder API. The current use case it to target Textile markup, however targeting other markup languages could also be needed. Each target output format would need its own implementation of DocumentBuilder in much the same way as we have subclasses for all of the currently supported output formats (such as HTML, Dita, DocBook, XSL-FO).</description>
      <attachments/>
      <comments>17</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>359518</id>
      <title>[api] provide extension point to register alternative task list search implementation</title>
      <description>it would be great to provide an internal extension point for task list extensibility that would enable task list search to match against more than just the label.</description>
      <attachments/>
      <comments>20</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>362732</id>
      <title>support incremental find in WikiText task editor extension</title>
      <description>Text editors (such as the WikiText file editor) provide incremental search, usually associated with CTRL+J. When using the WikiText task editor extension, the task editor should provide this functionality for editable descriptions, new comments, and existing comments.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>364776</id>
      <title>MarkupTaskEditorExtension should implement IAdaptable, adapt to MarkupLanguage</title>
      <description>MarkupTaskEditorExtension should implement IAdaptable, adapt to MarkupLanguage</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>364874</id>
      <title>[api] provide API for creating a MarkupLanguageConfiguration suitable for use with a task repository</title>
      <description>provide API for creating a MarkupLanguageConfiguration suitable for use with a task repository, similar to @org.eclipse.mylyn.internal.wikitext.tasks.ui.util.Util@</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>365224</id>
      <title>make it easy to create a TaskListIndex that indexes a subset of tasks in the task list</title>
      <description>The @TaskListIndex@ by default indexes all tasks in the task list. In some cases it's useful to be able to index a subset of tasks, for example only those tasks belonging to a specific query. With this enhancement, @TaskListIndex@ will be enhanced to facilitate an index over a subset of tasks in the task list.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>193849</id>
      <title>allow filtering of completed tasks open task dialog</title>
      <description>The list of tasks displayed in the dialog can be very long when the task list has accumulated many tasks over time. It would be great if there was a way to toggle the list with a short cut to filter all completed tasks.</description>
      <attachments/>
      <comments>41</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>203796</id>
      <title>shortcut to copy attachment url to the clipboard</title>
      <description>It would be really handy to have an option to copy url for selected attachment to the clipboard. Currently I have to switch to the web UI to get that url.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>206970</id>
      <title>render quoted comments in a different color</title>
      <description>In bugzilla 3.0 web UI, quoted comments are shown in a different color: " &gt; This is rendered in a different color. This is rendered in the default comment color." I like it. It helps my eyes in long discussions. Task editor could render the same way.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>203602</id>
      <title>crop selection in the capture screenshot should be resizeable</title>
      <description>crop selection in the capture screenshot should be resizeable, so it will be easier to adjust it to the right size/position instead of recreating it every time</description>
      <attachments/>
      <comments>18</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>195691</id>
      <title>allow users to mark up screenshots</title>
      <description>When attaching screenshots to bugs it would be very useful to allow users to mark up the screenshot with a pen-like tool that allows the to circle or highlight items. Optionally we could also provide them with a text tool, but a pen tool should be sufficient.</description>
      <attachments/>
      <comments>63</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>215071</id>
      <title>report as Bug should include subentries too</title>
      <description>Sometimes entries in the error log as made by an entry with a simple message, and many subentries with more detailed stack traces, etc. The report as bug action should include the subentries too, if you invoke it from a top-level entry. Actually it is hard to report if you have many subentries because you would have to manually copy each of them.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>168377</id>
      <title>Show attachment size in editor</title>
      <description>Show attachment size column on attachment table from bug editor.</description>
      <attachments/>
      <comments>27</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>217344</id>
      <title>open task dialog should filter according to the currently active task working set</title>
      <description>The "Open Task" dialog should have option to respect currently active task working set. It should work for "Open Task", "Activate Task" and "Copy context to..."</description>
      <attachments/>
      <comments>15</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>231033</id>
      <title>provide keyboard shortcuts that are consistent with other eclipse shortcuts.</title>
      <description>3.4m7a I'm using Mylyn-2.3.2 The keyboard shortcut to open a tasks view is SHIFT+ALT+Q, K. The other keyboard shortcuts are of the form (ALT+COMMAND+Q, X) or (ALT+CTRL+Q, X) The keyboard shortcut sequence should be M3+M1+Q K. Requesting to make it consistent. Such inconsistencies are difficult for keyboard users who are accustomed to using the keyboard shortcuts. Attachment follows</description>
      <attachments/>
      <comments>5</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>189518</id>
      <title>support import/export of Task List queries</title>
      <description>I would like to set up a list of queries and then share them with my team easily like the contexts are. If I make the list I know includes everything that my developers should be looking at then my developers should not have to re-create those queries. Might want to distinguish between a team query list and a personal query list. But in a team enviroment the vast majority of the view into the system should be seen in the same way by each developer.</description>
      <attachments/>
      <comments>50</comments>
      <commenters>7</commenters>
    </issue>
    <issue>
      <id>189514</id>
      <title>allow import/export and cloning of queries</title>
      <description>I want to create queries that are all similar. The only difference is the fix version. I have to create new queries each time and it would be nice to clone, change the bits I want and continue.</description>
      <attachments/>
      <comments>15</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>196683</id>
      <title>support queries importing/exporting by drag&amp;drop</title>
      <description>As requested in Bug 189518, it should be possible to export and import a query by dragging out/exporting it to the file system and importing the query by dropping it back to the task list.</description>
      <attachments/>
      <comments>18</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>203140</id>
      <title>[api] provide support to remove the attributes section from the task editor</title>
      <description>I am writing a simple repository connector that I want to streamline to look like the local task editor. Currently, all of sections and their headings can be removed by overriding the api except for the attributes section. Can support be added for overriding the creation of the attributes section so that it doesn't get created if the repository doesn't have any attributes to display there?</description>
      <attachments/>
      <comments>8</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>194269</id>
      <title>display existing comments in HTML</title>
      <description>display existing comments of a Trac ticket in HTML format to render the wiki markup.</description>
      <attachments/>
      <comments>23</comments>
      <commenters>7</commenters>
    </issue>
    <issue>
      <id>198017</id>
      <title>Provide a selection dialog to select a Wiki page for editing</title>
      <description>Provide a selection dialog to select a page for editing (the page could be opened in a browser as first pass). The dialog is opened through a context menu in the Task Repositories view, which lists all Wiki pages on the selected task repository if the repository has Wiki support, e.g. a Trac repository.</description>
      <attachments/>
      <comments>18</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>276113</id>
      <title>allow typing in task data directory field</title>
      <description>I know my task data directory -- it's independent of my workspace -- and I'd like to be able to edit the preset directory name that's present. Unfortunately, I have to go through the file chooser dialogue to pick it and that's annoying :) Can we make that field editable?</description>
      <attachments/>
      <comments>10</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>321672</id>
      <title>[web connector][sandbox] query template for Sourceforge not uptodate</title>
      <description>The built-in query pattern of the WebConnector plugin no longer works with the current SourceForge tracker. The following one does work: &lt;a href="/tracker/\?func=detail&amp;aid=({Id}.+?)&amp;group_id=${group_id}&amp;atid=${atid}"&gt;({Description}.+?)&lt;/a&gt; Also, the default project (Azureus) for which the project id is provided no longer has such a tracker. It would be nice if a wizard could guide through the creation of sourceforge connecter. That way there wouldn't be any need for a default project. -- Configuration Details -- Product: Eclipse SDK 3.6.0.v201006080911 (org.eclipse.sdk.ide) Installed Features: org.eclipse.mylyn_feature 3.4.0.v20100608-0100-e3x</description>
      <attachments/>
      <comments>7</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>349003</id>
      <title>support opening multiple tasks at once</title>
      <description>It would be nice to be able to open multiple tasks at once in the Open Task dialog (Ctlr+F12). It would be consistent with other Eclipse dialogs (eg. Ctrl+Shift+R).</description>
      <attachments/>
      <comments>8</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>198213</id>
      <title>query wizard: accessibility improvements. make it keyboard only usable</title>
      <description>using the new query wizard it is not possible to use keyboard navigation to for example select query from existing url. Adding mnemonics to the choices will make keyboard navigation possible.</description>
      <attachments/>
      <comments>23</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>272406</id>
      <title>[api][editor] provide means for adding contributions to the shared header toolbar of the task editor</title>
      <description>reusing org.eclipse.ui.menus extension point</description>
      <attachments/>
      <comments>18</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>262799</id>
      <title>add ability to log work in Jira</title>
      <description>Currently, mylyn tracks your elapsed time spent, and the Jira connector displays the time spent (from the jira server) in the attributes table. However, there doesn't seem to be a way to actually log the time spent back into jira from mylyn, and so the user has to drop out to a web browser and enter the time manually. This should be integrated on the jira screen.</description>
      <attachments/>
      <comments>20</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>272590</id>
      <title>expose migration of tasks</title>
      <description>The functionaliyt of migrating from an old task to a new task (as, for example used when first submitting a task, or in the send to action) should be exposed so it can be reused.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>284172</id>
      <title>[api] provide access to progress monitor to allow monitoring synchronization jobs in progress</title>
      <description>Similar to bug 265565 (where we mistakenly stated in the description it is about SynchronizatioJob when it was about SubmitJob) we should provide the same means for SynchronizationJob. from the 265565 description: When scheduling a SynchronizeQueryJob from a UI component, such as a report, view, etc. there is no existing API available to access the progress of this synchronization which is relevant to the report, view, etc. It would be helpful if SynchronizeQueryJob (and other sync jobs) had API to access the progress monitor of the job. This way the view or page owner could report the progress to the user.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>281685</id>
      <title>[framework] improve error messages and documentation</title>
      <description>Created attachment 140250 [details] jira_wizard_01.jpg Build ID: M20090211-1700 Steps To Reproduce: Just two examples for two use cases, one is with JIRA Mylyn Connector, one is with Css Mylyn Connector: In JIRA Mylyn Connector I got the following Usability Bugs: 1. After the JIRA Mylyn Connector is installed, I add Jira as additional task repository: Open "Task Repository" Eclipse view -&gt; In the moment that you open the dialog window "Add Task Repository" for Jira, the user gets an error message without doing anything (see screen jira_wizard_01.jpg in Attachment). It doesn't conform to normal user expectation because the user should not be indicated with an error at very beginning. They should be helped with a prompt. 2. On the other hand, A prompt should be shown in this situation instead of an error message before the user try to enter the username and password (see screenshot jira_wizard_02.jpg in attachment). 3. After I give the details in the properties for task repository, the prompt in header "Example: http: ..." doesn't make sense to me (see jira_wizard_03.jpg). If the prompt doesn't make sense to user, please leave it. 4. The same like the error message in the dialog "Bad envelope tag: HTML" ( see screenshot jira_wizard_05.jpg). Again as user I can not get any hint from this message what I should do as next. 5. On the other hand, the question marks in two dialogs doesn't work because we don't have relevant help documentation for this issue. Please provide some documentation for us with regard to Mylyn documentation issue. Without documentation the user can not go on working. The same happens with CSS Mylyn Connector: 1. In the dialog "edit repository qery", we need also help documentation to make the help work. (wizard_05.jpg). In the dialog "edit repository query" , the prompt "If at tributes ..." doesn't make sense to me (see attachment wizard_06.jpg). Based on the dialog, I can't even find an update button in wizard. Please correct the prompt in header and provide us the Mylyn doucmentation with regard to this functionality, so we can integrate this in our help functionality and make them work. 2. I got an "unmatched" task list after I loaded my CSS (see wizard_07.jpg).From the "terminology" I can not understand what is exactly not matched. It can be very helpful for the user to find out why some task lists are unmatched. Can you make the terminology a little bit clear. regards, Ning More information:</description>
      <attachments/>
      <comments>20</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>285793</id>
      <title>setup JIRA 4.0 server for testing</title>
      <description>Run the Mylyn test suite against the latest beta release of JIRA 4.0.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>287226</id>
      <title>refactor bugzilla unit tests to test repository passed in from test harness</title>
      <description>The test harness should supply the identity of the server being tested, individual tests should then run against this repository.</description>
      <attachments/>
      <comments>14</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>290202</id>
      <title>[releng] update test infrastructure to JIRA 3.13.5 and JIRA 4.0.0-rc1</title>
      <description>Tests should run against the latest available releases of JIRA. As part of this a JIRA 3.7 repository should be installed which is the earliest JIRA version that is officially supported.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>297254</id>
      <title>[api] allow disabling of repository creation for a connector</title>
      <description>Sometimes a connector has a reason to prohibit the user from creating a task repository by itself (e.g. the connector manages it's task repositories some other way).</description>
      <attachments/>
      <comments>11</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>328183</id>
      <title>[build][hudson] group test results in junit view</title>
      <description>On big test runs the junit results are one long spaghetti of test cases. Maybe one could add the test suite hierarchy level again to add readability.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>328486</id>
      <title>make DefaultTaskSchema extensible</title>
      <description>Not sure if that's the correct usage, but I am thinking of using the DefaultTaskSchema, and wanting to extend it in a CustomTaskSchema with additional fields for my connector. For that, the DefaultTaskSchema needs small visibility modifications.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>332328</id>
      <title>[api] extend AttributeEditorToolkit to support control decorations for validation</title>
      <description>Add a utility method to AttributeEditorToolkit to support validation (see bug bug 329561): createValidator(AbstractAttributeEditor, Control control, IInputValidator) . The decoration should use the error message returned by the input validator.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>329575</id>
      <title>[api] task attribute type for double</title>
      <description>Create type and a task editor for double values. Potentially add input validation with decorator.</description>
      <attachments/>
      <comments>11</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>329577</id>
      <title>[editor] provide attribute editor for integer and double task attribute types</title>
      <description>Potentially add input validation with decorator.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>332236</id>
      <title>open bug from incoming changeset</title>
      <description>Use the mylyn commit message to provide a command for opening the task (if one can be parsed from the text), contribute to context menu in sync view / changeset presentation</description>
      <attachments/>
      <comments>7</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>335240</id>
      <title>DefaultTaskSchema missing CC attribute</title>
      <description>.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>351120</id>
      <title>include "pretty name" in person content assist</title>
      <description>Currently PersonProposalProvider only uses the identifier part in the content proposal. That means that if my id is "tehrnhoefer" but my pretty name "Thomas E", typing "thomas" wont include me in the list. I would assume most users would expect it to show up though. Also, repositories not having a user readable ID (e.g. an integer) will currently have a pretty useless "type &amp; filter" functionality</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>317890</id>
      <title>[hudson][build] support auto discovery of Hudson servers</title>
      <description>Hudson instances listen on UDP port 33848. Whenever a UDP packet is received, it will respond with a short XML fragment that shows the connection information: http://wiki.hudson-ci.org/display/HUDSON/Remote+access+API It would be nice if the Mylyn connector supported auto discovery and configuration of Hudson servers.</description>
      <attachments/>
      <comments>38</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>205124</id>
      <title>add inplace view for Active Search</title>
      <description>Added an inplace view for Active Search to test out a different UI. Related to bug 103728 but I used the PopupDialog class instead, based on the QuickOutlinePopupDialog class. I'll attach the patch and context soon.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>211101</id>
      <title>XPlanner's actual time setting should be able to use Mylyn's time tracking mechanism</title>
      <description>Basic description: XPlanner has an actual time setting in a task, that is currently allowed to be set in the XPlanner Mylyn connector using a single edit field. Since Mylyn has a mechanism for automatically tracking time spent working on a task, it should be possible to use that mechanism to automatically (or manually) update the actual time setting for an XPlanner task. This implementation could then be extended to something that could possibly be used by other Mylyn connectors. First thoughts for synchronization with Mylyn planning: 1. (probably obvious) If a connector supports estimated time/actual time settings, the Connector implementation should set these in Mylyn's planning for the task when the Mylyn task is first created for the connector task -- or if the connector supports only start/finish dates, these should be coordinated also. 2. I think there should be a checkbox in the editor (again, if time tracking is applicable to the connector) that would indicate whether the user wants actual time to be tracked by Mylyn automatically and set in the connector task, or whether the user will do it themselves manually -- using settings on the custom editor page for the connector -- big brother would be an option. 3. In XPlanner's case, as I mentioned, time is traced using time records that can be added multiple times until the task is finished. I am not sure how other systems track time, but I imagine, as you said also, some use a records implementation, and others have just a set "actual time" setting that can be modified. I am not sure whether it's worth actually displaying the time sections in record format on the custom editor page, since it would already be available in the planning page, and I don't think it's worth duplicating data. I think actual time should just automatically be updated (if user chooses option suggested in #2 above) and saved when the task is written back into the connector repository.</description>
      <attachments/>
      <comments>38</comments>
      <commenters>6</commenters>
    </issue>
    <issue>
      <id>226598</id>
      <title>move "Validate Settings" button to the lower-left of the dialog</title>
      <description>This should make it more prominent and make it look like it's an action over all of the settings instead of something embedded in the page. A concern I have is whether some users would think that this action would close the dialog. However, in search the "Customize..." left aligned action does not close the dialog, and neither does the little question mark. So we should be OK with this approach.</description>
      <attachments/>
      <comments>18</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>242445</id>
      <title>[api] update layout of repository settings page</title>
      <description>As per Mylyn conference call... User Credentials: * Move "Anonymous Access" checkbox to right of User Id field and rename to "Anonymous" * Move "Save Password" check box to right of password text box Http Authentication: * Move "Enabled" checkbox to right of User ID * Move "Save http password" to right of password field and rename to "Save Password" Proxy: * Move "enable proxy authentication" to right of host address * Move "Save Proxy Password" to right of password field and rename to "Save Password" Validate Button: * validate settings button moves to right of question mark (bottom left) * add "validate settings on close" check box under the "create new account" links</description>
      <attachments/>
      <comments>21</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>287949</id>
      <title>[web connector] Google code template doesn't include closed tasks</title>
      <description>SDK I20090803-1800 Mylyn 3.2.2.I20090819-0200-e3x The current template for Google code issues only lists open tasks instead of all tasks. Filtering should be done by mylyn, not by the bugtracker. In order to get all issues (open &amp; closed ones) you need to add another param to the issues url called "can" with value 1. I'm currently using this url to get all issues: ${serverUrl}/csv?can=1&amp;colspec=ID+Status+Type+Owner+Summary</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>310798</id>
      <title>[framework] allow hiding "Attach context" button</title>
      <description>It would be useful to hide the "Attach context" button the same way as with the submit button or private section (eg. AbstractTaskEditorPage#setNeedsAttachContext). There are connectors out there that do not support file attachements and the button in that case is pretty useless.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>246858</id>
      <title>[commons] provide delayed capture for screenshot attachment</title>
      <description>It would be nice to have a delayed capture mode for screenshot attachments. This would be allow to capture: * Modal dialogs * Selection text * Other dynamically displayed stuff, ie hovers etc which depend from the mouse position Expected behaviour: 1. Set capture delay to N seconds. 2. Press [Capture] 3. Open dialog or do anythings else... 4. Wait until time is over. 5. Current screen is captured, ie modal dialogs, selection etc. No idea whether this is technically possible, ie if a modal dialog is open.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>344083</id>
      <title>provide content assist for repository persons</title>
      <description>When adding a new reviewer, there should be a content assist available like in the task editor to quickly get the mail adress of a known person in this repository.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>271197</id>
      <title>support saving multiple attachments and remember target directory</title>
      <description>Hello, I'd like to contribute modifications to save attachment action in task editor. My goal was to implement following changes: * Support for saving multiple attachments at once to single directory * Remember previous directory Attached patch achieves above by: * extracting anonymous save action to new SaveAttachmentsAction * moving getAttachment method from TaskUiMenus to AttachmentUtil, creating new getAttachments, which returns list of selected attachments * SaveAttachmentsAction works as before if only one attachment is selected * If multiple attachments are selected, user is asked to choose destination directory. Code then checks target filenames (and asks user if he wants to overwrite existing files), and initiates DownloadAttachmentJob for each attachment * Target directory is remembered between action invocations (using preferences mechanism). Target directory is also used when doing single-attachment saving (ehnahcement of original code) Looking forward to your comments. Thank you, -Peter</description>
      <attachments/>
      <comments>16</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>281738</id>
      <title>add attachment section to task editor</title>
      <description>After patch #243645 it should be possible to enable the attachments section of the task editor and also add the screenshot facility. I have started working on this.</description>
      <attachments/>
      <comments>9</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>248057</id>
      <title>consider removing Current subsection</title>
      <description>I find that having the "Current" subsection under Comments offers little value but takes up space. How about this: - Group comments under Current directly under the Comments section - Modify the behavior of the "+" button on the comment section to expand all current comments on first click and all comments on subsequent clicks In addition to taking up less space this change would get rid of the "+" and "-" buttons on the subsection which I sometimes find easy to confuse with the buttons on the section header.</description>
      <attachments/>
      <comments>32</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>256841</id>
      <title>[context] enable more than one disableable filter</title>
      <description>Currently the Mylyn framework only supports one disableable filter, the interest filter. In many circumstances it would be helpful to have more than one filter that could be easily disabled.</description>
      <attachments/>
      <comments>12</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>246149</id>
      <title>delete task repository should delete the tasks and queries automatically</title>
      <description>Currently, when deleting a task repoistory, the user is just presented with a dialog telling them that they have queries and tasks that are still associated and need to be deleted before the repository can be deleted. Maybe we should consider having the delete task repository action support deleting all of the queries and the tasks for a repository so that it is easier for a user to delete a task repository.</description>
      <attachments/>
      <comments>22</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>279292</id>
      <title>allow comment filtering in the comments part</title>
      <description>Many repositories pollute the comments of a task with meaningless or repetitive comments. For instance, Bugzilla creates a comment when an attachment is added. Thus, certain attachment information is duplicated in the comment, such as the time the attachment was added. It would be great to be able to filter the comments before they are displayed by the default comment part for this reason.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>288347</id>
      <title>only update comment or reassign if this is the only change for the task</title>
      <description>User-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; pl; rv:1.9.0.13) Gecko/2009073021 Firefox/3.0.13 GTB5 Build Identifier: Currently if you edit a JIRA task and only edit a comment the whole JIRA issue gets updated - that causes some custom fields to be reset (check https://bugs.eclipse.org/bugs/show_bug.cgi?id=255854). JIRA has a nice API for adding only a comment and I think it would be right to use it in this scenario - it will probably improve performance, will be a good temporary workaround for https://bugs.eclipse.org/bugs/show_bug.cgi?id=255854. Reproducible: Always</description>
      <attachments/>
      <comments>18</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>255430</id>
      <title>more informative progress monitor when adding repository</title>
      <description>&gt;&gt; Mylyn downloads the entire repository configuration (Projects, &gt;&gt; Components, &gt;&gt; Versions, etc.). This can require a significant number of SOAP calls &gt;&gt; depending on the number of projects in our repository. Which dialog was &gt;&gt; missing the project indication? &gt; &gt; You mean progress indication ? &gt; &gt; Well there was progress indication, but it just said something like: &gt; &gt; "Repository xyz in progress..." and then a never ending progress bar. &gt; &gt; Maybe have the progress split up in tasks so you can see the actual % &gt; progress &gt; and/or update the text to say "Requesting project list..." -&gt; "Requesting &gt; components from Project X" -&gt; "Requesting versions from Project X" etc. &gt; &gt; Just so it doesn't look frozen</description>
      <attachments/>
      <comments>5</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>290490</id>
      <title>[editor] refresh attributes in Task Editor should only update the configuration for the selected task</title>
      <description>User-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; pl; rv:1.9.0.14) Gecko/2009082706 Firefox/3.0.14 GTB5 Build Identifier: If you hit this button in Task Editor whole metadata for the current repository is refreshed. I think we could improve it and refresh only metadata needed to properly render content of the editor/current task. This would decrease time user has to wait until she can edit the task again. Also I think it would be more intuitive. Reproducible: Always</description>
      <attachments/>
      <comments>14</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>290860</id>
      <title>only fetch configuration for projects as needed</title>
      <description>The download of repository configuration should be postponed to the point when a project is first selected in the query dialog or a new task is created for a project that is not yet cached.</description>
      <attachments/>
      <comments>16</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>344950</id>
      <title>DependsOn / NeededBy Sections should show the status of the other change</title>
      <description>Currently only change id, subject and user are shown.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>311966</id>
      <title>create XMLRPC operation for status transition</title>
      <description>bug#259291 adds support for version &lt;3.6 so we use this but to track the needed changes for the 3.6 version.</description>
      <attachments/>
      <comments>20</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>319295</id>
      <title>review custom workflow repository settings UI</title>
      <description>Current UI is difficult for users to understand, need to provide some pointer to docs.</description>
      <attachments/>
      <comments>17</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>348899</id>
      <title>[scm] provide core connector for Subclipse</title>
      <description>This task will keep track of the progress related to the implementation of the core connector for projects associated to the subclipse team provider. This will need a cq as subclipse is not an eclipse project.</description>
      <attachments/>
      <comments>23</comments>
      <commenters>4</commenters>
    </issue>
    <issue>
      <id>296441</id>
      <title>[key-binding] provide template for inserting id of activate task</title>
      <description>User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; de; rv:1.9.1.5) Gecko/20091102 Firefox/3.5.5 (.NET CLR 3.5.30729) Build Identifier: Hello, this was a feature-request from the qc-mylyn project (see https://sourceforge.net/apps/mantisbt/qcmylyn/view.php?id=47): "I would also advice some hotkey to give the current activated bug number, currently if don't display the task list i have no way of knowing which bug i'm working on, (so it would be nice maybe to add it to the title?)" My comment was: "I think this should be a mylyn feature request. Such a feature could be done with the content-assist too. Imagine you type "related to defect &lt;ctrl+space&gt;", then the shown list contains "all known" bugs, and the current bug is preselect." What do you think? Is there such a feature in mylyn? Regards Andreas Reproducible: Always</description>
      <attachments/>
      <comments>37</comments>
      <commenters>5</commenters>
    </issue>
    <issue>
      <id>326738</id>
      <title>[api][build] create startup extension for builds framework</title>
      <description>The startup extension should support auto discovery of servers and should be invoked when the builds integration is used for the first time, i.e. the builds view is made visible. This avoids have more than one startup extension and ensures lazy loading of plug-ins. IContextUiStartup implements a similar mechanism for the context framework.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>326736</id>
      <title>[api] move service message control into commons</title>
      <description>The service message control that is used in the task list to display notifications is potentially reusable by other bundles and should be available in the commons.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>326761</id>
      <title>service message control for the task list should use the commons version</title>
      <description>A common service message control has been implemented (bug 326736) and should be used instead of a private control.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>325079</id>
      <title>[build] Implement mechanism for service messages similar to the Task List</title>
      <description>The TasksView has a nice GUI for displaying service messages. There is also some fairly generic code for handling such messages. The BuildsView should have a similar mechanism for displaying service messages.</description>
      <attachments/>
      <comments>27</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>329897</id>
      <title>add configuration icon to service message dialog</title>
      <description>In order to make configuration of service messages more accessible we should add a new configuration icon to the message dialogs. When clicking this icon the "General &gt; Notifications" dialog will open on the appropriate item. See https://bugs.eclipse.org/bugs/attachment.cgi?id=182805 for example. Also see bug 327712.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>331432</id>
      <title>[commons] org.eclipse.mylyn.commons.notifications extension point is not documented</title>
      <description>In order to make this extension point ready for consumption it should be properly documented.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>330064</id>
      <title>[commons] allow disabling and enabling notifications for certain event types</title>
      <description>Currently it is only possible to globally enable/disable notifications. It should be possible to enable or disable notifications for certain event types using the preference page under General &gt; Notifications. See bug 272189.</description>
      <attachments/>
      <comments>8</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>331424</id>
      <title>[commons][api] When declaring a notification sink it should be possible to specify which event types to display</title>
      <description>Using the build service messages as example we have two types of events and two corresponding sinks. Normally we would want the build service events to show up in the builds view and the build plan events in the notification pop-ups. Because of ongoing improvements to the notification API it is possible for the user to specify which events to display where. By default all events are displayed everywhere as we currently have no means to do otherwise. Hence it should be possible to specify which event types to display by default when declaring a sink. Allowing a wild-card would also be useful. If we for instance want all builds notifications in the pop-up we could declare it something like this: &lt;extension point="org.eclipse.mylyn.commons.notifications.notifications"&gt; &lt;sink class="org.eclipse.mylyn.internal.commons.ui.notifications.popup.PopupNotificationSink" id="org.eclipse.mylyn.commons.notifications.sink.Popup" label="Desktop Popup"&gt; &lt;include&gt; &lt;event match="org.eclipse.mylyn.builds.ui.events.*"/&gt; &lt;/include&gt; &lt;/sink&gt; &lt;/extension&gt; Or if we just want the build plan events: &lt;include&gt; &lt;event match="org.eclipse.mylyn.builds.ui.events.PlanStatusChanged"/&gt; &lt;/include&gt; It should be possible to use regular expressions in the "match" clause.</description>
      <attachments/>
      <comments>13</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>333148</id>
      <title>Build server tooltip should show a summary of build plan statuses</title>
      <description>Currently the tooltip does not reveal much information. I think it would be useful if the tooltip would show a summary of the build plans.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>330908</id>
      <title>Preference settings should allow hiding of the build server URL</title>
      <description>As we're already showing the build server label or name I see no need for the URL. I think most people will find it uninteresting. Hence there should be a preference setting for turning this decoration off.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>331097</id>
      <title>Build plan tooltip should also describe "waiting" and "building" states</title>
      <description>When a build plan is waiting or building this is indicated using icon decorators. I think it would make sense if the tooltip described the state in clear text. Users not accustomed to the decorators will soon learn what they mean.</description>
      <attachments/>
      <comments>6</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>307655</id>
      <title>add an attribute for the the duplicated bug id in a duplicate bug</title>
      <description>Currently the Bugzilla connector does not return the id of the duplicated bug when a duplicate bug is queried using BugzillaClient.getTaskData().</description>
      <attachments/>
      <comments>9</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>315716</id>
      <title>[build] implement repository verification for Hudson</title>
      <description>Create a simple Hudson connector that is capable of verifying a repository: * Register connector extension * Implement validation * Create test cases</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>315151</id>
      <title>[build] Implement fetching Hudson build plans</title>
      <description>Get the Hudson build plans via HTTP/XML (unmarshalling provided by JAXB) and map it to the common builds model.</description>
      <attachments/>
      <comments>14</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>317384</id>
      <title>[build] add "Run build" functionality</title>
      <description>Users should be able to start a build on the CI server inside Eclipse.</description>
      <attachments/>
      <comments>17</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>318228</id>
      <title>[build] add build instances to build model</title>
      <description>A build instance represents a finished build, with includes data like console log and passed tests. A build plan can have zero to infinite build instances.</description>
      <attachments/>
      <comments>14</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>319644</id>
      <title>[build] add build details editor infrastructure</title>
      <description>Just the basic build details editor infrastructure. Split up because of patch size.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>319340</id>
      <title>[build] show Hudson views in build plan selection</title>
      <description>It would be helpful if the Hudson settings page showed views and nested build jobs. Also to better support servers with many build plans the list should have a find field for filtering (see bug 317891).</description>
      <attachments/>
      <comments>14</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>371752</id>
      <title>Provide factory method for ResourceSets used in EMFStructureBridge</title>
      <description>Currently, several methods in EMFStructureBridge create their own ResourceSets by simply calling new ResourceSetImpl(). This makes it hard for implementors to contribute specific ResourceSets or extend ResourceSet creation (i.e. in order to register additional adapter factories or package factories or when working with a specific EditingDomain). We should provide a factory method for the ResourceSet that makes the creation code easily overridable.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>371755</id>
      <title>Provide a plain UML2 connector without Papyrus dependency</title>
      <description>Since Mylyn currently does not support multiple StructureBridges with the same or overlapping supported elements, the StructureBridge registered for UML models should not depend on additional projects like Papyrus (or GMF). Currently, with the Uml2StructureBridge depending on Papyrus, every other UML project wanting to benefit from Mylyn integration would need to either - live with an otherwise unnecessary dependency to Papyrus - reimplement the Uml2StructureBridge, which will cause conflicts with a parallel installation of the Papyrus bridge</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>371898</id>
      <title>Include source bundles in MFT SDK feature</title>
      <description>The MFT SDK feature should include source bundles.</description>
      <attachments/>
      <comments>3</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>333612</id>
      <title>add support for IAdaptable to drop adapter in task list view</title>
      <description>When dropping items in the task list view the TaskListDropAdapter currently expects dropped object to be ITasks. It would be helpful if the drop adapter could check for IAdaptables that provide ITasks as well. This would make the view more flexible in supporting other components that work with tasks.</description>
      <attachments/>
      <comments>7</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>349924</id>
      <title>[api] provide extension point for task activation listeners</title>
      <description>This patch provides a new extension point to register task activation listeners. This enables plugins to register their listeners without the need to start the plugin itself, which would be necessary with programmatic registering.</description>
      <attachments/>
      <comments>10</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>364155</id>
      <title>[api] add a method to retrieve projects in current active context</title>
      <description>Build Identifier: Review is here: http://review.mylyn.org/#change,111 Adds a method to retrieve all IProject, that are contained in the currently active context. Reproducible: Always</description>
      <attachments/>
      <comments>21</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>363226</id>
      <title>Unit tests for GerritHttpClient</title>
      <description>org.eclipse.mylyn.internal.gerrit.core.client.GerritHttpClient has not unit tests.</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>347931</id>
      <title>[gerrit] Add free-form query</title>
      <description>Add new query type for free-form queries (same syntax as in Gerrit Web UI)</description>
      <attachments/>
      <comments>5</comments>
      <commenters>2</commenters>
    </issue>
    <issue>
      <id>349598</id>
      <title>PersonProposalProvider should set currentUser when populated by connectors</title>
      <description>Current user is not set and highlighted in content assist if the address set is populated by the proposals provided by the connector.</description>
      <attachments/>
      <comments>11</comments>
      <commenters>3</commenters>
    </issue>
    <issue>
      <id>357297</id>
      <title>[modeling] Support renaming of ecore model elements.</title>
      <description>Currently, when a class or other node is renamed, it is not automatically re-added to the context. We need to support this. I'm not sure how or if we'll be able to do this for all editors / views.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>1</commenters>
    </issue>
    <issue>
      <id>357544</id>
      <title>Make selection accessible from AbstractInterestManipulation</title>
      <description>Just a simple API addition for reuse.</description>
      <attachments/>
      <comments>4</comments>
      <commenters>2</commenters>
    </issue>
  </issues>
</root>
